package typingsJapgolly.chromeApps.chrome.enterprise

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

// #endregion
// #region chrome.enterprise.*
////////////////
// ENTERPRISE //
////////////////
/**
  * @requires Permissions: 'enterprise.deviceAttributes'
  * @requires Note: This API is only available to apps force-installed by enterprise policy.
  * @requires(CrOS) Only available on Chrome OS.
  * @since Chrome 46.
  * @description
  * Use the chrome.enterprise.deviceAttributes API to read device attributes.
  */
@JSGlobal("chrome.enterprise.deviceAttributes")
@js.native
object deviceAttributes extends js.Object {
  /**
    * @since Chrome 66.
    * @description
    * Fetches the administrator-annotated Location.
    * If the current user is not affiliated or no Annotated Location has been set by the administrator, returns an empty string.
    * @param callback Called with the Annotated Location of the device.
    */
  def getDeviceAnnotatedLocation(callback: js.Function1[/* annotatedLocation */ String, Unit]): Unit = js.native
  /**
    * @since Chrome 66.
    * @description
    * Fetches the administrator-annotated Asset Id.
    * If the current user is not affiliated or no Asset Id has been set by the administrator, returns an empty string.
    * @param callback Called with the Asset ID of the device.
    */
  def getDeviceAssetId(callback: js.Function1[/* assetId */ String, Unit]): Unit = js.native
  /**
    * @since Chrome 66.
    * @description
    * Fetches the device's serial number.
    * Please note the purpose of this API is to administrate the device
    * (e.g. generating Certificate Sign Requests for device-wide certificates).
    * This API may not be used for tracking devices without the consent of the device's administrator.
    * If the current user is not affiliated, returns an empty string.
    * @param callback Called with the serial number of the device.
    */
  def getDeviceSerialNumber(callback: js.Function1[/* serialNumber */ String, Unit]): Unit = js.native
  /**
    * @description
    * Fetches the value of the device identifier of the directory API,
    * that is generated by the server and identifies the cloud record
    * of the device for querying in the cloud directory API.
    * If the current user is not affiliated, returns an empty string.
    * @param callback Called with the device identifier of the directory API when received.
    */
  def getDirectoryDeviceId(callback: js.Function1[/* deviceId */ String, Unit]): Unit = js.native
}

