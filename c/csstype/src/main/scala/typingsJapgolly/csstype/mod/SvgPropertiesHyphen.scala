package typingsJapgolly.csstype.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait SvgPropertiesHyphen[TLength] extends js.Object {
  var `alignment-baseline`: js.UndefOr[AlignmentBaselineProperty] = js.undefined
  var `baseline-shift`: js.UndefOr[BaselineShiftProperty[TLength]] = js.undefined
  var clip: js.UndefOr[ClipProperty] = js.undefined
  var `clip-path`: js.UndefOr[ClipPathProperty] = js.undefined
  var `clip-rule`: js.UndefOr[ClipRuleProperty] = js.undefined
  var color: js.UndefOr[ColorProperty] = js.undefined
  var `color-interpolation`: js.UndefOr[ColorInterpolationProperty] = js.undefined
  var `color-rendering`: js.UndefOr[ColorRenderingProperty] = js.undefined
  var cursor: js.UndefOr[CursorProperty] = js.undefined
  var direction: js.UndefOr[DirectionProperty] = js.undefined
  var display: js.UndefOr[DisplayProperty] = js.undefined
  var `dominant-baseline`: js.UndefOr[DominantBaselineProperty] = js.undefined
  var fill: js.UndefOr[FillProperty] = js.undefined
  var `fill-opacity`: js.UndefOr[GlobalsNumber] = js.undefined
  var `fill-rule`: js.UndefOr[FillRuleProperty] = js.undefined
  var filter: js.UndefOr[FilterProperty] = js.undefined
  var `flood-color`: js.UndefOr[FloodColorProperty] = js.undefined
  var `flood-opacity`: js.UndefOr[GlobalsNumber] = js.undefined
  var font: js.UndefOr[FontProperty] = js.undefined
  var `font-family`: js.UndefOr[FontFamilyProperty] = js.undefined
  var `font-size`: js.UndefOr[FontSizeProperty[TLength]] = js.undefined
  var `font-size-adjust`: js.UndefOr[FontSizeAdjustProperty] = js.undefined
  var `font-stretch`: js.UndefOr[FontStretchProperty] = js.undefined
  var `font-style`: js.UndefOr[FontStyleProperty] = js.undefined
  var `font-variant`: js.UndefOr[FontVariantProperty] = js.undefined
  var `font-weight`: js.UndefOr[FontWeightProperty] = js.undefined
  var `glyph-orientation-vertical`: js.UndefOr[GlyphOrientationVerticalProperty] = js.undefined
  var `image-rendering`: js.UndefOr[ImageRenderingProperty] = js.undefined
  var `letter-spacing`: js.UndefOr[LetterSpacingProperty[TLength]] = js.undefined
  var `lighting-color`: js.UndefOr[LightingColorProperty] = js.undefined
  var `line-height`: js.UndefOr[LineHeightProperty[TLength]] = js.undefined
  var marker: js.UndefOr[MarkerProperty] = js.undefined
  var `marker-end`: js.UndefOr[MarkerEndProperty] = js.undefined
  var `marker-mid`: js.UndefOr[MarkerMidProperty] = js.undefined
  var `marker-start`: js.UndefOr[MarkerStartProperty] = js.undefined
  var mask: js.UndefOr[MaskProperty[TLength]] = js.undefined
  var opacity: js.UndefOr[GlobalsNumber] = js.undefined
  var overflow: js.UndefOr[OverflowProperty] = js.undefined
  var `paint-order`: js.UndefOr[PaintOrderProperty] = js.undefined
  var `pointer-events`: js.UndefOr[PointerEventsProperty] = js.undefined
  var `shape-rendering`: js.UndefOr[ShapeRenderingProperty] = js.undefined
  var `stop-color`: js.UndefOr[StopColorProperty] = js.undefined
  var `stop-opacity`: js.UndefOr[GlobalsNumber] = js.undefined
  var stroke: js.UndefOr[StrokeProperty] = js.undefined
  var `stroke-dasharray`: js.UndefOr[StrokeDasharrayProperty[TLength]] = js.undefined
  var `stroke-dashoffset`: js.UndefOr[StrokeDashoffsetProperty[TLength]] = js.undefined
  var `stroke-linecap`: js.UndefOr[StrokeLinecapProperty] = js.undefined
  var `stroke-linejoin`: js.UndefOr[StrokeLinejoinProperty] = js.undefined
  var `stroke-miterlimit`: js.UndefOr[GlobalsNumber] = js.undefined
  var `stroke-opacity`: js.UndefOr[GlobalsNumber] = js.undefined
  var `stroke-width`: js.UndefOr[StrokeWidthProperty[TLength]] = js.undefined
  var `text-anchor`: js.UndefOr[TextAnchorProperty] = js.undefined
  var `text-decoration`: js.UndefOr[TextDecorationProperty] = js.undefined
  var `text-rendering`: js.UndefOr[TextRenderingProperty] = js.undefined
  var `unicode-bidi`: js.UndefOr[UnicodeBidiProperty] = js.undefined
  var `vector-effect`: js.UndefOr[VectorEffectProperty] = js.undefined
  var visibility: js.UndefOr[VisibilityProperty] = js.undefined
  var `white-space`: js.UndefOr[WhiteSpaceProperty] = js.undefined
  var `word-spacing`: js.UndefOr[WordSpacingProperty[TLength]] = js.undefined
  var `writing-mode`: js.UndefOr[WritingModeProperty] = js.undefined
}

object SvgPropertiesHyphen {
  @scala.inline
  def apply[TLength](
    `alignment-baseline`: AlignmentBaselineProperty = null,
    `baseline-shift`: BaselineShiftProperty[TLength] = null,
    clip: ClipProperty = null,
    `clip-path`: ClipPathProperty = null,
    `clip-rule`: ClipRuleProperty = null,
    color: ColorProperty = null,
    `color-interpolation`: ColorInterpolationProperty = null,
    `color-rendering`: ColorRenderingProperty = null,
    cursor: CursorProperty = null,
    direction: DirectionProperty = null,
    display: DisplayProperty = null,
    `dominant-baseline`: DominantBaselineProperty = null,
    fill: FillProperty = null,
    `fill-opacity`: GlobalsNumber = null,
    `fill-rule`: FillRuleProperty = null,
    filter: FilterProperty = null,
    `flood-color`: FloodColorProperty = null,
    `flood-opacity`: GlobalsNumber = null,
    font: FontProperty = null,
    `font-family`: FontFamilyProperty = null,
    `font-size`: FontSizeProperty[TLength] = null,
    `font-size-adjust`: FontSizeAdjustProperty = null,
    `font-stretch`: FontStretchProperty = null,
    `font-style`: FontStyleProperty = null,
    `font-variant`: FontVariantProperty = null,
    `font-weight`: FontWeightProperty = null,
    `glyph-orientation-vertical`: GlyphOrientationVerticalProperty = null,
    `image-rendering`: ImageRenderingProperty = null,
    `letter-spacing`: LetterSpacingProperty[TLength] = null,
    `lighting-color`: LightingColorProperty = null,
    `line-height`: LineHeightProperty[TLength] = null,
    marker: MarkerProperty = null,
    `marker-end`: MarkerEndProperty = null,
    `marker-mid`: MarkerMidProperty = null,
    `marker-start`: MarkerStartProperty = null,
    mask: MaskProperty[TLength] = null,
    opacity: GlobalsNumber = null,
    overflow: OverflowProperty = null,
    `paint-order`: PaintOrderProperty = null,
    `pointer-events`: PointerEventsProperty = null,
    `shape-rendering`: ShapeRenderingProperty = null,
    `stop-color`: StopColorProperty = null,
    `stop-opacity`: GlobalsNumber = null,
    stroke: StrokeProperty = null,
    `stroke-dasharray`: StrokeDasharrayProperty[TLength] = null,
    `stroke-dashoffset`: StrokeDashoffsetProperty[TLength] = null,
    `stroke-linecap`: StrokeLinecapProperty = null,
    `stroke-linejoin`: StrokeLinejoinProperty = null,
    `stroke-miterlimit`: GlobalsNumber = null,
    `stroke-opacity`: GlobalsNumber = null,
    `stroke-width`: StrokeWidthProperty[TLength] = null,
    `text-anchor`: TextAnchorProperty = null,
    `text-decoration`: TextDecorationProperty = null,
    `text-rendering`: TextRenderingProperty = null,
    `unicode-bidi`: UnicodeBidiProperty = null,
    `vector-effect`: VectorEffectProperty = null,
    visibility: VisibilityProperty = null,
    `white-space`: WhiteSpaceProperty = null,
    `word-spacing`: WordSpacingProperty[TLength] = null,
    `writing-mode`: WritingModeProperty = null
  ): SvgPropertiesHyphen[TLength] = {
    val __obj = js.Dynamic.literal()
    if (`alignment-baseline` != null) __obj.updateDynamic("alignment-baseline")(`alignment-baseline`.asInstanceOf[js.Any])
    if (`baseline-shift` != null) __obj.updateDynamic("baseline-shift")(`baseline-shift`.asInstanceOf[js.Any])
    if (clip != null) __obj.updateDynamic("clip")(clip.asInstanceOf[js.Any])
    if (`clip-path` != null) __obj.updateDynamic("clip-path")(`clip-path`.asInstanceOf[js.Any])
    if (`clip-rule` != null) __obj.updateDynamic("clip-rule")(`clip-rule`.asInstanceOf[js.Any])
    if (color != null) __obj.updateDynamic("color")(color.asInstanceOf[js.Any])
    if (`color-interpolation` != null) __obj.updateDynamic("color-interpolation")(`color-interpolation`.asInstanceOf[js.Any])
    if (`color-rendering` != null) __obj.updateDynamic("color-rendering")(`color-rendering`.asInstanceOf[js.Any])
    if (cursor != null) __obj.updateDynamic("cursor")(cursor.asInstanceOf[js.Any])
    if (direction != null) __obj.updateDynamic("direction")(direction.asInstanceOf[js.Any])
    if (display != null) __obj.updateDynamic("display")(display.asInstanceOf[js.Any])
    if (`dominant-baseline` != null) __obj.updateDynamic("dominant-baseline")(`dominant-baseline`.asInstanceOf[js.Any])
    if (fill != null) __obj.updateDynamic("fill")(fill.asInstanceOf[js.Any])
    if (`fill-opacity` != null) __obj.updateDynamic("fill-opacity")(`fill-opacity`.asInstanceOf[js.Any])
    if (`fill-rule` != null) __obj.updateDynamic("fill-rule")(`fill-rule`.asInstanceOf[js.Any])
    if (filter != null) __obj.updateDynamic("filter")(filter.asInstanceOf[js.Any])
    if (`flood-color` != null) __obj.updateDynamic("flood-color")(`flood-color`.asInstanceOf[js.Any])
    if (`flood-opacity` != null) __obj.updateDynamic("flood-opacity")(`flood-opacity`.asInstanceOf[js.Any])
    if (font != null) __obj.updateDynamic("font")(font.asInstanceOf[js.Any])
    if (`font-family` != null) __obj.updateDynamic("font-family")(`font-family`.asInstanceOf[js.Any])
    if (`font-size` != null) __obj.updateDynamic("font-size")(`font-size`.asInstanceOf[js.Any])
    if (`font-size-adjust` != null) __obj.updateDynamic("font-size-adjust")(`font-size-adjust`.asInstanceOf[js.Any])
    if (`font-stretch` != null) __obj.updateDynamic("font-stretch")(`font-stretch`.asInstanceOf[js.Any])
    if (`font-style` != null) __obj.updateDynamic("font-style")(`font-style`.asInstanceOf[js.Any])
    if (`font-variant` != null) __obj.updateDynamic("font-variant")(`font-variant`.asInstanceOf[js.Any])
    if (`font-weight` != null) __obj.updateDynamic("font-weight")(`font-weight`.asInstanceOf[js.Any])
    if (`glyph-orientation-vertical` != null) __obj.updateDynamic("glyph-orientation-vertical")(`glyph-orientation-vertical`.asInstanceOf[js.Any])
    if (`image-rendering` != null) __obj.updateDynamic("image-rendering")(`image-rendering`.asInstanceOf[js.Any])
    if (`letter-spacing` != null) __obj.updateDynamic("letter-spacing")(`letter-spacing`.asInstanceOf[js.Any])
    if (`lighting-color` != null) __obj.updateDynamic("lighting-color")(`lighting-color`.asInstanceOf[js.Any])
    if (`line-height` != null) __obj.updateDynamic("line-height")(`line-height`.asInstanceOf[js.Any])
    if (marker != null) __obj.updateDynamic("marker")(marker.asInstanceOf[js.Any])
    if (`marker-end` != null) __obj.updateDynamic("marker-end")(`marker-end`.asInstanceOf[js.Any])
    if (`marker-mid` != null) __obj.updateDynamic("marker-mid")(`marker-mid`.asInstanceOf[js.Any])
    if (`marker-start` != null) __obj.updateDynamic("marker-start")(`marker-start`.asInstanceOf[js.Any])
    if (mask != null) __obj.updateDynamic("mask")(mask.asInstanceOf[js.Any])
    if (opacity != null) __obj.updateDynamic("opacity")(opacity.asInstanceOf[js.Any])
    if (overflow != null) __obj.updateDynamic("overflow")(overflow.asInstanceOf[js.Any])
    if (`paint-order` != null) __obj.updateDynamic("paint-order")(`paint-order`.asInstanceOf[js.Any])
    if (`pointer-events` != null) __obj.updateDynamic("pointer-events")(`pointer-events`.asInstanceOf[js.Any])
    if (`shape-rendering` != null) __obj.updateDynamic("shape-rendering")(`shape-rendering`.asInstanceOf[js.Any])
    if (`stop-color` != null) __obj.updateDynamic("stop-color")(`stop-color`.asInstanceOf[js.Any])
    if (`stop-opacity` != null) __obj.updateDynamic("stop-opacity")(`stop-opacity`.asInstanceOf[js.Any])
    if (stroke != null) __obj.updateDynamic("stroke")(stroke.asInstanceOf[js.Any])
    if (`stroke-dasharray` != null) __obj.updateDynamic("stroke-dasharray")(`stroke-dasharray`.asInstanceOf[js.Any])
    if (`stroke-dashoffset` != null) __obj.updateDynamic("stroke-dashoffset")(`stroke-dashoffset`.asInstanceOf[js.Any])
    if (`stroke-linecap` != null) __obj.updateDynamic("stroke-linecap")(`stroke-linecap`.asInstanceOf[js.Any])
    if (`stroke-linejoin` != null) __obj.updateDynamic("stroke-linejoin")(`stroke-linejoin`.asInstanceOf[js.Any])
    if (`stroke-miterlimit` != null) __obj.updateDynamic("stroke-miterlimit")(`stroke-miterlimit`.asInstanceOf[js.Any])
    if (`stroke-opacity` != null) __obj.updateDynamic("stroke-opacity")(`stroke-opacity`.asInstanceOf[js.Any])
    if (`stroke-width` != null) __obj.updateDynamic("stroke-width")(`stroke-width`.asInstanceOf[js.Any])
    if (`text-anchor` != null) __obj.updateDynamic("text-anchor")(`text-anchor`.asInstanceOf[js.Any])
    if (`text-decoration` != null) __obj.updateDynamic("text-decoration")(`text-decoration`.asInstanceOf[js.Any])
    if (`text-rendering` != null) __obj.updateDynamic("text-rendering")(`text-rendering`.asInstanceOf[js.Any])
    if (`unicode-bidi` != null) __obj.updateDynamic("unicode-bidi")(`unicode-bidi`.asInstanceOf[js.Any])
    if (`vector-effect` != null) __obj.updateDynamic("vector-effect")(`vector-effect`.asInstanceOf[js.Any])
    if (visibility != null) __obj.updateDynamic("visibility")(visibility.asInstanceOf[js.Any])
    if (`white-space` != null) __obj.updateDynamic("white-space")(`white-space`.asInstanceOf[js.Any])
    if (`word-spacing` != null) __obj.updateDynamic("word-spacing")(`word-spacing`.asInstanceOf[js.Any])
    if (`writing-mode` != null) __obj.updateDynamic("writing-mode")(`writing-mode`.asInstanceOf[js.Any])
    __obj.asInstanceOf[SvgPropertiesHyphen[TLength]]
  }
}

