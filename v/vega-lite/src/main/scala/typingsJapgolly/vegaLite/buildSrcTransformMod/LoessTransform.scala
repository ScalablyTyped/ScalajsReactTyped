package typingsJapgolly.vegaLite.buildSrcTransformMod

import typingsJapgolly.vegaLite.buildSrcChanneldefMod.FieldName
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait LoessTransform
  extends StObject
     with Transform {
  
  /**
    * The output field names for the smoothed points generated by the loess transform.
    *
    * __Default value:__ The field names of the input x and y values.
    */
  var as: js.UndefOr[js.Tuple2[FieldName, FieldName]] = js.undefined
  
  /**
    * A bandwidth parameter in the range `[0, 1]` that determines the amount of smoothing.
    *
    * __Default value:__ `0.3`
    */
  var bandwidth: js.UndefOr[Double] = js.undefined
  
  /**
    * The data fields to group by. If not specified, a single group containing all data objects will be used.
    */
  var groupby: js.UndefOr[js.Array[FieldName]] = js.undefined
  
  /**
    * The data field of the dependent variable to smooth.
    */
  var loess: FieldName
  
  /**
    * The data field of the independent variable to use a predictor.
    */
  var on: FieldName
}
object LoessTransform {
  
  inline def apply(loess: FieldName, on: FieldName): LoessTransform = {
    val __obj = js.Dynamic.literal(loess = loess.asInstanceOf[js.Any], on = on.asInstanceOf[js.Any])
    __obj.asInstanceOf[LoessTransform]
  }
  
  extension [Self <: LoessTransform](x: Self) {
    
    inline def setAs(value: js.Tuple2[FieldName, FieldName]): Self = StObject.set(x, "as", value.asInstanceOf[js.Any])
    
    inline def setAsUndefined: Self = StObject.set(x, "as", js.undefined)
    
    inline def setBandwidth(value: Double): Self = StObject.set(x, "bandwidth", value.asInstanceOf[js.Any])
    
    inline def setBandwidthUndefined: Self = StObject.set(x, "bandwidth", js.undefined)
    
    inline def setGroupby(value: js.Array[FieldName]): Self = StObject.set(x, "groupby", value.asInstanceOf[js.Any])
    
    inline def setGroupbyUndefined: Self = StObject.set(x, "groupby", js.undefined)
    
    inline def setGroupbyVarargs(value: FieldName*): Self = StObject.set(x, "groupby", js.Array(value*))
    
    inline def setLoess(value: FieldName): Self = StObject.set(x, "loess", value.asInstanceOf[js.Any])
    
    inline def setOn(value: FieldName): Self = StObject.set(x, "on", value.asInstanceOf[js.Any])
  }
}
