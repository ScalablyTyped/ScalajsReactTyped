package typingsJapgolly.vhtml.mod.JSX

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

// The following interfaces were generated by transforming large sections of
// JSX type definitions in @types/react 17.0.3. Those type definitions were
// produced by multiple contributors, including, but not limited to:
//
//                 AssureSign <http://www.assuresign.com>
//                 Microsoft <https://microsoft.com>
//                 John Reilly <https://github.com/johnnyreilly>
//                 Benoit Benezech <https://github.com/bbenezech>
//                 Patricio Zavolinsky <https://github.com/pzavolinsky>
//                 Eric Anderson <https://github.com/ericanderson>
//                 Dovydas Navickas <https://github.com/DovydasNavickas>
//                 Josh Rutherford <https://github.com/theruther4d>
//                 Guilherme Hübner <https://github.com/guilhermehubner>
//                 Ferdy Budhidharma <https://github.com/ferdaber>
//                 Johann Rakotoharisoa <https://github.com/jrakotoharisoa>
//                 Olivier Pascal <https://github.com/pascaloliv>
//                 Martin Hochel <https://github.com/hotell>
//                 Frank Li <https://github.com/franklixuefei>
//                 Jessica Franco <https://github.com/Jessidhia>
//                 Saransh Kataria <https://github.com/saranshkataria>
//                 Kanitkorn Sujautra <https://github.com/lukyth>
//                 Sebastian Silbermann <https://github.com/eps1lon>
//                 Kyle Scully <https://github.com/zieka>
//                 Cong Zhang <https://github.com/dancerphil>
//                 Dimitri Mitropoulos <https://github.com/dimitropoulos>
//                 JongChan Choi <https://github.com/disjukr>
//                 Victor Magalhães <https://github.com/vhfmag>
//                 Dale Tan <https://github.com/hellatan>
//
// See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/index.d.ts
// for the up-to-date list of contributors to @types/react
trait IntrinsicElements extends StObject {
  
  var a: AnchorHTMLAttributes
  
  var abbr: HTMLAttributes
  
  var address: HTMLAttributes
  
  var animate: SVGProps
  
  var animateMotion: SVGProps
  
  var animateTransform: SVGProps
  
  var area: AreaHTMLAttributes
  
  var article: HTMLAttributes
  
  var aside: HTMLAttributes
  
  var audio: AudioHTMLAttributes
  
  var b: HTMLAttributes
  
  var base: BaseHTMLAttributes
  
  var bdi: HTMLAttributes
  
  var bdo: HTMLAttributes
  
  var big: HTMLAttributes
  
  var blockquote: BlockquoteHTMLAttributes
  
  var body: HTMLAttributes
  
  var br: HTMLAttributes
  
  var button: ButtonHTMLAttributes
  
  var canvas: CanvasHTMLAttributes
  
  var caption: HTMLAttributes
  
  var circle: SVGProps
  
  var cite: HTMLAttributes
  
  var clipPath: SVGProps
  
  var code: HTMLAttributes
  
  var col: ColHTMLAttributes
  
  var colgroup: ColgroupHTMLAttributes
  
  var data: DataHTMLAttributes
  
  var datalist: HTMLAttributes
  
  var dd: HTMLAttributes
  
  var defs: SVGProps
  
  var del: DelHTMLAttributes
  
  var desc: SVGProps
  
  var details: DetailsHTMLAttributes
  
  var dfn: HTMLAttributes
  
  var dialog: DialogHTMLAttributes
  
  var div: HTMLAttributes
  
  var dl: HTMLAttributes
  
  var dt: HTMLAttributes
  
  var ellipse: SVGProps
  
  var em: HTMLAttributes
  
  var embed: EmbedHTMLAttributes
  
  var feBlend: SVGProps
  
  var feColorMatrix: SVGProps
  
  var feComponentTransfer: SVGProps
  
  var feComposite: SVGProps
  
  var feConvolveMatrix: SVGProps
  
  var feDiffuseLighting: SVGProps
  
  var feDisplacementMap: SVGProps
  
  var feDistantLight: SVGProps
  
  var feDropShadow: SVGProps
  
  var feFlood: SVGProps
  
  var feFuncA: SVGProps
  
  var feFuncB: SVGProps
  
  var feFuncG: SVGProps
  
  var feFuncR: SVGProps
  
  var feGaussianBlur: SVGProps
  
  var feImage: SVGProps
  
  var feMerge: SVGProps
  
  var feMergeNode: SVGProps
  
  var feMorphology: SVGProps
  
  var feOffset: SVGProps
  
  var fePointLight: SVGProps
  
  var feSpecularLighting: SVGProps
  
  var feSpotLight: SVGProps
  
  var feTile: SVGProps
  
  var feTurbulence: SVGProps
  
  var fieldset: FieldsetHTMLAttributes
  
  var figcaption: HTMLAttributes
  
  var figure: HTMLAttributes
  
  var filter: SVGProps
  
  var footer: HTMLAttributes
  
  var foreignObject: SVGProps
  
  var form: FormHTMLAttributes
  
  var g: SVGProps
  
  var h1: HTMLAttributes
  
  var h2: HTMLAttributes
  
  var h3: HTMLAttributes
  
  var h4: HTMLAttributes
  
  var h5: HTMLAttributes
  
  var h6: HTMLAttributes
  
  var head: HTMLAttributes
  
  var header: HTMLAttributes
  
  var hgroup: HTMLAttributes
  
  var hr: HTMLAttributes
  
  var html: HtmlHTMLAttributes
  
  var i: HTMLAttributes
  
  var iframe: IframeHTMLAttributes
  
  var image: SVGProps
  
  var img: ImgHTMLAttributes
  
  var input: InputHTMLAttributes
  
  var ins: InsHTMLAttributes
  
  var kbd: HTMLAttributes
  
  var keygen: KeygenHTMLAttributes
  
  var label: LabelHTMLAttributes
  
  var legend: HTMLAttributes
  
  var li: LiHTMLAttributes
  
  var line: SVGProps
  
  var linearGradient: SVGProps
  
  var link: LinkHTMLAttributes
  
  var main: HTMLAttributes
  
  var map: MapHTMLAttributes
  
  var mark: HTMLAttributes
  
  var marker: SVGProps
  
  var mask: SVGProps
  
  var menu: MenuHTMLAttributes
  
  var menuitem: HTMLAttributes
  
  var meta: MetaHTMLAttributes
  
  var metadata: SVGProps
  
  var meter: MeterHTMLAttributes
  
  var mpath: SVGProps
  
  var nav: HTMLAttributes
  
  var noindex: HTMLAttributes
  
  var noscript: HTMLAttributes
  
  var `object`: ObjectHTMLAttributes
  
  var ol: OlHTMLAttributes
  
  var optgroup: OptgroupHTMLAttributes
  
  var option: OptionHTMLAttributes
  
  var output: OutputHTMLAttributes
  
  var p: HTMLAttributes
  
  var param: ParamHTMLAttributes
  
  var path: SVGProps
  
  var pattern: SVGProps
  
  var picture: HTMLAttributes
  
  var polygon: SVGProps
  
  var polyline: SVGProps
  
  var pre: HTMLAttributes
  
  var progress: ProgressHTMLAttributes
  
  var q: QuoteHTMLAttributes
  
  var radialGradient: SVGProps
  
  var rect: SVGProps
  
  var rp: HTMLAttributes
  
  var rt: HTMLAttributes
  
  var ruby: HTMLAttributes
  
  var s: HTMLAttributes
  
  var samp: HTMLAttributes
  
  var script: ScriptHTMLAttributes
  
  var section: HTMLAttributes
  
  var select: SelectHTMLAttributes
  
  var slot: SlotHTMLAttributes
  
  var small: HTMLAttributes
  
  var source: SourceHTMLAttributes
  
  var span: HTMLAttributes
  
  var stop: SVGProps
  
  var strong: HTMLAttributes
  
  var style: StyleHTMLAttributes
  
  var sub: HTMLAttributes
  
  var summary: HTMLAttributes
  
  var sup: HTMLAttributes
  
  var svg: SVGProps
  
  var switch: SVGProps
  
  var symbol: SVGProps
  
  var table: TableHTMLAttributes
  
  var tbody: HTMLAttributes
  
  var td: TdHTMLAttributes
  
  var template: HTMLAttributes
  
  var text: SVGProps
  
  var textPath: SVGProps
  
  var textarea: TextareaHTMLAttributes
  
  var tfoot: HTMLAttributes
  
  var th: ThHTMLAttributes
  
  var thead: HTMLAttributes
  
  var time: TimeHTMLAttributes
  
  var title: HTMLAttributes
  
  var tr: HTMLAttributes
  
  var track: TrackHTMLAttributes
  
  var tspan: SVGProps
  
  var u: HTMLAttributes
  
  var ul: HTMLAttributes
  
  var use: SVGProps
  
  var `var`: HTMLAttributes
  
  var video: VideoHTMLAttributes
  
  var view: SVGProps
  
  var wbr: HTMLAttributes
  
  var webview: WebViewHTMLAttributes
}
object IntrinsicElements {
  
  inline def apply(
    a: AnchorHTMLAttributes,
    abbr: HTMLAttributes,
    address: HTMLAttributes,
    animate: SVGProps,
    animateMotion: SVGProps,
    animateTransform: SVGProps,
    area: AreaHTMLAttributes,
    article: HTMLAttributes,
    aside: HTMLAttributes,
    audio: AudioHTMLAttributes,
    b: HTMLAttributes,
    base: BaseHTMLAttributes,
    bdi: HTMLAttributes,
    bdo: HTMLAttributes,
    big: HTMLAttributes,
    blockquote: BlockquoteHTMLAttributes,
    body: HTMLAttributes,
    br: HTMLAttributes,
    button: ButtonHTMLAttributes,
    canvas: CanvasHTMLAttributes,
    caption: HTMLAttributes,
    circle: SVGProps,
    cite: HTMLAttributes,
    clipPath: SVGProps,
    code: HTMLAttributes,
    col: ColHTMLAttributes,
    colgroup: ColgroupHTMLAttributes,
    data: DataHTMLAttributes,
    datalist: HTMLAttributes,
    dd: HTMLAttributes,
    defs: SVGProps,
    del: DelHTMLAttributes,
    desc: SVGProps,
    details: DetailsHTMLAttributes,
    dfn: HTMLAttributes,
    dialog: DialogHTMLAttributes,
    div: HTMLAttributes,
    dl: HTMLAttributes,
    dt: HTMLAttributes,
    ellipse: SVGProps,
    em: HTMLAttributes,
    embed: EmbedHTMLAttributes,
    feBlend: SVGProps,
    feColorMatrix: SVGProps,
    feComponentTransfer: SVGProps,
    feComposite: SVGProps,
    feConvolveMatrix: SVGProps,
    feDiffuseLighting: SVGProps,
    feDisplacementMap: SVGProps,
    feDistantLight: SVGProps,
    feDropShadow: SVGProps,
    feFlood: SVGProps,
    feFuncA: SVGProps,
    feFuncB: SVGProps,
    feFuncG: SVGProps,
    feFuncR: SVGProps,
    feGaussianBlur: SVGProps,
    feImage: SVGProps,
    feMerge: SVGProps,
    feMergeNode: SVGProps,
    feMorphology: SVGProps,
    feOffset: SVGProps,
    fePointLight: SVGProps,
    feSpecularLighting: SVGProps,
    feSpotLight: SVGProps,
    feTile: SVGProps,
    feTurbulence: SVGProps,
    fieldset: FieldsetHTMLAttributes,
    figcaption: HTMLAttributes,
    figure: HTMLAttributes,
    filter: SVGProps,
    footer: HTMLAttributes,
    foreignObject: SVGProps,
    form: FormHTMLAttributes,
    g: SVGProps,
    h1: HTMLAttributes,
    h2: HTMLAttributes,
    h3: HTMLAttributes,
    h4: HTMLAttributes,
    h5: HTMLAttributes,
    h6: HTMLAttributes,
    head: HTMLAttributes,
    header: HTMLAttributes,
    hgroup: HTMLAttributes,
    hr: HTMLAttributes,
    html: HtmlHTMLAttributes,
    i: HTMLAttributes,
    iframe: IframeHTMLAttributes,
    image: SVGProps,
    img: ImgHTMLAttributes,
    input: InputHTMLAttributes,
    ins: InsHTMLAttributes,
    kbd: HTMLAttributes,
    keygen: KeygenHTMLAttributes,
    label: LabelHTMLAttributes,
    legend: HTMLAttributes,
    li: LiHTMLAttributes,
    line: SVGProps,
    linearGradient: SVGProps,
    link: LinkHTMLAttributes,
    main: HTMLAttributes,
    map: MapHTMLAttributes,
    mark: HTMLAttributes,
    marker: SVGProps,
    mask: SVGProps,
    menu: MenuHTMLAttributes,
    menuitem: HTMLAttributes,
    meta: MetaHTMLAttributes,
    metadata: SVGProps,
    meter: MeterHTMLAttributes,
    mpath: SVGProps,
    nav: HTMLAttributes,
    noindex: HTMLAttributes,
    noscript: HTMLAttributes,
    `object`: ObjectHTMLAttributes,
    ol: OlHTMLAttributes,
    optgroup: OptgroupHTMLAttributes,
    option: OptionHTMLAttributes,
    output: OutputHTMLAttributes,
    p: HTMLAttributes,
    param: ParamHTMLAttributes,
    path: SVGProps,
    pattern: SVGProps,
    picture: HTMLAttributes,
    polygon: SVGProps,
    polyline: SVGProps,
    pre: HTMLAttributes,
    progress: ProgressHTMLAttributes,
    q: QuoteHTMLAttributes,
    radialGradient: SVGProps,
    rect: SVGProps,
    rp: HTMLAttributes,
    rt: HTMLAttributes,
    ruby: HTMLAttributes,
    s: HTMLAttributes,
    samp: HTMLAttributes,
    script: ScriptHTMLAttributes,
    section: HTMLAttributes,
    select: SelectHTMLAttributes,
    slot: SlotHTMLAttributes,
    small: HTMLAttributes,
    source: SourceHTMLAttributes,
    span: HTMLAttributes,
    stop: SVGProps,
    strong: HTMLAttributes,
    style: StyleHTMLAttributes,
    sub: HTMLAttributes,
    summary: HTMLAttributes,
    sup: HTMLAttributes,
    svg: SVGProps,
    switch: SVGProps,
    symbol: SVGProps,
    table: TableHTMLAttributes,
    tbody: HTMLAttributes,
    td: TdHTMLAttributes,
    template: HTMLAttributes,
    text: SVGProps,
    textPath: SVGProps,
    textarea: TextareaHTMLAttributes,
    tfoot: HTMLAttributes,
    th: ThHTMLAttributes,
    thead: HTMLAttributes,
    time: TimeHTMLAttributes,
    title: HTMLAttributes,
    tr: HTMLAttributes,
    track: TrackHTMLAttributes,
    tspan: SVGProps,
    u: HTMLAttributes,
    ul: HTMLAttributes,
    use: SVGProps,
    `var`: HTMLAttributes,
    video: VideoHTMLAttributes,
    view: SVGProps,
    wbr: HTMLAttributes,
    webview: WebViewHTMLAttributes
  ): IntrinsicElements = {
    val __obj = js.Dynamic.literal(a = a.asInstanceOf[js.Any], abbr = abbr.asInstanceOf[js.Any], address = address.asInstanceOf[js.Any], animate = animate.asInstanceOf[js.Any], animateMotion = animateMotion.asInstanceOf[js.Any], animateTransform = animateTransform.asInstanceOf[js.Any], area = area.asInstanceOf[js.Any], article = article.asInstanceOf[js.Any], aside = aside.asInstanceOf[js.Any], audio = audio.asInstanceOf[js.Any], b = b.asInstanceOf[js.Any], base = base.asInstanceOf[js.Any], bdi = bdi.asInstanceOf[js.Any], bdo = bdo.asInstanceOf[js.Any], big = big.asInstanceOf[js.Any], blockquote = blockquote.asInstanceOf[js.Any], body = body.asInstanceOf[js.Any], br = br.asInstanceOf[js.Any], button = button.asInstanceOf[js.Any], canvas = canvas.asInstanceOf[js.Any], caption = caption.asInstanceOf[js.Any], circle = circle.asInstanceOf[js.Any], cite = cite.asInstanceOf[js.Any], clipPath = clipPath.asInstanceOf[js.Any], code = code.asInstanceOf[js.Any], col = col.asInstanceOf[js.Any], colgroup = colgroup.asInstanceOf[js.Any], data = data.asInstanceOf[js.Any], datalist = datalist.asInstanceOf[js.Any], dd = dd.asInstanceOf[js.Any], defs = defs.asInstanceOf[js.Any], del = del.asInstanceOf[js.Any], desc = desc.asInstanceOf[js.Any], details = details.asInstanceOf[js.Any], dfn = dfn.asInstanceOf[js.Any], dialog = dialog.asInstanceOf[js.Any], div = div.asInstanceOf[js.Any], dl = dl.asInstanceOf[js.Any], dt = dt.asInstanceOf[js.Any], ellipse = ellipse.asInstanceOf[js.Any], em = em.asInstanceOf[js.Any], embed = embed.asInstanceOf[js.Any], feBlend = feBlend.asInstanceOf[js.Any], feColorMatrix = feColorMatrix.asInstanceOf[js.Any], feComponentTransfer = feComponentTransfer.asInstanceOf[js.Any], feComposite = feComposite.asInstanceOf[js.Any], feConvolveMatrix = feConvolveMatrix.asInstanceOf[js.Any], feDiffuseLighting = feDiffuseLighting.asInstanceOf[js.Any], feDisplacementMap = feDisplacementMap.asInstanceOf[js.Any], feDistantLight = feDistantLight.asInstanceOf[js.Any], feDropShadow = feDropShadow.asInstanceOf[js.Any], feFlood = feFlood.asInstanceOf[js.Any], feFuncA = feFuncA.asInstanceOf[js.Any], feFuncB = feFuncB.asInstanceOf[js.Any], feFuncG = feFuncG.asInstanceOf[js.Any], feFuncR = feFuncR.asInstanceOf[js.Any], feGaussianBlur = feGaussianBlur.asInstanceOf[js.Any], feImage = feImage.asInstanceOf[js.Any], feMerge = feMerge.asInstanceOf[js.Any], feMergeNode = feMergeNode.asInstanceOf[js.Any], feMorphology = feMorphology.asInstanceOf[js.Any], feOffset = feOffset.asInstanceOf[js.Any], fePointLight = fePointLight.asInstanceOf[js.Any], feSpecularLighting = feSpecularLighting.asInstanceOf[js.Any], feSpotLight = feSpotLight.asInstanceOf[js.Any], feTile = feTile.asInstanceOf[js.Any], feTurbulence = feTurbulence.asInstanceOf[js.Any], fieldset = fieldset.asInstanceOf[js.Any], figcaption = figcaption.asInstanceOf[js.Any], figure = figure.asInstanceOf[js.Any], filter = filter.asInstanceOf[js.Any], footer = footer.asInstanceOf[js.Any], foreignObject = foreignObject.asInstanceOf[js.Any], form = form.asInstanceOf[js.Any], g = g.asInstanceOf[js.Any], h1 = h1.asInstanceOf[js.Any], h2 = h2.asInstanceOf[js.Any], h3 = h3.asInstanceOf[js.Any], h4 = h4.asInstanceOf[js.Any], h5 = h5.asInstanceOf[js.Any], h6 = h6.asInstanceOf[js.Any], head = head.asInstanceOf[js.Any], header = header.asInstanceOf[js.Any], hgroup = hgroup.asInstanceOf[js.Any], hr = hr.asInstanceOf[js.Any], html = html.asInstanceOf[js.Any], i = i.asInstanceOf[js.Any], iframe = iframe.asInstanceOf[js.Any], image = image.asInstanceOf[js.Any], img = img.asInstanceOf[js.Any], input = input.asInstanceOf[js.Any], ins = ins.asInstanceOf[js.Any], kbd = kbd.asInstanceOf[js.Any], keygen = keygen.asInstanceOf[js.Any], label = label.asInstanceOf[js.Any], legend = legend.asInstanceOf[js.Any], li = li.asInstanceOf[js.Any], line = line.asInstanceOf[js.Any], linearGradient = linearGradient.asInstanceOf[js.Any], link = link.asInstanceOf[js.Any], main = main.asInstanceOf[js.Any], map = map.asInstanceOf[js.Any], mark = mark.asInstanceOf[js.Any], marker = marker.asInstanceOf[js.Any], mask = mask.asInstanceOf[js.Any], menu = menu.asInstanceOf[js.Any], menuitem = menuitem.asInstanceOf[js.Any], meta = meta.asInstanceOf[js.Any], metadata = metadata.asInstanceOf[js.Any], meter = meter.asInstanceOf[js.Any], mpath = mpath.asInstanceOf[js.Any], nav = nav.asInstanceOf[js.Any], noindex = noindex.asInstanceOf[js.Any], noscript = noscript.asInstanceOf[js.Any], ol = ol.asInstanceOf[js.Any], optgroup = optgroup.asInstanceOf[js.Any], option = option.asInstanceOf[js.Any], output = output.asInstanceOf[js.Any], p = p.asInstanceOf[js.Any], param = param.asInstanceOf[js.Any], path = path.asInstanceOf[js.Any], pattern = pattern.asInstanceOf[js.Any], picture = picture.asInstanceOf[js.Any], polygon = polygon.asInstanceOf[js.Any], polyline = polyline.asInstanceOf[js.Any], pre = pre.asInstanceOf[js.Any], progress = progress.asInstanceOf[js.Any], q = q.asInstanceOf[js.Any], radialGradient = radialGradient.asInstanceOf[js.Any], rect = rect.asInstanceOf[js.Any], rp = rp.asInstanceOf[js.Any], rt = rt.asInstanceOf[js.Any], ruby = ruby.asInstanceOf[js.Any], s = s.asInstanceOf[js.Any], samp = samp.asInstanceOf[js.Any], script = script.asInstanceOf[js.Any], section = section.asInstanceOf[js.Any], select = select.asInstanceOf[js.Any], slot = slot.asInstanceOf[js.Any], small = small.asInstanceOf[js.Any], source = source.asInstanceOf[js.Any], span = span.asInstanceOf[js.Any], stop = stop.asInstanceOf[js.Any], strong = strong.asInstanceOf[js.Any], style = style.asInstanceOf[js.Any], sub = sub.asInstanceOf[js.Any], summary = summary.asInstanceOf[js.Any], sup = sup.asInstanceOf[js.Any], svg = svg.asInstanceOf[js.Any], switch = switch.asInstanceOf[js.Any], symbol = symbol.asInstanceOf[js.Any], table = table.asInstanceOf[js.Any], tbody = tbody.asInstanceOf[js.Any], td = td.asInstanceOf[js.Any], template = template.asInstanceOf[js.Any], text = text.asInstanceOf[js.Any], textPath = textPath.asInstanceOf[js.Any], textarea = textarea.asInstanceOf[js.Any], tfoot = tfoot.asInstanceOf[js.Any], th = th.asInstanceOf[js.Any], thead = thead.asInstanceOf[js.Any], time = time.asInstanceOf[js.Any], title = title.asInstanceOf[js.Any], tr = tr.asInstanceOf[js.Any], track = track.asInstanceOf[js.Any], tspan = tspan.asInstanceOf[js.Any], u = u.asInstanceOf[js.Any], ul = ul.asInstanceOf[js.Any], use = use.asInstanceOf[js.Any], video = video.asInstanceOf[js.Any], view = view.asInstanceOf[js.Any], wbr = wbr.asInstanceOf[js.Any], webview = webview.asInstanceOf[js.Any])
    __obj.updateDynamic("object")(`object`.asInstanceOf[js.Any])
    __obj.updateDynamic("var")(`var`.asInstanceOf[js.Any])
    __obj.asInstanceOf[IntrinsicElements]
  }
  
  extension [Self <: IntrinsicElements](x: Self) {
    
    inline def setA(value: AnchorHTMLAttributes): Self = StObject.set(x, "a", value.asInstanceOf[js.Any])
    
    inline def setAbbr(value: HTMLAttributes): Self = StObject.set(x, "abbr", value.asInstanceOf[js.Any])
    
    inline def setAddress(value: HTMLAttributes): Self = StObject.set(x, "address", value.asInstanceOf[js.Any])
    
    inline def setAnimate(value: SVGProps): Self = StObject.set(x, "animate", value.asInstanceOf[js.Any])
    
    inline def setAnimateMotion(value: SVGProps): Self = StObject.set(x, "animateMotion", value.asInstanceOf[js.Any])
    
    inline def setAnimateTransform(value: SVGProps): Self = StObject.set(x, "animateTransform", value.asInstanceOf[js.Any])
    
    inline def setArea(value: AreaHTMLAttributes): Self = StObject.set(x, "area", value.asInstanceOf[js.Any])
    
    inline def setArticle(value: HTMLAttributes): Self = StObject.set(x, "article", value.asInstanceOf[js.Any])
    
    inline def setAside(value: HTMLAttributes): Self = StObject.set(x, "aside", value.asInstanceOf[js.Any])
    
    inline def setAudio(value: AudioHTMLAttributes): Self = StObject.set(x, "audio", value.asInstanceOf[js.Any])
    
    inline def setB(value: HTMLAttributes): Self = StObject.set(x, "b", value.asInstanceOf[js.Any])
    
    inline def setBase(value: BaseHTMLAttributes): Self = StObject.set(x, "base", value.asInstanceOf[js.Any])
    
    inline def setBdi(value: HTMLAttributes): Self = StObject.set(x, "bdi", value.asInstanceOf[js.Any])
    
    inline def setBdo(value: HTMLAttributes): Self = StObject.set(x, "bdo", value.asInstanceOf[js.Any])
    
    inline def setBig(value: HTMLAttributes): Self = StObject.set(x, "big", value.asInstanceOf[js.Any])
    
    inline def setBlockquote(value: BlockquoteHTMLAttributes): Self = StObject.set(x, "blockquote", value.asInstanceOf[js.Any])
    
    inline def setBody(value: HTMLAttributes): Self = StObject.set(x, "body", value.asInstanceOf[js.Any])
    
    inline def setBr(value: HTMLAttributes): Self = StObject.set(x, "br", value.asInstanceOf[js.Any])
    
    inline def setButton(value: ButtonHTMLAttributes): Self = StObject.set(x, "button", value.asInstanceOf[js.Any])
    
    inline def setCanvas(value: CanvasHTMLAttributes): Self = StObject.set(x, "canvas", value.asInstanceOf[js.Any])
    
    inline def setCaption(value: HTMLAttributes): Self = StObject.set(x, "caption", value.asInstanceOf[js.Any])
    
    inline def setCircle(value: SVGProps): Self = StObject.set(x, "circle", value.asInstanceOf[js.Any])
    
    inline def setCite(value: HTMLAttributes): Self = StObject.set(x, "cite", value.asInstanceOf[js.Any])
    
    inline def setClipPath(value: SVGProps): Self = StObject.set(x, "clipPath", value.asInstanceOf[js.Any])
    
    inline def setCode(value: HTMLAttributes): Self = StObject.set(x, "code", value.asInstanceOf[js.Any])
    
    inline def setCol(value: ColHTMLAttributes): Self = StObject.set(x, "col", value.asInstanceOf[js.Any])
    
    inline def setColgroup(value: ColgroupHTMLAttributes): Self = StObject.set(x, "colgroup", value.asInstanceOf[js.Any])
    
    inline def setData(value: DataHTMLAttributes): Self = StObject.set(x, "data", value.asInstanceOf[js.Any])
    
    inline def setDatalist(value: HTMLAttributes): Self = StObject.set(x, "datalist", value.asInstanceOf[js.Any])
    
    inline def setDd(value: HTMLAttributes): Self = StObject.set(x, "dd", value.asInstanceOf[js.Any])
    
    inline def setDefs(value: SVGProps): Self = StObject.set(x, "defs", value.asInstanceOf[js.Any])
    
    inline def setDel(value: DelHTMLAttributes): Self = StObject.set(x, "del", value.asInstanceOf[js.Any])
    
    inline def setDesc(value: SVGProps): Self = StObject.set(x, "desc", value.asInstanceOf[js.Any])
    
    inline def setDetails(value: DetailsHTMLAttributes): Self = StObject.set(x, "details", value.asInstanceOf[js.Any])
    
    inline def setDfn(value: HTMLAttributes): Self = StObject.set(x, "dfn", value.asInstanceOf[js.Any])
    
    inline def setDialog(value: DialogHTMLAttributes): Self = StObject.set(x, "dialog", value.asInstanceOf[js.Any])
    
    inline def setDiv(value: HTMLAttributes): Self = StObject.set(x, "div", value.asInstanceOf[js.Any])
    
    inline def setDl(value: HTMLAttributes): Self = StObject.set(x, "dl", value.asInstanceOf[js.Any])
    
    inline def setDt(value: HTMLAttributes): Self = StObject.set(x, "dt", value.asInstanceOf[js.Any])
    
    inline def setEllipse(value: SVGProps): Self = StObject.set(x, "ellipse", value.asInstanceOf[js.Any])
    
    inline def setEm(value: HTMLAttributes): Self = StObject.set(x, "em", value.asInstanceOf[js.Any])
    
    inline def setEmbed(value: EmbedHTMLAttributes): Self = StObject.set(x, "embed", value.asInstanceOf[js.Any])
    
    inline def setFeBlend(value: SVGProps): Self = StObject.set(x, "feBlend", value.asInstanceOf[js.Any])
    
    inline def setFeColorMatrix(value: SVGProps): Self = StObject.set(x, "feColorMatrix", value.asInstanceOf[js.Any])
    
    inline def setFeComponentTransfer(value: SVGProps): Self = StObject.set(x, "feComponentTransfer", value.asInstanceOf[js.Any])
    
    inline def setFeComposite(value: SVGProps): Self = StObject.set(x, "feComposite", value.asInstanceOf[js.Any])
    
    inline def setFeConvolveMatrix(value: SVGProps): Self = StObject.set(x, "feConvolveMatrix", value.asInstanceOf[js.Any])
    
    inline def setFeDiffuseLighting(value: SVGProps): Self = StObject.set(x, "feDiffuseLighting", value.asInstanceOf[js.Any])
    
    inline def setFeDisplacementMap(value: SVGProps): Self = StObject.set(x, "feDisplacementMap", value.asInstanceOf[js.Any])
    
    inline def setFeDistantLight(value: SVGProps): Self = StObject.set(x, "feDistantLight", value.asInstanceOf[js.Any])
    
    inline def setFeDropShadow(value: SVGProps): Self = StObject.set(x, "feDropShadow", value.asInstanceOf[js.Any])
    
    inline def setFeFlood(value: SVGProps): Self = StObject.set(x, "feFlood", value.asInstanceOf[js.Any])
    
    inline def setFeFuncA(value: SVGProps): Self = StObject.set(x, "feFuncA", value.asInstanceOf[js.Any])
    
    inline def setFeFuncB(value: SVGProps): Self = StObject.set(x, "feFuncB", value.asInstanceOf[js.Any])
    
    inline def setFeFuncG(value: SVGProps): Self = StObject.set(x, "feFuncG", value.asInstanceOf[js.Any])
    
    inline def setFeFuncR(value: SVGProps): Self = StObject.set(x, "feFuncR", value.asInstanceOf[js.Any])
    
    inline def setFeGaussianBlur(value: SVGProps): Self = StObject.set(x, "feGaussianBlur", value.asInstanceOf[js.Any])
    
    inline def setFeImage(value: SVGProps): Self = StObject.set(x, "feImage", value.asInstanceOf[js.Any])
    
    inline def setFeMerge(value: SVGProps): Self = StObject.set(x, "feMerge", value.asInstanceOf[js.Any])
    
    inline def setFeMergeNode(value: SVGProps): Self = StObject.set(x, "feMergeNode", value.asInstanceOf[js.Any])
    
    inline def setFeMorphology(value: SVGProps): Self = StObject.set(x, "feMorphology", value.asInstanceOf[js.Any])
    
    inline def setFeOffset(value: SVGProps): Self = StObject.set(x, "feOffset", value.asInstanceOf[js.Any])
    
    inline def setFePointLight(value: SVGProps): Self = StObject.set(x, "fePointLight", value.asInstanceOf[js.Any])
    
    inline def setFeSpecularLighting(value: SVGProps): Self = StObject.set(x, "feSpecularLighting", value.asInstanceOf[js.Any])
    
    inline def setFeSpotLight(value: SVGProps): Self = StObject.set(x, "feSpotLight", value.asInstanceOf[js.Any])
    
    inline def setFeTile(value: SVGProps): Self = StObject.set(x, "feTile", value.asInstanceOf[js.Any])
    
    inline def setFeTurbulence(value: SVGProps): Self = StObject.set(x, "feTurbulence", value.asInstanceOf[js.Any])
    
    inline def setFieldset(value: FieldsetHTMLAttributes): Self = StObject.set(x, "fieldset", value.asInstanceOf[js.Any])
    
    inline def setFigcaption(value: HTMLAttributes): Self = StObject.set(x, "figcaption", value.asInstanceOf[js.Any])
    
    inline def setFigure(value: HTMLAttributes): Self = StObject.set(x, "figure", value.asInstanceOf[js.Any])
    
    inline def setFilter(value: SVGProps): Self = StObject.set(x, "filter", value.asInstanceOf[js.Any])
    
    inline def setFooter(value: HTMLAttributes): Self = StObject.set(x, "footer", value.asInstanceOf[js.Any])
    
    inline def setForeignObject(value: SVGProps): Self = StObject.set(x, "foreignObject", value.asInstanceOf[js.Any])
    
    inline def setForm(value: FormHTMLAttributes): Self = StObject.set(x, "form", value.asInstanceOf[js.Any])
    
    inline def setG(value: SVGProps): Self = StObject.set(x, "g", value.asInstanceOf[js.Any])
    
    inline def setH1(value: HTMLAttributes): Self = StObject.set(x, "h1", value.asInstanceOf[js.Any])
    
    inline def setH2(value: HTMLAttributes): Self = StObject.set(x, "h2", value.asInstanceOf[js.Any])
    
    inline def setH3(value: HTMLAttributes): Self = StObject.set(x, "h3", value.asInstanceOf[js.Any])
    
    inline def setH4(value: HTMLAttributes): Self = StObject.set(x, "h4", value.asInstanceOf[js.Any])
    
    inline def setH5(value: HTMLAttributes): Self = StObject.set(x, "h5", value.asInstanceOf[js.Any])
    
    inline def setH6(value: HTMLAttributes): Self = StObject.set(x, "h6", value.asInstanceOf[js.Any])
    
    inline def setHead(value: HTMLAttributes): Self = StObject.set(x, "head", value.asInstanceOf[js.Any])
    
    inline def setHeader(value: HTMLAttributes): Self = StObject.set(x, "header", value.asInstanceOf[js.Any])
    
    inline def setHgroup(value: HTMLAttributes): Self = StObject.set(x, "hgroup", value.asInstanceOf[js.Any])
    
    inline def setHr(value: HTMLAttributes): Self = StObject.set(x, "hr", value.asInstanceOf[js.Any])
    
    inline def setHtml(value: HtmlHTMLAttributes): Self = StObject.set(x, "html", value.asInstanceOf[js.Any])
    
    inline def setI(value: HTMLAttributes): Self = StObject.set(x, "i", value.asInstanceOf[js.Any])
    
    inline def setIframe(value: IframeHTMLAttributes): Self = StObject.set(x, "iframe", value.asInstanceOf[js.Any])
    
    inline def setImage(value: SVGProps): Self = StObject.set(x, "image", value.asInstanceOf[js.Any])
    
    inline def setImg(value: ImgHTMLAttributes): Self = StObject.set(x, "img", value.asInstanceOf[js.Any])
    
    inline def setInput(value: InputHTMLAttributes): Self = StObject.set(x, "input", value.asInstanceOf[js.Any])
    
    inline def setIns(value: InsHTMLAttributes): Self = StObject.set(x, "ins", value.asInstanceOf[js.Any])
    
    inline def setKbd(value: HTMLAttributes): Self = StObject.set(x, "kbd", value.asInstanceOf[js.Any])
    
    inline def setKeygen(value: KeygenHTMLAttributes): Self = StObject.set(x, "keygen", value.asInstanceOf[js.Any])
    
    inline def setLabel(value: LabelHTMLAttributes): Self = StObject.set(x, "label", value.asInstanceOf[js.Any])
    
    inline def setLegend(value: HTMLAttributes): Self = StObject.set(x, "legend", value.asInstanceOf[js.Any])
    
    inline def setLi(value: LiHTMLAttributes): Self = StObject.set(x, "li", value.asInstanceOf[js.Any])
    
    inline def setLine(value: SVGProps): Self = StObject.set(x, "line", value.asInstanceOf[js.Any])
    
    inline def setLinearGradient(value: SVGProps): Self = StObject.set(x, "linearGradient", value.asInstanceOf[js.Any])
    
    inline def setLink(value: LinkHTMLAttributes): Self = StObject.set(x, "link", value.asInstanceOf[js.Any])
    
    inline def setMain(value: HTMLAttributes): Self = StObject.set(x, "main", value.asInstanceOf[js.Any])
    
    inline def setMap(value: MapHTMLAttributes): Self = StObject.set(x, "map", value.asInstanceOf[js.Any])
    
    inline def setMark(value: HTMLAttributes): Self = StObject.set(x, "mark", value.asInstanceOf[js.Any])
    
    inline def setMarker(value: SVGProps): Self = StObject.set(x, "marker", value.asInstanceOf[js.Any])
    
    inline def setMask(value: SVGProps): Self = StObject.set(x, "mask", value.asInstanceOf[js.Any])
    
    inline def setMenu(value: MenuHTMLAttributes): Self = StObject.set(x, "menu", value.asInstanceOf[js.Any])
    
    inline def setMenuitem(value: HTMLAttributes): Self = StObject.set(x, "menuitem", value.asInstanceOf[js.Any])
    
    inline def setMeta(value: MetaHTMLAttributes): Self = StObject.set(x, "meta", value.asInstanceOf[js.Any])
    
    inline def setMetadata(value: SVGProps): Self = StObject.set(x, "metadata", value.asInstanceOf[js.Any])
    
    inline def setMeter(value: MeterHTMLAttributes): Self = StObject.set(x, "meter", value.asInstanceOf[js.Any])
    
    inline def setMpath(value: SVGProps): Self = StObject.set(x, "mpath", value.asInstanceOf[js.Any])
    
    inline def setNav(value: HTMLAttributes): Self = StObject.set(x, "nav", value.asInstanceOf[js.Any])
    
    inline def setNoindex(value: HTMLAttributes): Self = StObject.set(x, "noindex", value.asInstanceOf[js.Any])
    
    inline def setNoscript(value: HTMLAttributes): Self = StObject.set(x, "noscript", value.asInstanceOf[js.Any])
    
    inline def setObject(value: ObjectHTMLAttributes): Self = StObject.set(x, "object", value.asInstanceOf[js.Any])
    
    inline def setOl(value: OlHTMLAttributes): Self = StObject.set(x, "ol", value.asInstanceOf[js.Any])
    
    inline def setOptgroup(value: OptgroupHTMLAttributes): Self = StObject.set(x, "optgroup", value.asInstanceOf[js.Any])
    
    inline def setOption(value: OptionHTMLAttributes): Self = StObject.set(x, "option", value.asInstanceOf[js.Any])
    
    inline def setOutput(value: OutputHTMLAttributes): Self = StObject.set(x, "output", value.asInstanceOf[js.Any])
    
    inline def setP(value: HTMLAttributes): Self = StObject.set(x, "p", value.asInstanceOf[js.Any])
    
    inline def setParam(value: ParamHTMLAttributes): Self = StObject.set(x, "param", value.asInstanceOf[js.Any])
    
    inline def setPath(value: SVGProps): Self = StObject.set(x, "path", value.asInstanceOf[js.Any])
    
    inline def setPattern(value: SVGProps): Self = StObject.set(x, "pattern", value.asInstanceOf[js.Any])
    
    inline def setPicture(value: HTMLAttributes): Self = StObject.set(x, "picture", value.asInstanceOf[js.Any])
    
    inline def setPolygon(value: SVGProps): Self = StObject.set(x, "polygon", value.asInstanceOf[js.Any])
    
    inline def setPolyline(value: SVGProps): Self = StObject.set(x, "polyline", value.asInstanceOf[js.Any])
    
    inline def setPre(value: HTMLAttributes): Self = StObject.set(x, "pre", value.asInstanceOf[js.Any])
    
    inline def setProgress(value: ProgressHTMLAttributes): Self = StObject.set(x, "progress", value.asInstanceOf[js.Any])
    
    inline def setQ(value: QuoteHTMLAttributes): Self = StObject.set(x, "q", value.asInstanceOf[js.Any])
    
    inline def setRadialGradient(value: SVGProps): Self = StObject.set(x, "radialGradient", value.asInstanceOf[js.Any])
    
    inline def setRect(value: SVGProps): Self = StObject.set(x, "rect", value.asInstanceOf[js.Any])
    
    inline def setRp(value: HTMLAttributes): Self = StObject.set(x, "rp", value.asInstanceOf[js.Any])
    
    inline def setRt(value: HTMLAttributes): Self = StObject.set(x, "rt", value.asInstanceOf[js.Any])
    
    inline def setRuby(value: HTMLAttributes): Self = StObject.set(x, "ruby", value.asInstanceOf[js.Any])
    
    inline def setS(value: HTMLAttributes): Self = StObject.set(x, "s", value.asInstanceOf[js.Any])
    
    inline def setSamp(value: HTMLAttributes): Self = StObject.set(x, "samp", value.asInstanceOf[js.Any])
    
    inline def setScript(value: ScriptHTMLAttributes): Self = StObject.set(x, "script", value.asInstanceOf[js.Any])
    
    inline def setSection(value: HTMLAttributes): Self = StObject.set(x, "section", value.asInstanceOf[js.Any])
    
    inline def setSelect(value: SelectHTMLAttributes): Self = StObject.set(x, "select", value.asInstanceOf[js.Any])
    
    inline def setSlot(value: SlotHTMLAttributes): Self = StObject.set(x, "slot", value.asInstanceOf[js.Any])
    
    inline def setSmall(value: HTMLAttributes): Self = StObject.set(x, "small", value.asInstanceOf[js.Any])
    
    inline def setSource(value: SourceHTMLAttributes): Self = StObject.set(x, "source", value.asInstanceOf[js.Any])
    
    inline def setSpan(value: HTMLAttributes): Self = StObject.set(x, "span", value.asInstanceOf[js.Any])
    
    inline def setStop(value: SVGProps): Self = StObject.set(x, "stop", value.asInstanceOf[js.Any])
    
    inline def setStrong(value: HTMLAttributes): Self = StObject.set(x, "strong", value.asInstanceOf[js.Any])
    
    inline def setStyle(value: StyleHTMLAttributes): Self = StObject.set(x, "style", value.asInstanceOf[js.Any])
    
    inline def setSub(value: HTMLAttributes): Self = StObject.set(x, "sub", value.asInstanceOf[js.Any])
    
    inline def setSummary(value: HTMLAttributes): Self = StObject.set(x, "summary", value.asInstanceOf[js.Any])
    
    inline def setSup(value: HTMLAttributes): Self = StObject.set(x, "sup", value.asInstanceOf[js.Any])
    
    inline def setSvg(value: SVGProps): Self = StObject.set(x, "svg", value.asInstanceOf[js.Any])
    
    inline def setSwitch(value: SVGProps): Self = StObject.set(x, "switch", value.asInstanceOf[js.Any])
    
    inline def setSymbol(value: SVGProps): Self = StObject.set(x, "symbol", value.asInstanceOf[js.Any])
    
    inline def setTable(value: TableHTMLAttributes): Self = StObject.set(x, "table", value.asInstanceOf[js.Any])
    
    inline def setTbody(value: HTMLAttributes): Self = StObject.set(x, "tbody", value.asInstanceOf[js.Any])
    
    inline def setTd(value: TdHTMLAttributes): Self = StObject.set(x, "td", value.asInstanceOf[js.Any])
    
    inline def setTemplate(value: HTMLAttributes): Self = StObject.set(x, "template", value.asInstanceOf[js.Any])
    
    inline def setText(value: SVGProps): Self = StObject.set(x, "text", value.asInstanceOf[js.Any])
    
    inline def setTextPath(value: SVGProps): Self = StObject.set(x, "textPath", value.asInstanceOf[js.Any])
    
    inline def setTextarea(value: TextareaHTMLAttributes): Self = StObject.set(x, "textarea", value.asInstanceOf[js.Any])
    
    inline def setTfoot(value: HTMLAttributes): Self = StObject.set(x, "tfoot", value.asInstanceOf[js.Any])
    
    inline def setTh(value: ThHTMLAttributes): Self = StObject.set(x, "th", value.asInstanceOf[js.Any])
    
    inline def setThead(value: HTMLAttributes): Self = StObject.set(x, "thead", value.asInstanceOf[js.Any])
    
    inline def setTime(value: TimeHTMLAttributes): Self = StObject.set(x, "time", value.asInstanceOf[js.Any])
    
    inline def setTitle(value: HTMLAttributes): Self = StObject.set(x, "title", value.asInstanceOf[js.Any])
    
    inline def setTr(value: HTMLAttributes): Self = StObject.set(x, "tr", value.asInstanceOf[js.Any])
    
    inline def setTrack(value: TrackHTMLAttributes): Self = StObject.set(x, "track", value.asInstanceOf[js.Any])
    
    inline def setTspan(value: SVGProps): Self = StObject.set(x, "tspan", value.asInstanceOf[js.Any])
    
    inline def setU(value: HTMLAttributes): Self = StObject.set(x, "u", value.asInstanceOf[js.Any])
    
    inline def setUl(value: HTMLAttributes): Self = StObject.set(x, "ul", value.asInstanceOf[js.Any])
    
    inline def setUse(value: SVGProps): Self = StObject.set(x, "use", value.asInstanceOf[js.Any])
    
    inline def setVar(value: HTMLAttributes): Self = StObject.set(x, "var", value.asInstanceOf[js.Any])
    
    inline def setVideo(value: VideoHTMLAttributes): Self = StObject.set(x, "video", value.asInstanceOf[js.Any])
    
    inline def setView(value: SVGProps): Self = StObject.set(x, "view", value.asInstanceOf[js.Any])
    
    inline def setWbr(value: HTMLAttributes): Self = StObject.set(x, "wbr", value.asInstanceOf[js.Any])
    
    inline def setWebview(value: WebViewHTMLAttributes): Self = StObject.set(x, "webview", value.asInstanceOf[js.Any])
  }
}
