package typingsJapgolly.tootallnateOnce

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object distOverloadedParametersMod {
  
  /** NOTE: Conditional type definitions are impossible to translate to Scala.
    * See https://www.typescriptlang.org/docs/handbook/2/conditional-types.html for an intro.
    * You'll have to cast your way around this structure, unfortunately. 
    * TS definition: {{{
    T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any, None (args : infer A16): any, None (args : infer A17): any, None (args : infer A18): any, None (args : infer A19): any, None (args : infer A20): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 | A16 | A17 | A18 | A19 | A20 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any, None (args : infer A16): any, None (args : infer A17): any, None (args : infer A18): any, None (args : infer A19): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 | A16 | A17 | A18 | A19 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any, None (args : infer A16): any, None (args : infer A17): any, None (args : infer A18): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 | A16 | A17 | A18 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any, None (args : infer A16): any, None (args : infer A17): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 | A16 | A17 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any, None (args : infer A16): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 | A16 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any, None (args : infer A15): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 | A15 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any, None (args : infer A14): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 | A14 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any, None (args : infer A13): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 | A13 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any, None (args : infer A12): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 | A12 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any, None (args : infer A11): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 | A11 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any, None (args : infer A10): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 | A10 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any, None (args : infer A9): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 | A9 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any, None (args : infer A8): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 | A8 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any, None (args : infer A7): any} ? A1 | A2 | A3 | A4 | A5 | A6 | A7 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any, None (args : infer A6): any} ? A1 | A2 | A3 | A4 | A5 | A6 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any, None (args : infer A5): any} ? A1 | A2 | A3 | A4 | A5 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any, None (args : infer A4): any} ? A1 | A2 | A3 | A4 : T extends {None (args : infer A1): any, None (args : infer A2): any, None (args : infer A3): any} ? A1 | A2 | A3 : T extends {None (args : infer A1): any, None (args : infer A2): any} ? A1 | A2 : T extends (args : infer A1): any ? A1 : any
    }}}
    */
  @js.native
  trait OverloadedParameters[T] extends StObject
}
