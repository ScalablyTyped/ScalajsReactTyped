package typingsJapgolly.pulumiAws.domainDkimMod

import typingsJapgolly.pulumiPulumi.outputMod.Input
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait DomainDkimState extends js.Object {
  /**
    * DKIM tokens generated by SES.
    * These tokens should be used to create CNAME records used to verify SES Easy DKIM.
    * See below for an example of how this might be achieved
    * when the domain is hosted in Route 53 and managed by this provider.
    * Find out more about verifying domains in Amazon SES
    * in the [AWS SES docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html).
    */
  val dkimTokens: js.UndefOr[Input[js.Array[Input[String]]]] = js.native
  /**
    * Verified domain name to generate DKIM tokens for.
    */
  val domain: js.UndefOr[Input[String]] = js.native
}

object DomainDkimState {
  @scala.inline
  def apply(dkimTokens: Input[js.Array[Input[String]]] = null, domain: Input[String] = null): DomainDkimState = {
    val __obj = js.Dynamic.literal()
    if (dkimTokens != null) __obj.updateDynamic("dkimTokens")(dkimTokens.asInstanceOf[js.Any])
    if (domain != null) __obj.updateDynamic("domain")(domain.asInstanceOf[js.Any])
    __obj.asInstanceOf[DomainDkimState]
  }
}

