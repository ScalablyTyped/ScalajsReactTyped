package typingsJapgolly.pulumiAws.topicMod

import org.scalablytyped.runtime.StringDictionary
import typingsJapgolly.pulumiPulumi.outputMod.Input
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait TopicArgs extends js.Object {
  /**
    * IAM role for failure feedback
    */
  val applicationFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val applicationSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * Percentage of success to sample
    */
  val applicationSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  /**
    * The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
    */
  val deliveryPolicy: js.UndefOr[Input[String]] = js.native
  /**
    * The display name for the SNS topic
    */
  val displayName: js.UndefOr[Input[String]] = js.native
  /**
    * IAM role for failure feedback
    */
  val httpFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val httpSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * Percentage of success to sample
    */
  val httpSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  /**
    * The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
    */
  val kmsMasterKeyId: js.UndefOr[Input[String]] = js.native
  /**
    * IAM role for failure feedback
    */
  val lambdaFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val lambdaSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * Percentage of success to sample
    */
  val lambdaSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  /**
    * The friendly name for the SNS topic. By default generated by this provider.
    */
  val name: js.UndefOr[Input[String]] = js.native
  /**
    * The friendly name for the SNS topic. Conflicts with `name`.
    */
  val namePrefix: js.UndefOr[Input[String]] = js.native
  val policy: js.UndefOr[Input[String]] = js.native
  /**
    * IAM role for failure feedback
    */
  val sqsFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val sqsSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  /**
    * Percentage of success to sample
    */
  val sqsSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  /**
    * Key-value mapping of resource tags
    */
  val tags: js.UndefOr[Input[StringDictionary[_]]] = js.native
}

object TopicArgs {
  @scala.inline
  def apply(
    applicationFailureFeedbackRoleArn: Input[String] = null,
    applicationSuccessFeedbackRoleArn: Input[String] = null,
    applicationSuccessFeedbackSampleRate: Input[Double] = null,
    deliveryPolicy: Input[String] = null,
    displayName: Input[String] = null,
    httpFailureFeedbackRoleArn: Input[String] = null,
    httpSuccessFeedbackRoleArn: Input[String] = null,
    httpSuccessFeedbackSampleRate: Input[Double] = null,
    kmsMasterKeyId: Input[String] = null,
    lambdaFailureFeedbackRoleArn: Input[String] = null,
    lambdaSuccessFeedbackRoleArn: Input[String] = null,
    lambdaSuccessFeedbackSampleRate: Input[Double] = null,
    name: Input[String] = null,
    namePrefix: Input[String] = null,
    policy: Input[String] = null,
    sqsFailureFeedbackRoleArn: Input[String] = null,
    sqsSuccessFeedbackRoleArn: Input[String] = null,
    sqsSuccessFeedbackSampleRate: Input[Double] = null,
    tags: Input[StringDictionary[_]] = null
  ): TopicArgs = {
    val __obj = js.Dynamic.literal()
    if (applicationFailureFeedbackRoleArn != null) __obj.updateDynamic("applicationFailureFeedbackRoleArn")(applicationFailureFeedbackRoleArn.asInstanceOf[js.Any])
    if (applicationSuccessFeedbackRoleArn != null) __obj.updateDynamic("applicationSuccessFeedbackRoleArn")(applicationSuccessFeedbackRoleArn.asInstanceOf[js.Any])
    if (applicationSuccessFeedbackSampleRate != null) __obj.updateDynamic("applicationSuccessFeedbackSampleRate")(applicationSuccessFeedbackSampleRate.asInstanceOf[js.Any])
    if (deliveryPolicy != null) __obj.updateDynamic("deliveryPolicy")(deliveryPolicy.asInstanceOf[js.Any])
    if (displayName != null) __obj.updateDynamic("displayName")(displayName.asInstanceOf[js.Any])
    if (httpFailureFeedbackRoleArn != null) __obj.updateDynamic("httpFailureFeedbackRoleArn")(httpFailureFeedbackRoleArn.asInstanceOf[js.Any])
    if (httpSuccessFeedbackRoleArn != null) __obj.updateDynamic("httpSuccessFeedbackRoleArn")(httpSuccessFeedbackRoleArn.asInstanceOf[js.Any])
    if (httpSuccessFeedbackSampleRate != null) __obj.updateDynamic("httpSuccessFeedbackSampleRate")(httpSuccessFeedbackSampleRate.asInstanceOf[js.Any])
    if (kmsMasterKeyId != null) __obj.updateDynamic("kmsMasterKeyId")(kmsMasterKeyId.asInstanceOf[js.Any])
    if (lambdaFailureFeedbackRoleArn != null) __obj.updateDynamic("lambdaFailureFeedbackRoleArn")(lambdaFailureFeedbackRoleArn.asInstanceOf[js.Any])
    if (lambdaSuccessFeedbackRoleArn != null) __obj.updateDynamic("lambdaSuccessFeedbackRoleArn")(lambdaSuccessFeedbackRoleArn.asInstanceOf[js.Any])
    if (lambdaSuccessFeedbackSampleRate != null) __obj.updateDynamic("lambdaSuccessFeedbackSampleRate")(lambdaSuccessFeedbackSampleRate.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (namePrefix != null) __obj.updateDynamic("namePrefix")(namePrefix.asInstanceOf[js.Any])
    if (policy != null) __obj.updateDynamic("policy")(policy.asInstanceOf[js.Any])
    if (sqsFailureFeedbackRoleArn != null) __obj.updateDynamic("sqsFailureFeedbackRoleArn")(sqsFailureFeedbackRoleArn.asInstanceOf[js.Any])
    if (sqsSuccessFeedbackRoleArn != null) __obj.updateDynamic("sqsSuccessFeedbackRoleArn")(sqsSuccessFeedbackRoleArn.asInstanceOf[js.Any])
    if (sqsSuccessFeedbackSampleRate != null) __obj.updateDynamic("sqsSuccessFeedbackSampleRate")(sqsSuccessFeedbackSampleRate.asInstanceOf[js.Any])
    if (tags != null) __obj.updateDynamic("tags")(tags.asInstanceOf[js.Any])
    __obj.asInstanceOf[TopicArgs]
  }
}

