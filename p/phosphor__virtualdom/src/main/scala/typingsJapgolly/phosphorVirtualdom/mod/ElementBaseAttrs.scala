package typingsJapgolly.phosphorVirtualdom.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/* Inlined {readonly [ T in @phosphor/virtualdom.@phosphor/virtualdom.ElementAttrNames ]:? string} */
trait ElementBaseAttrs extends js.Object {
  val abbr: js.UndefOr[String] = js.undefined
  val accept: js.UndefOr[String] = js.undefined
  val `accept-charset`: js.UndefOr[String] = js.undefined
  val accesskey: js.UndefOr[String] = js.undefined
  val action: js.UndefOr[String] = js.undefined
  val allowfullscreen: js.UndefOr[String] = js.undefined
  val alt: js.UndefOr[String] = js.undefined
  val autocomplete: js.UndefOr[String] = js.undefined
  val autofocus: js.UndefOr[String] = js.undefined
  val autoplay: js.UndefOr[String] = js.undefined
  val autosave: js.UndefOr[String] = js.undefined
  val checked: js.UndefOr[String] = js.undefined
  val cite: js.UndefOr[String] = js.undefined
  val cols: js.UndefOr[String] = js.undefined
  val colspan: js.UndefOr[String] = js.undefined
  val contenteditable: js.UndefOr[String] = js.undefined
  val controls: js.UndefOr[String] = js.undefined
  val coords: js.UndefOr[String] = js.undefined
  val crossorigin: js.UndefOr[String] = js.undefined
  val data: js.UndefOr[String] = js.undefined
  val datetime: js.UndefOr[String] = js.undefined
  val default: js.UndefOr[String] = js.undefined
  val dir: js.UndefOr[String] = js.undefined
  val dirname: js.UndefOr[String] = js.undefined
  val disabled: js.UndefOr[String] = js.undefined
  val download: js.UndefOr[String] = js.undefined
  val draggable: js.UndefOr[String] = js.undefined
  val dropzone: js.UndefOr[String] = js.undefined
  val enctype: js.UndefOr[String] = js.undefined
  val form: js.UndefOr[String] = js.undefined
  val formaction: js.UndefOr[String] = js.undefined
  val formenctype: js.UndefOr[String] = js.undefined
  val formmethod: js.UndefOr[String] = js.undefined
  val formnovalidate: js.UndefOr[String] = js.undefined
  val formtarget: js.UndefOr[String] = js.undefined
  val headers: js.UndefOr[String] = js.undefined
  val height: js.UndefOr[String] = js.undefined
  val hidden: js.UndefOr[String] = js.undefined
  val high: js.UndefOr[String] = js.undefined
  val href: js.UndefOr[String] = js.undefined
  val hreflang: js.UndefOr[String] = js.undefined
  val id: js.UndefOr[String] = js.undefined
  val inputmode: js.UndefOr[String] = js.undefined
  val integrity: js.UndefOr[String] = js.undefined
  val ismap: js.UndefOr[String] = js.undefined
  val kind: js.UndefOr[String] = js.undefined
  val label: js.UndefOr[String] = js.undefined
  val lang: js.UndefOr[String] = js.undefined
  val list: js.UndefOr[String] = js.undefined
  val loop: js.UndefOr[String] = js.undefined
  val low: js.UndefOr[String] = js.undefined
  val max: js.UndefOr[String] = js.undefined
  val maxlength: js.UndefOr[String] = js.undefined
  val media: js.UndefOr[String] = js.undefined
  val mediagroup: js.UndefOr[String] = js.undefined
  val method: js.UndefOr[String] = js.undefined
  val min: js.UndefOr[String] = js.undefined
  val minlength: js.UndefOr[String] = js.undefined
  val multiple: js.UndefOr[String] = js.undefined
  val muted: js.UndefOr[String] = js.undefined
  val name: js.UndefOr[String] = js.undefined
  val novalidate: js.UndefOr[String] = js.undefined
  val optimum: js.UndefOr[String] = js.undefined
  val pattern: js.UndefOr[String] = js.undefined
  val placeholder: js.UndefOr[String] = js.undefined
  val poster: js.UndefOr[String] = js.undefined
  val preload: js.UndefOr[String] = js.undefined
  val readonly: js.UndefOr[String] = js.undefined
  val rel: js.UndefOr[String] = js.undefined
  val required: js.UndefOr[String] = js.undefined
  val reversed: js.UndefOr[String] = js.undefined
  val rows: js.UndefOr[String] = js.undefined
  val rowspan: js.UndefOr[String] = js.undefined
  val sandbox: js.UndefOr[String] = js.undefined
  val scope: js.UndefOr[String] = js.undefined
  val selected: js.UndefOr[String] = js.undefined
  val shape: js.UndefOr[String] = js.undefined
  val size: js.UndefOr[String] = js.undefined
  val sizes: js.UndefOr[String] = js.undefined
  val span: js.UndefOr[String] = js.undefined
  val spellcheck: js.UndefOr[String] = js.undefined
  val src: js.UndefOr[String] = js.undefined
  val srcdoc: js.UndefOr[String] = js.undefined
  val srclang: js.UndefOr[String] = js.undefined
  val srcset: js.UndefOr[String] = js.undefined
  val start: js.UndefOr[String] = js.undefined
  val step: js.UndefOr[String] = js.undefined
  val tabindex: js.UndefOr[String] = js.undefined
  val target: js.UndefOr[String] = js.undefined
  val title: js.UndefOr[String] = js.undefined
  val `type`: js.UndefOr[String] = js.undefined
  val typemustmatch: js.UndefOr[String] = js.undefined
  val usemap: js.UndefOr[String] = js.undefined
  val value: js.UndefOr[String] = js.undefined
  val width: js.UndefOr[String] = js.undefined
  val wrap: js.UndefOr[String] = js.undefined
}

object ElementBaseAttrs {
  @scala.inline
  def apply(
    abbr: String = null,
    accept: String = null,
    `accept-charset`: String = null,
    accesskey: String = null,
    action: String = null,
    allowfullscreen: String = null,
    alt: String = null,
    autocomplete: String = null,
    autofocus: String = null,
    autoplay: String = null,
    autosave: String = null,
    checked: String = null,
    cite: String = null,
    cols: String = null,
    colspan: String = null,
    contenteditable: String = null,
    controls: String = null,
    coords: String = null,
    crossorigin: String = null,
    data: String = null,
    datetime: String = null,
    default: String = null,
    dir: String = null,
    dirname: String = null,
    disabled: String = null,
    download: String = null,
    draggable: String = null,
    dropzone: String = null,
    enctype: String = null,
    form: String = null,
    formaction: String = null,
    formenctype: String = null,
    formmethod: String = null,
    formnovalidate: String = null,
    formtarget: String = null,
    headers: String = null,
    height: String = null,
    hidden: String = null,
    high: String = null,
    href: String = null,
    hreflang: String = null,
    id: String = null,
    inputmode: String = null,
    integrity: String = null,
    ismap: String = null,
    kind: String = null,
    label: String = null,
    lang: String = null,
    list: String = null,
    loop: String = null,
    low: String = null,
    max: String = null,
    maxlength: String = null,
    media: String = null,
    mediagroup: String = null,
    method: String = null,
    min: String = null,
    minlength: String = null,
    multiple: String = null,
    muted: String = null,
    name: String = null,
    novalidate: String = null,
    optimum: String = null,
    pattern: String = null,
    placeholder: String = null,
    poster: String = null,
    preload: String = null,
    readonly: String = null,
    rel: String = null,
    required: String = null,
    reversed: String = null,
    rows: String = null,
    rowspan: String = null,
    sandbox: String = null,
    scope: String = null,
    selected: String = null,
    shape: String = null,
    size: String = null,
    sizes: String = null,
    span: String = null,
    spellcheck: String = null,
    src: String = null,
    srcdoc: String = null,
    srclang: String = null,
    srcset: String = null,
    start: String = null,
    step: String = null,
    tabindex: String = null,
    target: String = null,
    title: String = null,
    `type`: String = null,
    typemustmatch: String = null,
    usemap: String = null,
    value: String = null,
    width: String = null,
    wrap: String = null
  ): ElementBaseAttrs = {
    val __obj = js.Dynamic.literal()
    if (abbr != null) __obj.updateDynamic("abbr")(abbr.asInstanceOf[js.Any])
    if (accept != null) __obj.updateDynamic("accept")(accept.asInstanceOf[js.Any])
    if (`accept-charset` != null) __obj.updateDynamic("accept-charset")(`accept-charset`.asInstanceOf[js.Any])
    if (accesskey != null) __obj.updateDynamic("accesskey")(accesskey.asInstanceOf[js.Any])
    if (action != null) __obj.updateDynamic("action")(action.asInstanceOf[js.Any])
    if (allowfullscreen != null) __obj.updateDynamic("allowfullscreen")(allowfullscreen.asInstanceOf[js.Any])
    if (alt != null) __obj.updateDynamic("alt")(alt.asInstanceOf[js.Any])
    if (autocomplete != null) __obj.updateDynamic("autocomplete")(autocomplete.asInstanceOf[js.Any])
    if (autofocus != null) __obj.updateDynamic("autofocus")(autofocus.asInstanceOf[js.Any])
    if (autoplay != null) __obj.updateDynamic("autoplay")(autoplay.asInstanceOf[js.Any])
    if (autosave != null) __obj.updateDynamic("autosave")(autosave.asInstanceOf[js.Any])
    if (checked != null) __obj.updateDynamic("checked")(checked.asInstanceOf[js.Any])
    if (cite != null) __obj.updateDynamic("cite")(cite.asInstanceOf[js.Any])
    if (cols != null) __obj.updateDynamic("cols")(cols.asInstanceOf[js.Any])
    if (colspan != null) __obj.updateDynamic("colspan")(colspan.asInstanceOf[js.Any])
    if (contenteditable != null) __obj.updateDynamic("contenteditable")(contenteditable.asInstanceOf[js.Any])
    if (controls != null) __obj.updateDynamic("controls")(controls.asInstanceOf[js.Any])
    if (coords != null) __obj.updateDynamic("coords")(coords.asInstanceOf[js.Any])
    if (crossorigin != null) __obj.updateDynamic("crossorigin")(crossorigin.asInstanceOf[js.Any])
    if (data != null) __obj.updateDynamic("data")(data.asInstanceOf[js.Any])
    if (datetime != null) __obj.updateDynamic("datetime")(datetime.asInstanceOf[js.Any])
    if (default != null) __obj.updateDynamic("default")(default.asInstanceOf[js.Any])
    if (dir != null) __obj.updateDynamic("dir")(dir.asInstanceOf[js.Any])
    if (dirname != null) __obj.updateDynamic("dirname")(dirname.asInstanceOf[js.Any])
    if (disabled != null) __obj.updateDynamic("disabled")(disabled.asInstanceOf[js.Any])
    if (download != null) __obj.updateDynamic("download")(download.asInstanceOf[js.Any])
    if (draggable != null) __obj.updateDynamic("draggable")(draggable.asInstanceOf[js.Any])
    if (dropzone != null) __obj.updateDynamic("dropzone")(dropzone.asInstanceOf[js.Any])
    if (enctype != null) __obj.updateDynamic("enctype")(enctype.asInstanceOf[js.Any])
    if (form != null) __obj.updateDynamic("form")(form.asInstanceOf[js.Any])
    if (formaction != null) __obj.updateDynamic("formaction")(formaction.asInstanceOf[js.Any])
    if (formenctype != null) __obj.updateDynamic("formenctype")(formenctype.asInstanceOf[js.Any])
    if (formmethod != null) __obj.updateDynamic("formmethod")(formmethod.asInstanceOf[js.Any])
    if (formnovalidate != null) __obj.updateDynamic("formnovalidate")(formnovalidate.asInstanceOf[js.Any])
    if (formtarget != null) __obj.updateDynamic("formtarget")(formtarget.asInstanceOf[js.Any])
    if (headers != null) __obj.updateDynamic("headers")(headers.asInstanceOf[js.Any])
    if (height != null) __obj.updateDynamic("height")(height.asInstanceOf[js.Any])
    if (hidden != null) __obj.updateDynamic("hidden")(hidden.asInstanceOf[js.Any])
    if (high != null) __obj.updateDynamic("high")(high.asInstanceOf[js.Any])
    if (href != null) __obj.updateDynamic("href")(href.asInstanceOf[js.Any])
    if (hreflang != null) __obj.updateDynamic("hreflang")(hreflang.asInstanceOf[js.Any])
    if (id != null) __obj.updateDynamic("id")(id.asInstanceOf[js.Any])
    if (inputmode != null) __obj.updateDynamic("inputmode")(inputmode.asInstanceOf[js.Any])
    if (integrity != null) __obj.updateDynamic("integrity")(integrity.asInstanceOf[js.Any])
    if (ismap != null) __obj.updateDynamic("ismap")(ismap.asInstanceOf[js.Any])
    if (kind != null) __obj.updateDynamic("kind")(kind.asInstanceOf[js.Any])
    if (label != null) __obj.updateDynamic("label")(label.asInstanceOf[js.Any])
    if (lang != null) __obj.updateDynamic("lang")(lang.asInstanceOf[js.Any])
    if (list != null) __obj.updateDynamic("list")(list.asInstanceOf[js.Any])
    if (loop != null) __obj.updateDynamic("loop")(loop.asInstanceOf[js.Any])
    if (low != null) __obj.updateDynamic("low")(low.asInstanceOf[js.Any])
    if (max != null) __obj.updateDynamic("max")(max.asInstanceOf[js.Any])
    if (maxlength != null) __obj.updateDynamic("maxlength")(maxlength.asInstanceOf[js.Any])
    if (media != null) __obj.updateDynamic("media")(media.asInstanceOf[js.Any])
    if (mediagroup != null) __obj.updateDynamic("mediagroup")(mediagroup.asInstanceOf[js.Any])
    if (method != null) __obj.updateDynamic("method")(method.asInstanceOf[js.Any])
    if (min != null) __obj.updateDynamic("min")(min.asInstanceOf[js.Any])
    if (minlength != null) __obj.updateDynamic("minlength")(minlength.asInstanceOf[js.Any])
    if (multiple != null) __obj.updateDynamic("multiple")(multiple.asInstanceOf[js.Any])
    if (muted != null) __obj.updateDynamic("muted")(muted.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (novalidate != null) __obj.updateDynamic("novalidate")(novalidate.asInstanceOf[js.Any])
    if (optimum != null) __obj.updateDynamic("optimum")(optimum.asInstanceOf[js.Any])
    if (pattern != null) __obj.updateDynamic("pattern")(pattern.asInstanceOf[js.Any])
    if (placeholder != null) __obj.updateDynamic("placeholder")(placeholder.asInstanceOf[js.Any])
    if (poster != null) __obj.updateDynamic("poster")(poster.asInstanceOf[js.Any])
    if (preload != null) __obj.updateDynamic("preload")(preload.asInstanceOf[js.Any])
    if (readonly != null) __obj.updateDynamic("readonly")(readonly.asInstanceOf[js.Any])
    if (rel != null) __obj.updateDynamic("rel")(rel.asInstanceOf[js.Any])
    if (required != null) __obj.updateDynamic("required")(required.asInstanceOf[js.Any])
    if (reversed != null) __obj.updateDynamic("reversed")(reversed.asInstanceOf[js.Any])
    if (rows != null) __obj.updateDynamic("rows")(rows.asInstanceOf[js.Any])
    if (rowspan != null) __obj.updateDynamic("rowspan")(rowspan.asInstanceOf[js.Any])
    if (sandbox != null) __obj.updateDynamic("sandbox")(sandbox.asInstanceOf[js.Any])
    if (scope != null) __obj.updateDynamic("scope")(scope.asInstanceOf[js.Any])
    if (selected != null) __obj.updateDynamic("selected")(selected.asInstanceOf[js.Any])
    if (shape != null) __obj.updateDynamic("shape")(shape.asInstanceOf[js.Any])
    if (size != null) __obj.updateDynamic("size")(size.asInstanceOf[js.Any])
    if (sizes != null) __obj.updateDynamic("sizes")(sizes.asInstanceOf[js.Any])
    if (span != null) __obj.updateDynamic("span")(span.asInstanceOf[js.Any])
    if (spellcheck != null) __obj.updateDynamic("spellcheck")(spellcheck.asInstanceOf[js.Any])
    if (src != null) __obj.updateDynamic("src")(src.asInstanceOf[js.Any])
    if (srcdoc != null) __obj.updateDynamic("srcdoc")(srcdoc.asInstanceOf[js.Any])
    if (srclang != null) __obj.updateDynamic("srclang")(srclang.asInstanceOf[js.Any])
    if (srcset != null) __obj.updateDynamic("srcset")(srcset.asInstanceOf[js.Any])
    if (start != null) __obj.updateDynamic("start")(start.asInstanceOf[js.Any])
    if (step != null) __obj.updateDynamic("step")(step.asInstanceOf[js.Any])
    if (tabindex != null) __obj.updateDynamic("tabindex")(tabindex.asInstanceOf[js.Any])
    if (target != null) __obj.updateDynamic("target")(target.asInstanceOf[js.Any])
    if (title != null) __obj.updateDynamic("title")(title.asInstanceOf[js.Any])
    if (`type` != null) __obj.updateDynamic("type")(`type`.asInstanceOf[js.Any])
    if (typemustmatch != null) __obj.updateDynamic("typemustmatch")(typemustmatch.asInstanceOf[js.Any])
    if (usemap != null) __obj.updateDynamic("usemap")(usemap.asInstanceOf[js.Any])
    if (value != null) __obj.updateDynamic("value")(value.asInstanceOf[js.Any])
    if (width != null) __obj.updateDynamic("width")(width.asInstanceOf[js.Any])
    if (wrap != null) __obj.updateDynamic("wrap")(wrap.asInstanceOf[js.Any])
    __obj.asInstanceOf[ElementBaseAttrs]
  }
}

