package typingsJapgolly.sparkpost.mod

import typingsJapgolly.request.mod.Options
import typingsJapgolly.sparkpost.AnonCreate
import typingsJapgolly.sparkpost.AnonDelete
import typingsJapgolly.sparkpost.AnonGet
import typingsJapgolly.sparkpost.AnonGetBatchStatus
import typingsJapgolly.sparkpost.AnonList
import typingsJapgolly.sparkpost.AnonPreview
import typingsJapgolly.sparkpost.AnonSearch
import typingsJapgolly.sparkpost.AnonSend
import typingsJapgolly.sparkpost.AnonUpdate
import typingsJapgolly.sparkpost.AnonUpsert
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait SparkPost extends js.Object {
  /** Specifying an inbound domain enables you to customize the address to which inbound messages are sent. */
  var inboundDomains: AnonCreate = js.native
  /** The Message Events API provides the means to search the raw events generated by SparkPost. */
  var messageEvents: AnonSearch = js.native
  /** A recipient list is a collection of recipients that can be used in a transmission. */
  var recipientLists: AnonDelete = js.native
  /** Relay Webhooks are a way to instruct SparkPost to accept inbound email on your behalf and forward it to you over HTTP for your own consumption. */
  var relayWebhooks: AnonGet = js.native
  var sendingDomains: AnonList = js.native
  var subaccounts: AnonUpdate = js.native
  var suppressionList: AnonUpsert = js.native
  var templates: AnonPreview = js.native
  var transmissions: AnonSend = js.native
  var webhooks: AnonGetBatchStatus = js.native
  def delete(options: Options): js.Promise[Response[_]] = js.native
  def delete(options: Options, callback: Callback[_]): Unit = js.native
  def get(options: Options): js.Promise[Response[_]] = js.native
  def get(options: Options, callback: Callback[_]): Unit = js.native
  def post(options: Options): js.Promise[Response[_]] = js.native
  def post(options: Options, callback: Callback[_]): Unit = js.native
  def put(options: Options): js.Promise[Response[_]] = js.native
  def put(options: Options, callback: Callback[_]): Unit = js.native
  def request(options: Options): js.Promise[Response[_]] = js.native
  def request(options: Options, callback: Callback[_]): Unit = js.native
}

