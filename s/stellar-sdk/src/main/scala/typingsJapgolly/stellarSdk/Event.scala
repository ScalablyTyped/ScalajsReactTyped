package typingsJapgolly.stellarSdk

import japgolly.scalajs.react.CallbackTo
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/** The Event interface represents any event which takes place in the DOM; some are user-generated (such as mouse or keyboard events), while others are generated by APIs (such as events that indicate an animation has finished running, a video has been paused, and so forth). While events are usually triggered by such "external" sources, they can also be triggered programmatically, such as by calling the HTMLElement.click() method of an element, or by defining the event, then sending it to a specified target using EventTarget.dispatchEvent(). There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the properties and methods which are common to all events. */
trait Event extends js.Object {
  // Already partially declared at `@types/eventsource/dom-monkeypatch.d.ts`.
  /**
    * Returns the object whose event listener's callback is currently being
    * invoked.
    */
  val currentTarget: EventTarget | Null
  /** @deprecated */
  val srcElement: EventTarget | Null
  /**
    * Returns the object to which event is dispatched (its target).
    */
  val target: EventTarget | Null
  def composedPath(): js.Array[EventTarget]
}

object Event {
  @scala.inline
  def apply(
    composedPath: CallbackTo[js.Array[EventTarget]],
    currentTarget: EventTarget = null,
    srcElement: EventTarget = null,
    target: EventTarget = null
  ): Event = {
    val __obj = js.Dynamic.literal()
    __obj.updateDynamic("composedPath")(composedPath.toJsFn)
    if (currentTarget != null) __obj.updateDynamic("currentTarget")(currentTarget.asInstanceOf[js.Any])
    if (srcElement != null) __obj.updateDynamic("srcElement")(srcElement.asInstanceOf[js.Any])
    if (target != null) __obj.updateDynamic("target")(target.asInstanceOf[js.Any])
    __obj.asInstanceOf[Event]
  }
}

