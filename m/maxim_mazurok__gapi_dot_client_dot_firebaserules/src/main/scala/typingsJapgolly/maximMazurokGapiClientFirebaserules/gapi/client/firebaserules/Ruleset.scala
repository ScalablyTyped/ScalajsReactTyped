package typingsJapgolly.maximMazurokGapiClientFirebaserules.gapi.client.firebaserules

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait Ruleset extends StObject {
  
  /** Output only. Time the `Ruleset` was created. */
  var createTime: js.UndefOr[String] = js.undefined
  
  /** Output only. The metadata for this ruleset. */
  var metadata: js.UndefOr[Metadata] = js.undefined
  
  /** Output only. Name of the `Ruleset`. The ruleset_id is auto generated by the service. Format: `projects/{project_id}/rulesets/{ruleset_id}` */
  var name: js.UndefOr[String] = js.undefined
  
  /** Required. `Source` for the `Ruleset`. */
  var source: js.UndefOr[Source] = js.undefined
}
object Ruleset {
  
  inline def apply(): Ruleset = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Ruleset]
  }
  
  extension [Self <: Ruleset](x: Self) {
    
    inline def setCreateTime(value: String): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setMetadata(value: Metadata): Self = StObject.set(x, "metadata", value.asInstanceOf[js.Any])
    
    inline def setMetadataUndefined: Self = StObject.set(x, "metadata", js.undefined)
    
    inline def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setSource(value: Source): Self = StObject.set(x, "source", value.asInstanceOf[js.Any])
    
    inline def setSourceUndefined: Self = StObject.set(x, "source", js.undefined)
  }
}
