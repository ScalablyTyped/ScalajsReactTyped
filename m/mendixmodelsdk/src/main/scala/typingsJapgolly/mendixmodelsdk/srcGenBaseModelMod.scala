package typingsJapgolly.mendixmodelsdk

import typingsJapgolly.mendixmodelsdk.srcCommonMod.common.IErrorCallback
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.AppServiceAction
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.AppServiceActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.IAppServiceAction
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.IAppServiceActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.IConsumedAppService
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.Msd
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdAssociation
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdAttribute
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdDomainModel
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdEntity
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdEnumeration
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdEnumerationContainer
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdEnumerationValue
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdMetadata
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdMicroflow
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdMicroflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdText
import typingsJapgolly.mendixmodelsdk.srcGenAppservicesMod.appservices.MsdVersion
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.ConsumedBusinessEvent
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.IConsumedBusinessEventService
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.IPublishedBusinessEventService
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.PublishedChannel
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.PublishedMessage
import typingsJapgolly.mendixmodelsdk.srcGenBusinesseventsMod.businessevents.PublishedMessageAttribute
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.BasicParameterType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.BooleanType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.ConcreteEntityType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.DateTimeType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.DecimalType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.EntityTypeParameterType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.EnumerationType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.FloatType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.ICodeAction
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.IntegerType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.ListType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.MicroflowActionInfo
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.ParameterizedEntityType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.StringTemplateParameterType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.StringType
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.TypeParameter
import typingsJapgolly.mendixmodelsdk.srcGenCodeactionsMod.codeactions.VoidType
import typingsJapgolly.mendixmodelsdk.srcGenConstantsMod.constants.IConstant
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.CustomWidget
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.CustomWidgetDatabaseSource
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.CustomWidgetType
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.CustomWidgetXPathSource
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetEnumerationValue
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetObject
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetObjectType
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetProperty
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetPropertyType
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetReturnType
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetTranslation
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetValue
import typingsJapgolly.mendixmodelsdk.srcGenCustomwidgetsMod.customwidgets.WidgetValueType
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetAccess
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetColumn
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetConstraintAccess
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetDateTimeConstraint
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetModuleRoleAccess
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetNumericConstraint
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetObjectConstraint
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetParameter
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.DataSetParameterAccess
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.IDataSet
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.IDataSetParameter
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.JavaDataSetSource
import typingsJapgolly.mendixmodelsdk.srcGenDatasetsMod.datasets.OqlDataSetSource
import typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.BinaryType
import typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.EmptyType
import typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.ObjectType
import typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.UnknownType
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.ConditionSettings
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DataGrid
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DataGridCell
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DataGridColumn
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DataView
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DataViewContents
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DocumentTemplateParameter
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DynamicImageViewer
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.DynamicLabel
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.Footer
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.GridSortBar
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.GridSortItem
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.Header
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.IDocumentTemplate
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.LineBreak
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.PageBreak
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.StaticImageViewer
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.StaticLabel
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.Style
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.Table
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.TableCell
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.TableRow
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.TemplateGrid
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.TemplateGridContents
import typingsJapgolly.mendixmodelsdk.srcGenDocumenttemplatesMod.documenttemplates.Title
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AccessRule
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Annotation
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Association
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AssociationCapabilities
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AssociationDeleteBehavior
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AssociationRef
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Attribute
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AttributeCapabilities
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AttributeRef
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.AutoNumberAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.BinaryAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.BooleanAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.CalculatedValue
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.CrossAssociation
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.CurrencyAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.DateTimeAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.DecimalAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.DirectEntityRef
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Entity
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EntityCapabilities
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EntityKey
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EntityKeyPart
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EntityRefStep
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EnumerationAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EqualsToRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.EventHandler
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.FloatAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Generalization
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.HashedStringAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IAssociationBase
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IAttribute
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IDomainModel
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IEntity
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IRemoteEntitySourceDocument
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.Index
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IndexedAttribute
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IndirectEntityRef
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.IntegerAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.LongAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.MaxLengthRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.MemberAccess
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.NoGeneralization
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.RangeRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.RegExRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.RequiredRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.StoredValue
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.StringAttributeType
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.UniqueRuleInfo
import typingsJapgolly.mendixmodelsdk.srcGenDomainmodelsMod.domainmodels.ValidationRule
import typingsJapgolly.mendixmodelsdk.srcGenEnumerationsMod.enumerations.Condition
import typingsJapgolly.mendixmodelsdk.srcGenEnumerationsMod.enumerations.EnumerationValue
import typingsJapgolly.mendixmodelsdk.srcGenEnumerationsMod.enumerations.IEnumeration
import typingsJapgolly.mendixmodelsdk.srcGenEnumerationsMod.enumerations.IEnumerationValue
import typingsJapgolly.mendixmodelsdk.srcGenExportmappingsMod.exportmappings.ExportObjectMappingElement
import typingsJapgolly.mendixmodelsdk.srcGenExportmappingsMod.exportmappings.ExportValueMappingElement
import typingsJapgolly.mendixmodelsdk.srcGenExportmappingsMod.exportmappings.IExportMapping
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.BinaryExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.BooleanLiteral
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.ConstantRefExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.EmptyLiteral
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.EnumerationValueRefExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.FloatLiteral
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.FunctionCallExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.GlobalVariableRef
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.IfExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.IntegerLiteral
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.NoExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.NoVariableRef
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.ParenthesisExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.StringLiteral
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.UnaryExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.UnparsableExpression
import typingsJapgolly.mendixmodelsdk.srcGenExpressionsMod.expressions.VariableRefExpression
import typingsJapgolly.mendixmodelsdk.srcGenImagesMod.images.IImage
import typingsJapgolly.mendixmodelsdk.srcGenImagesMod.images.IImageCollection
import typingsJapgolly.mendixmodelsdk.srcGenImagesMod.images.Image
import typingsJapgolly.mendixmodelsdk.srcGenImportmappingsMod.importmappings.IImportMapping
import typingsJapgolly.mendixmodelsdk.srcGenImportmappingsMod.importmappings.ImportObjectMappingElement
import typingsJapgolly.mendixmodelsdk.srcGenImportmappingsMod.importmappings.ImportValueMappingElement
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ExportMappingJavaActionParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ExportMappingParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.IJavaAction
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.IJavaActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ImportMappingJavaActionParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ImportMappingParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.JavaActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.MicroflowJavaActionParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.MicroflowParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJavascriptactionsMod.javascriptactions.IJavaScriptAction
import typingsJapgolly.mendixmodelsdk.srcGenJavascriptactionsMod.javascriptactions.IJavaScriptActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenJavascriptactionsMod.javascriptactions.JavaScriptActionParameter
import typingsJapgolly.mendixmodelsdk.srcGenJavascriptactionsMod.javascriptactions.NanoflowJavaScriptActionParameterType
import typingsJapgolly.mendixmodelsdk.srcGenJsonstructuresMod.jsonstructures.IJsonStructure
import typingsJapgolly.mendixmodelsdk.srcGenJsonstructuresMod.jsonstructures.JsonElement
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.IConsumedKafkaService
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.IPublishedKafkaService
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.KafkaMappedValue
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.KafkaRemoteEntitySource
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.PublishedKafkaResource
import typingsJapgolly.mendixmodelsdk.srcGenKafkaMod.kafka.PublishedKafkaResourceAttribute
import typingsJapgolly.mendixmodelsdk.srcGenMappingsMod.mappings.IMappingDocument
import typingsJapgolly.mendixmodelsdk.srcGenMappingsMod.mappings.MappingMicroflowCall
import typingsJapgolly.mendixmodelsdk.srcGenMappingsMod.mappings.MappingMicroflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenMenusMod.menus.IMenuDocument
import typingsJapgolly.mendixmodelsdk.srcGenMenusMod.menus.MenuItem
import typingsJapgolly.mendixmodelsdk.srcGenMenusMod.menus.MenuItemCollection
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.AssociationElement
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.AttributeElement
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.EntityElement
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.EntityMessageDefinition
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.ExposedAssociation
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.ExposedAttribute
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.ExposedEntity
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.IMessageDefinition
import typingsJapgolly.mendixmodelsdk.srcGenMessagedefinitionsMod.messagedefinitions.IMessageDefinitionCollection
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AbortOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ActionActivity
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AdvancedRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AggregateListAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AnnotationFlow
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AppServiceCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AppServiceCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ApplyJumpToOptionAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.AssociationRetrieveSource
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.BasicCodeActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.BasicJavaActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.BinaryRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.BreakEvent
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CastAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ChangeListAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ChangeObjectAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ChangeVariableAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CloseFormAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CommitAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ConstantRange
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Contains
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ContinueEvent
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ContinueOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CounterMeterAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CreateListAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CreateObjectAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CreateVariableAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CustomRange
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.CustomRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.DatabaseRetrieveSource
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.DeleteAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.DeleteExternalObject
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.DocumentTemplateParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.DownloadFileAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.EndEvent
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.EntityTypeCodeActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.EntityTypeJavaActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.EnumerationCase
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ErrorEvent
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExclusiveMerge
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExclusiveSplit
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExportMappingJavaActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExportMappingParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExportXmlAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ExpressionSplitCondition
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.FileDocumentExport
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Filter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.FilterByExpression
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Find
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.FindByExpression
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.FormDataPart
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.FormDataRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.GaugeMeterAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.GenerateDocumentAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.GenerateJumpToOptionsAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.GetWorkflowDataAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Head
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.HttpConfiguration
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.HttpHeaderEntry
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IMicroflow
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IMicroflowBase
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IMicroflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.INanoflow
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.INanoflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IRule
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IRuleParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IServerSideMicroflow
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ImportMappingCall
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ImportMappingJavaActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ImportMappingParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ImportXmlAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IncrementCounterMeterAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.InheritanceCase
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.InheritanceSplit
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Intersect
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.IterableList
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.JavaActionCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.JavaActionParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.JavaScriptActionCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.JavaScriptActionParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ListEquals
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ListOperationAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.LogMessageAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.LoopedActivity
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MLModelCall
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MLModelCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MLModelCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MappingRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MemberChange
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MeterTagMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowCall
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowJavaActionParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowObjectCollection
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowParameterObject
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.MicroflowParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.NanoflowCall
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.NanoflowCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.NanoflowCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.NanoflowParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.NoCase
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.OpenUserTaskAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.OpenWorkflowAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.PauseOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.PrimitiveTypedTemplateArgument
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ProxyConfiguration
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.PushToClientAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RestCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RestartOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ResultHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ResumeOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RetrieveAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RetryOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RollbackAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RuleCall
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RuleCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RuleParameter
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.RuleSplitCondition
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SendExternalObject
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SequenceFlow
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SetTaskOutcomeAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ShowHomePageAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ShowMessageAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ShowPageAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SimpleRequestHandling
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Sort
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SortItem
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SortItemList
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.StartEvent
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.StringTemplate
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.StringTemplateParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Subtract
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.SynchronizeAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Tail
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.TemplateArgument
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.TextTemplate
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.TypedTemplate
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Union
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.UnpauseOperation
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.ValidationFeedbackAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.VariableExport
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WebServiceCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WebServiceOperationAdvancedParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WebServiceOperationSimpleParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WhileLoopCondition
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WorkflowCallAction
import typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.WorkflowOperationAction
import typingsJapgolly.mendixmodelsdk.srcGenMlmappingsMod.mlmappings.IMLMappingDocument
import typingsJapgolly.mendixmodelsdk.srcGenMlmappingsMod.mlmappings.MLModelEntityMappings
import typingsJapgolly.mendixmodelsdk.srcGenMlmappingsMod.mlmappings.MLModelMappings
import typingsJapgolly.mendixmodelsdk.srcGenMlmappingsMod.mlmappings.TensorDimension
import typingsJapgolly.mendixmodelsdk.srcGenMlmappingsMod.mlmappings.TensorMappingElement
import typingsJapgolly.mendixmodelsdk.srcGenNanoflowsMod.nanoflows.NanoflowParameterValue
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.BottomBarItem
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.INativeLayout
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.INativePage
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.NativeLayoutCallArgument
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.NativePageClientAction
import typingsJapgolly.mendixmodelsdk.srcGenNativepagesMod.nativepages.NativePlaceholder
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.HomePage
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.INavigationDocument
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.INavigationProfile
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.NativeHomePage
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.NativeNavigationProfile
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.NavigationProfile
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.OfflineEntityConfig
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.ProgressiveWebAppSettings
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.RoleBasedHomePage
import typingsJapgolly.mendixmodelsdk.srcGenNavigationMod.navigation.RoleBasedNativeHomePage
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ActionButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Appearance
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.AssociationSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.BackButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CallNanoflowClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CallWorkflowClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CancelButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CancelChangesClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CheckBox
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ClientTemplate
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ClientTemplateParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ClosePageClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ComparisonSearchField
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ConditionalEditabilitySettings
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ConditionalVisibilitySettings
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ConfirmationInfo
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.CreateObjectClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGridAddButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGridExportToCSVButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGridExportToExcelButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGridRemoveButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewActionButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewCancelButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewCloseButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewControlBar
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewSaveButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataViewSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DatabaseConstraint
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DatePicker
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DeleteClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DesignPropertyValue
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DivContainer
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DropDown
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DropDownButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DropDownButtonItem
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DropDownSearchField
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DynamicText
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.EditPageTemplateType
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.FileManager
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.FormattingInfo
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GlyphIcon
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridActionButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridColumn
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridControlBar
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridDatabaseSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridDeleteButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridDeselectAllButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridEditButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridNewButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSearchButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSelectAllButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridXPathSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GroupBox
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.HorizontalSplitPane
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.IBuildingBlock
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.IFormBase
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ILayout
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ILayoutParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.IPage
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.IPageParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.IPageTemplate
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ISnippet
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ITemplateFormBase
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ImageIcon
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ImageUploader
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ImageViewerSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.InputReferenceSetSelector
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Label
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutCall
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutCallArgument
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutGrid
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutGridColumn
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutGridRow
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LayoutParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LinkButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListView
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListViewDatabaseSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListViewSearch
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListViewTemplate
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListViewXPathSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ListenTargetSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LoginButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LoginIdTextBox
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.LogoutButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MasterDetail
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MasterDetailDetailRegion
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MasterDetailMasterRegion
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MenuBar
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MenuDocumentSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MicroflowClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MicroflowParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MicroflowSettings
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.MicroflowSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NanoflowParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NanoflowSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NativeLayoutContent
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NavigationList
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NavigationListItem
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NavigationSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NavigationTree
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NewButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.NoClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OfflineSchema
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OfflineSchemaFetchInstruction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OnClickEnlarge
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OnClickMicroflow
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OnClickNothing
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OpenLinkClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OpenUserTaskClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.OpenWorkflowClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageForSpecialization
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageSettings
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PageVariable
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.PasswordTextBox
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Placeholder
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RadioButtonGroup
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RangeSearchField
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ReferenceSelector
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ReferenceSetSelector
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ReferenceSetSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RegularPageTemplateType
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RetrievalQuery
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RetrievalQueryParameter
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RetrievalSchema
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.RuntimeOperation
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SaveButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SaveChangesClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ScrollContainer
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ScrollContainerRegion
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SearchBar
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SelectButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SelectPageTemplateType
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SelectorDatabaseSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SelectorMicroflowSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SelectorXPathSource
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SetTaskOutcomeClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SidebarToggleButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SignOutClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SimpleMenuBar
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SnippetCall
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SnippetCallWidget
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.StaticOrDynamicString
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SyncButton
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.SyncClientAction
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TabContainer
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TabPage
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TableColumn
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TemplatePlaceholder
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TextArea
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TextBox
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.UserTaskTemplateType
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.ValidationMessage
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.VerticalFlow
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.VerticalSplitPane
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.WebLayoutContent
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.WidgetValidation
import typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.WorkflowOverviewTemplateType
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IDocument
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IFolder
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IFolderBase
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IModule
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IModuleDocument
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IModuleSettings
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IProject
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IProjectConversion
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.IProjectDocument
import typingsJapgolly.mendixmodelsdk.srcGenProjectsMod.projects.OneTimeConversionMarker
import typingsJapgolly.mendixmodelsdk.srcGenQueuesMod.queues.BasicQueueConfig
import typingsJapgolly.mendixmodelsdk.srcGenQueuesMod.queues.IQueue
import typingsJapgolly.mendixmodelsdk.srcGenQueuesMod.queues.QueueExponentialRetry
import typingsJapgolly.mendixmodelsdk.srcGenQueuesMod.queues.QueueFixedRetry
import typingsJapgolly.mendixmodelsdk.srcGenQueuesMod.queues.QueueSettings
import typingsJapgolly.mendixmodelsdk.srcGenRegularexpressionsMod.regularexpressions.IRegularExpression
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.BasicReport
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.BasicReportAggregate
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.BasicReportColumn
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportButton
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportChart
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportChartSeries
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportDateRangeField
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportDateRangeSelector
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportDropDown
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportPane
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportZoomInfo
import typingsJapgolly.mendixmodelsdk.srcGenReportsMod.reports.ReportZoomMapping
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.CallMicroflowToChange
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.CallMicroflowToRead
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ChangeNotSupported
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ChangeSource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.CorsConfiguration
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.IConsumedODataService
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.IInteractiveRest
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.IPublishedODataService
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.IPublishedRestService
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.MetadataReference
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ODataKey
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ODataKeyPart
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ODataMappedValue
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ODataRemoteAssociationSource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ODataRemoteEntitySource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.PublishedODataContract
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.PublishedRestResource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.PublishedRestServiceOperation
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.PublishedRestServiceResource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.QueryOptions
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ReadSource
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.RestOperationParameter
import typingsJapgolly.mendixmodelsdk.srcGenRestMod.rest.ServiceFeed
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.DaySchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.HourSchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.IScheduledEvent
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.MinuteSchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.MonthDateSchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.MonthWeekdaySchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.WeekSchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.YearDateSchedule
import typingsJapgolly.mendixmodelsdk.srcGenScheduledeventsMod.scheduledevents.YearWeekdaySchedule
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.DemoUser
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.FileDocumentAccessRuleContainer
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.IModuleRole
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.IModuleSecurity
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.IProjectSecurity
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.IUserRole
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.ImageAccessRuleContainer
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.ModuleRole
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.PasswordPolicySettings
import typingsJapgolly.mendixmodelsdk.srcGenSecurityMod.security.UserRole
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ActionActivityDefaultColor
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.Certificate
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.CertificateSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.Configuration
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ConfigurationSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ConstantValue
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.CustomSetting
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.IProjectSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.IntegrationProjectSettingsPart
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.JarDeploymentSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.JavaActionsSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.Language
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.LanguageSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ModelerSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ProtectedModuleJarLocation
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.RuntimeSettings
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.ThemeModuleEntry
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.UserLibJarLocation
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.WebUIProjectSettingsPart
import typingsJapgolly.mendixmodelsdk.srcGenSettingsMod.settings.WorkflowsProjectSettingsPart
import typingsJapgolly.mendixmodelsdk.srcGenTextsMod.texts.ISystemTextCollection
import typingsJapgolly.mendixmodelsdk.srcGenTextsMod.texts.SystemText
import typingsJapgolly.mendixmodelsdk.srcGenTextsMod.texts.Text
import typingsJapgolly.mendixmodelsdk.srcGenTextsMod.texts.Translation
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.DataAssociation
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.DataAttribute
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.DataEntity
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.IImportedWebService
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.IPublishedAppService
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.IPublishedServiceBase
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.IPublishedWebService
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.OperationInfo
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.PartEncoding
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.PublishedOperation
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.PublishedParameter
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.RpcMessagePartElement
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.RpcOperationElement
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.ServiceInfo
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.SystemIdDataAttribute
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.VersionedService
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.WsdlDescription
import typingsJapgolly.mendixmodelsdk.srcGenWebservicesMod.webservices.WsdlEntry
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.BooleanConditionOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.CallMicroflowTask
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.CallWorkflowActivity
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.EmptyUserSource
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.EndWorkflowActivity
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.EnumerationValueConditionOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.ExclusiveSplitActivity
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.Flow
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.IParameter
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.IUserTaskOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.IWorkflow
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.JumpToActivity
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.MicroflowBasedEvent
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.MicroflowBasedUserSource
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.MicroflowEventHandler
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.NoEvent
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.PageReference
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.ParallelSplitActivity
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.ParallelSplitOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.Parameter
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.UserTask
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.UserTaskOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.VoidConditionOutcome
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.WorkflowCallParameterMapping
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.WorkflowType
import typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.XPathBasedUserSource
import typingsJapgolly.mendixmodelsdk.srcGenXmlschemasMod.xmlschemas.IMxSchema
import typingsJapgolly.mendixmodelsdk.srcGenXmlschemasMod.xmlschemas.IXmlSchema
import typingsJapgolly.mendixmodelsdk.srcGenXmlschemasMod.xmlschemas.XmlElement
import typingsJapgolly.mendixmodelsdk.srcGenXmlschemasMod.xmlschemas.XmlSchemaEntry
import typingsJapgolly.mendixmodelsdk.srcSdkInternalAbstractModelMod.AbstractModel
import typingsJapgolly.mendixmodelsdk.srcSdkInternalAbstractModelMod.IAbstractModel
import typingsJapgolly.mendixmodelsdk.srcSdkInternalImodelserverclientMod.IModelServerClient
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object srcGenBaseModelMod {
  
  /* note: abstract class */ /* import warning: transforms.RemoveMultipleInheritance#findNewParents newComments Dropped parents 
  - typingsJapgolly.mendixmodelsdk.srcSdkInternalAbstractModelMod.IAbstractModel because Already inherited
  - typingsJapgolly.mendixmodelsdk.srcGenBaseModelMod.IBaseModel because var conflicts: id, metaModelVersion, mxVersionForModel, workingCopy. Inlined createElement, allBuildingBlocks, allCodeActions, allConstants, allConsumedAppServices, allConsumedBusinessEventServices, allConsumedKafkaServices, allConsumedODataServices, allDataSets, allDocuments, allDocumentTemplates, allDomainModels, allEnumerations, allExportMappings, allFolders, allFolderBases, allFormBases, allImageCollections, allImportMappings, allImportedWebServices, allInteractiveRests, allJavaActions, allJavaScriptActions, allJsonStructures, allLayouts, allMLMappingDocuments, allMappingDocuments, allMenuDocuments, allMessageDefinitionCollections, allMicroflows, allMicroflowBases, allModules, allModuleDocuments, allModuleSecurities, allModuleSettings, allMxSchemas, allNanoflows, allNativeLayouts, allNativePages, allNavigationDocuments, allPages, allPageTemplates, allProjects, allProjectConversions, allProjectDocuments, allProjectSecurities, allProjectSettings, allPublishedAppServices, allPublishedBusinessEventServices, allPublishedKafkaServices, allPublishedODataServices, allPublishedRestServices, allPublishedServiceBases, allPublishedWebServices, allQueues, allRegularExpressions, allRemoteEntitySourceDocuments, allRules, allScheduledEvents, allServerSideMicroflows, allSnippets, allSystemTextCollections, allTemplateFormBases, allWorkflows, allXmlSchemas, findAppServiceActionByQualifiedName, findAppServiceActionParameterByQualifiedName, findConstantByQualifiedName, findDataSetByQualifiedName, findDataSetParameterByQualifiedName, findDocumentTemplateByQualifiedName, findAssociationBaseByQualifiedName, findAttributeByQualifiedName, findEntityByQualifiedName, findRemoteEntitySourceDocumentByQualifiedName, findEnumerationByQualifiedName, findEnumerationValueByQualifiedName, findExportMappingByQualifiedName, findImageByQualifiedName, findImportMappingByQualifiedName, findJavaActionByQualifiedName, findJavaActionParameterByQualifiedName, findJavaScriptActionByQualifiedName, findJavaScriptActionParameterByQualifiedName, findJsonStructureByQualifiedName, findConsumedKafkaServiceByQualifiedName, findMLMappingDocumentByQualifiedName, findMenuDocumentByQualifiedName, findMessageDefinitionByQualifiedName, findMicroflowByQualifiedName, findMicroflowParameterByQualifiedName, findNanoflowByQualifiedName, findNanoflowParameterByQualifiedName, findRuleByQualifiedName, findRuleParameterByQualifiedName, findNativeLayoutByQualifiedName, findNativePageByQualifiedName, findNavigationProfileByQualifiedName, findLayoutByQualifiedName, findLayoutParameterByQualifiedName, findPageByQualifiedName, findPageParameterByQualifiedName, findSnippetByQualifiedName, findQueueByQualifiedName, findRegularExpressionByQualifiedName, findConsumedODataServiceByQualifiedName, findModuleRoleByQualifiedName, findUserRoleByQualifiedName, findImportedWebServiceByQualifiedName, findParameterByQualifiedName, findUserTaskOutcomeByQualifiedName, findWorkflowByQualifiedName, findXmlSchemaByQualifiedName */ @JSImport("mendixmodelsdk/src/gen/base-model", "BaseModel")
  @js.native
  open class BaseModel protected () extends AbstractModel {
    def this(_client: IModelServerClient, _errorHandler: IErrorCallback) = this()
    
    def allBuildingBlocks(): js.Array[IBuildingBlock] = js.native
    
    def allCodeActions(): js.Array[ICodeAction] = js.native
    
    def allConstants(): js.Array[IConstant] = js.native
    
    def allConsumedAppServices(): js.Array[IConsumedAppService] = js.native
    
    def allConsumedBusinessEventServices(): js.Array[IConsumedBusinessEventService] = js.native
    
    def allConsumedKafkaServices(): js.Array[IConsumedKafkaService] = js.native
    
    def allConsumedODataServices(): js.Array[IConsumedODataService] = js.native
    
    def allDataSets(): js.Array[IDataSet] = js.native
    
    def allDocumentTemplates(): js.Array[IDocumentTemplate] = js.native
    
    def allDocuments(): js.Array[IDocument] = js.native
    
    def allDomainModels(): js.Array[IDomainModel] = js.native
    
    def allEnumerations(): js.Array[IEnumeration] = js.native
    
    def allExportMappings(): js.Array[IExportMapping] = js.native
    
    def allFolderBases(): js.Array[IFolderBase] = js.native
    
    def allFolders(): js.Array[IFolder] = js.native
    
    def allFormBases(): js.Array[IFormBase] = js.native
    
    def allImageCollections(): js.Array[IImageCollection] = js.native
    
    def allImportMappings(): js.Array[IImportMapping] = js.native
    
    def allImportedWebServices(): js.Array[IImportedWebService] = js.native
    
    def allInteractiveRests(): js.Array[IInteractiveRest] = js.native
    
    def allJavaActions(): js.Array[IJavaAction] = js.native
    
    def allJavaScriptActions(): js.Array[IJavaScriptAction] = js.native
    
    def allJsonStructures(): js.Array[IJsonStructure] = js.native
    
    def allLayouts(): js.Array[ILayout] = js.native
    
    def allMLMappingDocuments(): js.Array[IMLMappingDocument] = js.native
    
    def allMappingDocuments(): js.Array[IMappingDocument] = js.native
    
    def allMenuDocuments(): js.Array[IMenuDocument] = js.native
    
    def allMessageDefinitionCollections(): js.Array[IMessageDefinitionCollection] = js.native
    
    def allMicroflowBases(): js.Array[IMicroflowBase] = js.native
    
    def allMicroflows(): js.Array[IMicroflow] = js.native
    
    def allModuleDocuments(): js.Array[IModuleDocument] = js.native
    
    def allModuleSecurities(): js.Array[IModuleSecurity] = js.native
    
    def allModuleSettings(): js.Array[IModuleSettings] = js.native
    
    def allModules(): js.Array[IModule] = js.native
    
    def allMxSchemas(): js.Array[IMxSchema] = js.native
    
    def allNanoflows(): js.Array[INanoflow] = js.native
    
    def allNativeLayouts(): js.Array[INativeLayout] = js.native
    
    def allNativePages(): js.Array[INativePage] = js.native
    
    def allNavigationDocuments(): js.Array[INavigationDocument] = js.native
    
    def allPageTemplates(): js.Array[IPageTemplate] = js.native
    
    def allPages(): js.Array[IPage] = js.native
    
    def allProjectConversions(): js.Array[IProjectConversion] = js.native
    
    def allProjectDocuments(): js.Array[IProjectDocument] = js.native
    
    def allProjectSecurities(): js.Array[IProjectSecurity] = js.native
    
    def allProjectSettings(): js.Array[IProjectSettings] = js.native
    
    def allProjects(): js.Array[IProject] = js.native
    
    def allPublishedAppServices(): js.Array[IPublishedAppService] = js.native
    
    def allPublishedBusinessEventServices(): js.Array[IPublishedBusinessEventService] = js.native
    
    def allPublishedKafkaServices(): js.Array[IPublishedKafkaService] = js.native
    
    def allPublishedODataServices(): js.Array[IPublishedODataService] = js.native
    
    def allPublishedRestServices(): js.Array[IPublishedRestService] = js.native
    
    def allPublishedServiceBases(): js.Array[IPublishedServiceBase] = js.native
    
    def allPublishedWebServices(): js.Array[IPublishedWebService] = js.native
    
    def allQueues(): js.Array[IQueue] = js.native
    
    def allRegularExpressions(): js.Array[IRegularExpression] = js.native
    
    def allRemoteEntitySourceDocuments(): js.Array[IRemoteEntitySourceDocument] = js.native
    
    def allRules(): js.Array[IRule] = js.native
    
    def allScheduledEvents(): js.Array[IScheduledEvent] = js.native
    
    def allServerSideMicroflows(): js.Array[IServerSideMicroflow] = js.native
    
    def allSnippets(): js.Array[ISnippet] = js.native
    
    def allSystemTextCollections(): js.Array[ISystemTextCollection] = js.native
    
    def allTemplateFormBases(): js.Array[ITemplateFormBase] = js.native
    
    def allWorkflows(): js.Array[IWorkflow] = js.native
    
    def allXmlSchemas(): js.Array[IXmlSchema] = js.native
    
    /**
      * Creates and returns a new element in the SDK and on the server.
      * After creation, assign or add this instance to a property that accepts this kind of elements.
      * @param typeName `structureTypeName` of the element type you want to create
      */
    def createElement[T /* <: /* keyof mendixmodelsdk.mendixmodelsdk/src/gen/base-model.ConcreteModelElements */ /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 640, starting with typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$AppServiceAction, typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$AppServiceActionParameter, typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$Msd */ Any */](typeName: T): /* import warning: importer.ImportType#apply Failed type conversion: mendixmodelsdk.mendixmodelsdk/src/gen/base-model.ConcreteModelElements[T] */ js.Any = js.native
    
    def findAppServiceActionByQualifiedName(qname: String): IAppServiceAction | Null = js.native
    
    def findAppServiceActionParameterByQualifiedName(qname: String): IAppServiceActionParameter | Null = js.native
    
    def findAssociationBaseByQualifiedName(qname: String): IAssociationBase | Null = js.native
    
    def findAttributeByQualifiedName(qname: String): IAttribute | Null = js.native
    
    def findConstantByQualifiedName(qname: String): IConstant | Null = js.native
    
    def findConsumedKafkaServiceByQualifiedName(qname: String): IConsumedKafkaService | Null = js.native
    
    def findConsumedODataServiceByQualifiedName(qname: String): IConsumedODataService | Null = js.native
    
    def findDataSetByQualifiedName(qname: String): IDataSet | Null = js.native
    
    def findDataSetParameterByQualifiedName(qname: String): IDataSetParameter | Null = js.native
    
    def findDocumentTemplateByQualifiedName(qname: String): IDocumentTemplate | Null = js.native
    
    def findEntityByQualifiedName(qname: String): IEntity | Null = js.native
    
    def findEnumerationByQualifiedName(qname: String): IEnumeration | Null = js.native
    
    def findEnumerationValueByQualifiedName(qname: String): IEnumerationValue | Null = js.native
    
    def findExportMappingByQualifiedName(qname: String): IExportMapping | Null = js.native
    
    def findImageByQualifiedName(qname: String): IImage | Null = js.native
    
    def findImportMappingByQualifiedName(qname: String): IImportMapping | Null = js.native
    
    def findImportedWebServiceByQualifiedName(qname: String): IImportedWebService | Null = js.native
    
    def findJavaActionByQualifiedName(qname: String): IJavaAction | Null = js.native
    
    def findJavaActionParameterByQualifiedName(qname: String): IJavaActionParameter | Null = js.native
    
    def findJavaScriptActionByQualifiedName(qname: String): IJavaScriptAction | Null = js.native
    
    def findJavaScriptActionParameterByQualifiedName(qname: String): IJavaScriptActionParameter | Null = js.native
    
    def findJsonStructureByQualifiedName(qname: String): IJsonStructure | Null = js.native
    
    def findLayoutByQualifiedName(qname: String): ILayout | Null = js.native
    
    def findLayoutParameterByQualifiedName(qname: String): ILayoutParameter | Null = js.native
    
    def findMLMappingDocumentByQualifiedName(qname: String): IMLMappingDocument | Null = js.native
    
    def findMenuDocumentByQualifiedName(qname: String): IMenuDocument | Null = js.native
    
    def findMessageDefinitionByQualifiedName(qname: String): IMessageDefinition | Null = js.native
    
    def findMicroflowByQualifiedName(qname: String): IMicroflow | Null = js.native
    
    def findMicroflowParameterByQualifiedName(qname: String): IMicroflowParameter | Null = js.native
    
    def findModuleRoleByQualifiedName(qname: String): IModuleRole | Null = js.native
    
    def findNanoflowByQualifiedName(qname: String): INanoflow | Null = js.native
    
    def findNanoflowParameterByQualifiedName(qname: String): INanoflowParameter | Null = js.native
    
    def findNativeLayoutByQualifiedName(qname: String): INativeLayout | Null = js.native
    
    def findNativePageByQualifiedName(qname: String): INativePage | Null = js.native
    
    def findNavigationProfileByQualifiedName(qname: String): INavigationProfile | Null = js.native
    
    def findPageByQualifiedName(qname: String): IPage | Null = js.native
    
    def findPageParameterByQualifiedName(qname: String): IPageParameter | Null = js.native
    
    def findParameterByQualifiedName(qname: String): IParameter | Null = js.native
    
    def findQueueByQualifiedName(qname: String): IQueue | Null = js.native
    
    def findRegularExpressionByQualifiedName(qname: String): IRegularExpression | Null = js.native
    
    def findRemoteEntitySourceDocumentByQualifiedName(qname: String): IRemoteEntitySourceDocument | Null = js.native
    
    def findRuleByQualifiedName(qname: String): IRule | Null = js.native
    
    def findRuleParameterByQualifiedName(qname: String): IRuleParameter | Null = js.native
    
    def findSnippetByQualifiedName(qname: String): ISnippet | Null = js.native
    
    def findUserRoleByQualifiedName(qname: String): IUserRole | Null = js.native
    
    def findUserTaskOutcomeByQualifiedName(qname: String): IUserTaskOutcome | Null = js.native
    
    def findWorkflowByQualifiedName(qname: String): IWorkflow | Null = js.native
    
    def findXmlSchemaByQualifiedName(qname: String): IXmlSchema | Null = js.native
  }
  
  trait ConcreteModelElements extends StObject {
    
    @JSName("AppServices$AppServiceAction")
    var AppServices$AppServiceAction: AppServiceAction
    
    @JSName("AppServices$AppServiceActionParameter")
    var AppServices$AppServiceActionParameter: AppServiceActionParameter
    
    @JSName("AppServices$Msd")
    var AppServices$Msd: Msd
    
    @JSName("AppServices$MsdAssociation")
    var AppServices$MsdAssociation: MsdAssociation
    
    @JSName("AppServices$MsdAttribute")
    var AppServices$MsdAttribute: MsdAttribute
    
    @JSName("AppServices$MsdDomainModel")
    var AppServices$MsdDomainModel: MsdDomainModel
    
    @JSName("AppServices$MsdEntity")
    var AppServices$MsdEntity: MsdEntity
    
    @JSName("AppServices$MsdEnumeration")
    var AppServices$MsdEnumeration: MsdEnumeration
    
    @JSName("AppServices$MsdEnumerationContainer")
    var AppServices$MsdEnumerationContainer: MsdEnumerationContainer
    
    @JSName("AppServices$MsdEnumerationValue")
    var AppServices$MsdEnumerationValue: MsdEnumerationValue
    
    @JSName("AppServices$MsdMetadata")
    var AppServices$MsdMetadata: MsdMetadata
    
    @JSName("AppServices$MsdMicroflow")
    var AppServices$MsdMicroflow: MsdMicroflow
    
    @JSName("AppServices$MsdMicroflowParameter")
    var AppServices$MsdMicroflowParameter: MsdMicroflowParameter
    
    @JSName("AppServices$MsdText")
    var AppServices$MsdText: MsdText
    
    @JSName("AppServices$MsdVersion")
    var AppServices$MsdVersion: MsdVersion
    
    @JSName("BusinessEvents$ConsumedBusinessEvent")
    var BusinessEvents$ConsumedBusinessEvent: ConsumedBusinessEvent
    
    @JSName("BusinessEvents$PublishedChannel")
    var BusinessEvents$PublishedChannel: PublishedChannel
    
    @JSName("BusinessEvents$PublishedMessage")
    var BusinessEvents$PublishedMessage: PublishedMessage
    
    @JSName("BusinessEvents$PublishedMessageAttribute")
    var BusinessEvents$PublishedMessageAttribute: PublishedMessageAttribute
    
    @JSName("CodeActions$BasicParameterType")
    var CodeActions$BasicParameterType: BasicParameterType
    
    @JSName("CodeActions$BooleanType")
    var CodeActions$BooleanType: BooleanType
    
    @JSName("CodeActions$ConcreteEntityType")
    var CodeActions$ConcreteEntityType: ConcreteEntityType
    
    @JSName("CodeActions$DateTimeType")
    var CodeActions$DateTimeType: DateTimeType
    
    @JSName("CodeActions$DecimalType")
    var CodeActions$DecimalType: DecimalType
    
    @JSName("CodeActions$EntityTypeParameterType")
    var CodeActions$EntityTypeParameterType: EntityTypeParameterType
    
    @JSName("CodeActions$EnumerationType")
    var CodeActions$EnumerationType: EnumerationType
    
    @JSName("CodeActions$FloatType")
    var CodeActions$FloatType: FloatType
    
    @JSName("CodeActions$IntegerType")
    var CodeActions$IntegerType: IntegerType
    
    @JSName("CodeActions$ListType")
    var CodeActions$ListType: ListType
    
    @JSName("CodeActions$MicroflowActionInfo")
    var CodeActions$MicroflowActionInfo: MicroflowActionInfo
    
    @JSName("CodeActions$ParameterizedEntityType")
    var CodeActions$ParameterizedEntityType: ParameterizedEntityType
    
    @JSName("CodeActions$StringTemplateParameterType")
    var CodeActions$StringTemplateParameterType: StringTemplateParameterType
    
    @JSName("CodeActions$StringType")
    var CodeActions$StringType: StringType
    
    @JSName("CodeActions$TypeParameter")
    var CodeActions$TypeParameter: TypeParameter
    
    @JSName("CodeActions$VoidType")
    var CodeActions$VoidType: VoidType
    
    @JSName("CustomWidgets$CustomWidget")
    var CustomWidgets$CustomWidget: CustomWidget
    
    @JSName("CustomWidgets$CustomWidgetDatabaseSource")
    var CustomWidgets$CustomWidgetDatabaseSource: CustomWidgetDatabaseSource
    
    @JSName("CustomWidgets$CustomWidgetType")
    var CustomWidgets$CustomWidgetType: CustomWidgetType
    
    @JSName("CustomWidgets$CustomWidgetXPathSource")
    var CustomWidgets$CustomWidgetXPathSource: CustomWidgetXPathSource
    
    @JSName("CustomWidgets$WidgetEnumerationValue")
    var CustomWidgets$WidgetEnumerationValue: WidgetEnumerationValue
    
    @JSName("CustomWidgets$WidgetObject")
    var CustomWidgets$WidgetObject: WidgetObject
    
    @JSName("CustomWidgets$WidgetObjectType")
    var CustomWidgets$WidgetObjectType: WidgetObjectType
    
    @JSName("CustomWidgets$WidgetProperty")
    var CustomWidgets$WidgetProperty: WidgetProperty
    
    @JSName("CustomWidgets$WidgetPropertyType")
    var CustomWidgets$WidgetPropertyType: WidgetPropertyType
    
    @JSName("CustomWidgets$WidgetReturnType")
    var CustomWidgets$WidgetReturnType: WidgetReturnType
    
    @JSName("CustomWidgets$WidgetTranslation")
    var CustomWidgets$WidgetTranslation: WidgetTranslation
    
    @JSName("CustomWidgets$WidgetValue")
    var CustomWidgets$WidgetValue: WidgetValue
    
    @JSName("CustomWidgets$WidgetValueType")
    var CustomWidgets$WidgetValueType: WidgetValueType
    
    @JSName("DataSets$DataSetAccess")
    var DataSets$DataSetAccess: DataSetAccess
    
    @JSName("DataSets$DataSetColumn")
    var DataSets$DataSetColumn: DataSetColumn
    
    @JSName("DataSets$DataSetConstraintAccess")
    var DataSets$DataSetConstraintAccess: DataSetConstraintAccess
    
    @JSName("DataSets$DataSetDateTimeConstraint")
    var DataSets$DataSetDateTimeConstraint: DataSetDateTimeConstraint
    
    @JSName("DataSets$DataSetModuleRoleAccess")
    var DataSets$DataSetModuleRoleAccess: DataSetModuleRoleAccess
    
    @JSName("DataSets$DataSetNumericConstraint")
    var DataSets$DataSetNumericConstraint: DataSetNumericConstraint
    
    @JSName("DataSets$DataSetObjectConstraint")
    var DataSets$DataSetObjectConstraint: DataSetObjectConstraint
    
    @JSName("DataSets$DataSetParameter")
    var DataSets$DataSetParameter: DataSetParameter
    
    @JSName("DataSets$DataSetParameterAccess")
    var DataSets$DataSetParameterAccess: DataSetParameterAccess
    
    @JSName("DataSets$JavaDataSetSource")
    var DataSets$JavaDataSetSource: JavaDataSetSource
    
    @JSName("DataSets$OqlDataSetSource")
    var DataSets$OqlDataSetSource: OqlDataSetSource
    
    @JSName("DataTypes$BinaryType")
    var DataTypes$BinaryType: BinaryType
    
    @JSName("DataTypes$BooleanType")
    var DataTypes$BooleanType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.BooleanType
    
    @JSName("DataTypes$DateTimeType")
    var DataTypes$DateTimeType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DateTimeType
    
    @JSName("DataTypes$DecimalType")
    var DataTypes$DecimalType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DecimalType
    
    @JSName("DataTypes$EmptyType")
    var DataTypes$EmptyType: EmptyType
    
    @JSName("DataTypes$EnumerationType")
    var DataTypes$EnumerationType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.EnumerationType
    
    @JSName("DataTypes$FloatType")
    var DataTypes$FloatType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.FloatType
    
    @JSName("DataTypes$IntegerType")
    var DataTypes$IntegerType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.IntegerType
    
    @JSName("DataTypes$ListType")
    var DataTypes$ListType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.ListType
    
    @JSName("DataTypes$ObjectType")
    var DataTypes$ObjectType: ObjectType
    
    @JSName("DataTypes$StringType")
    var DataTypes$StringType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.StringType
    
    @JSName("DataTypes$UnknownType")
    var DataTypes$UnknownType: UnknownType
    
    @JSName("DataTypes$VoidType")
    var DataTypes$VoidType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.VoidType
    
    @JSName("DocumentTemplates$ConditionSettings")
    var DocumentTemplates$ConditionSettings: ConditionSettings
    
    @JSName("DocumentTemplates$DataGrid")
    var DocumentTemplates$DataGrid: DataGrid
    
    @JSName("DocumentTemplates$DataGridCell")
    var DocumentTemplates$DataGridCell: DataGridCell
    
    @JSName("DocumentTemplates$DataGridColumn")
    var DocumentTemplates$DataGridColumn: DataGridColumn
    
    @JSName("DocumentTemplates$DataView")
    var DocumentTemplates$DataView: DataView
    
    @JSName("DocumentTemplates$DataViewContents")
    var DocumentTemplates$DataViewContents: DataViewContents
    
    @JSName("DocumentTemplates$DocumentTemplateParameter")
    var DocumentTemplates$DocumentTemplateParameter: DocumentTemplateParameter
    
    @JSName("DocumentTemplates$DynamicImageViewer")
    var DocumentTemplates$DynamicImageViewer: DynamicImageViewer
    
    @JSName("DocumentTemplates$DynamicLabel")
    var DocumentTemplates$DynamicLabel: DynamicLabel
    
    @JSName("DocumentTemplates$Footer")
    var DocumentTemplates$Footer: Footer
    
    @JSName("DocumentTemplates$GridSortBar")
    var DocumentTemplates$GridSortBar: GridSortBar
    
    @JSName("DocumentTemplates$GridSortItem")
    var DocumentTemplates$GridSortItem: GridSortItem
    
    @JSName("DocumentTemplates$Header")
    var DocumentTemplates$Header: Header
    
    @JSName("DocumentTemplates$LineBreak")
    var DocumentTemplates$LineBreak: LineBreak
    
    @JSName("DocumentTemplates$PageBreak")
    var DocumentTemplates$PageBreak: PageBreak
    
    @JSName("DocumentTemplates$StaticImageViewer")
    var DocumentTemplates$StaticImageViewer: StaticImageViewer
    
    @JSName("DocumentTemplates$StaticLabel")
    var DocumentTemplates$StaticLabel: StaticLabel
    
    @JSName("DocumentTemplates$Style")
    var DocumentTemplates$Style: Style
    
    @JSName("DocumentTemplates$Table")
    var DocumentTemplates$Table: Table
    
    @JSName("DocumentTemplates$TableCell")
    var DocumentTemplates$TableCell: TableCell
    
    @JSName("DocumentTemplates$TableRow")
    var DocumentTemplates$TableRow: TableRow
    
    @JSName("DocumentTemplates$TemplateGrid")
    var DocumentTemplates$TemplateGrid: TemplateGrid
    
    @JSName("DocumentTemplates$TemplateGridContents")
    var DocumentTemplates$TemplateGridContents: TemplateGridContents
    
    @JSName("DocumentTemplates$Title")
    var DocumentTemplates$Title: Title
    
    @JSName("DomainModels$AccessRule")
    var DomainModels$AccessRule: AccessRule
    
    @JSName("DomainModels$Annotation")
    var DomainModels$Annotation: Annotation
    
    @JSName("DomainModels$Association")
    var DomainModels$Association: Association
    
    @JSName("DomainModels$AssociationCapabilities")
    var DomainModels$AssociationCapabilities: AssociationCapabilities
    
    @JSName("DomainModels$AssociationDeleteBehavior")
    var DomainModels$AssociationDeleteBehavior: AssociationDeleteBehavior
    
    @JSName("DomainModels$AssociationRef")
    var DomainModels$AssociationRef: AssociationRef
    
    @JSName("DomainModels$Attribute")
    var DomainModels$Attribute: Attribute
    
    @JSName("DomainModels$AttributeCapabilities")
    var DomainModels$AttributeCapabilities: AttributeCapabilities
    
    @JSName("DomainModels$AttributeRef")
    var DomainModels$AttributeRef: AttributeRef
    
    @JSName("DomainModels$AutoNumberAttributeType")
    var DomainModels$AutoNumberAttributeType: AutoNumberAttributeType
    
    @JSName("DomainModels$BinaryAttributeType")
    var DomainModels$BinaryAttributeType: BinaryAttributeType
    
    @JSName("DomainModels$BooleanAttributeType")
    var DomainModels$BooleanAttributeType: BooleanAttributeType
    
    @JSName("DomainModels$CalculatedValue")
    var DomainModels$CalculatedValue: CalculatedValue
    
    @JSName("DomainModels$CrossAssociation")
    var DomainModels$CrossAssociation: CrossAssociation
    
    @JSName("DomainModels$CurrencyAttributeType")
    var DomainModels$CurrencyAttributeType: CurrencyAttributeType
    
    @JSName("DomainModels$DateTimeAttributeType")
    var DomainModels$DateTimeAttributeType: DateTimeAttributeType
    
    @JSName("DomainModels$DecimalAttributeType")
    var DomainModels$DecimalAttributeType: DecimalAttributeType
    
    @JSName("DomainModels$DirectEntityRef")
    var DomainModels$DirectEntityRef: DirectEntityRef
    
    @JSName("DomainModels$Entity")
    var DomainModels$Entity: Entity
    
    @JSName("DomainModels$EntityCapabilities")
    var DomainModels$EntityCapabilities: EntityCapabilities
    
    @JSName("DomainModels$EntityKey")
    var DomainModels$EntityKey: EntityKey
    
    @JSName("DomainModels$EntityKeyPart")
    var DomainModels$EntityKeyPart: EntityKeyPart
    
    @JSName("DomainModels$EntityRefStep")
    var DomainModels$EntityRefStep: EntityRefStep
    
    @JSName("DomainModels$EnumerationAttributeType")
    var DomainModels$EnumerationAttributeType: EnumerationAttributeType
    
    @JSName("DomainModels$EqualsToRuleInfo")
    var DomainModels$EqualsToRuleInfo: EqualsToRuleInfo
    
    @JSName("DomainModels$EventHandler")
    var DomainModels$EventHandler: EventHandler
    
    @JSName("DomainModels$FloatAttributeType")
    var DomainModels$FloatAttributeType: FloatAttributeType
    
    @JSName("DomainModels$Generalization")
    var DomainModels$Generalization: Generalization
    
    @JSName("DomainModels$HashedStringAttributeType")
    var DomainModels$HashedStringAttributeType: HashedStringAttributeType
    
    @JSName("DomainModels$Index")
    var DomainModels$Index: Index
    
    @JSName("DomainModels$IndexedAttribute")
    var DomainModels$IndexedAttribute: IndexedAttribute
    
    @JSName("DomainModels$IndirectEntityRef")
    var DomainModels$IndirectEntityRef: IndirectEntityRef
    
    @JSName("DomainModels$IntegerAttributeType")
    var DomainModels$IntegerAttributeType: IntegerAttributeType
    
    @JSName("DomainModels$LongAttributeType")
    var DomainModels$LongAttributeType: LongAttributeType
    
    @JSName("DomainModels$MaxLengthRuleInfo")
    var DomainModels$MaxLengthRuleInfo: MaxLengthRuleInfo
    
    @JSName("DomainModels$MemberAccess")
    var DomainModels$MemberAccess: MemberAccess
    
    @JSName("DomainModels$NoGeneralization")
    var DomainModels$NoGeneralization: NoGeneralization
    
    @JSName("DomainModels$RangeRuleInfo")
    var DomainModels$RangeRuleInfo: RangeRuleInfo
    
    @JSName("DomainModels$RegExRuleInfo")
    var DomainModels$RegExRuleInfo: RegExRuleInfo
    
    @JSName("DomainModels$RequiredRuleInfo")
    var DomainModels$RequiredRuleInfo: RequiredRuleInfo
    
    @JSName("DomainModels$StoredValue")
    var DomainModels$StoredValue: StoredValue
    
    @JSName("DomainModels$StringAttributeType")
    var DomainModels$StringAttributeType: StringAttributeType
    
    @JSName("DomainModels$UniqueRuleInfo")
    var DomainModels$UniqueRuleInfo: UniqueRuleInfo
    
    @JSName("DomainModels$ValidationRule")
    var DomainModels$ValidationRule: ValidationRule
    
    @JSName("Enumerations$Condition")
    var Enumerations$Condition: Condition
    
    @JSName("Enumerations$EnumerationValue")
    var Enumerations$EnumerationValue: EnumerationValue
    
    @JSName("ExportMappings$ExportObjectMappingElement")
    var ExportMappings$ExportObjectMappingElement: ExportObjectMappingElement
    
    @JSName("ExportMappings$ExportValueMappingElement")
    var ExportMappings$ExportValueMappingElement: ExportValueMappingElement
    
    @JSName("Expressions$BinaryExpression")
    var Expressions$BinaryExpression: BinaryExpression
    
    @JSName("Expressions$BooleanLiteral")
    var Expressions$BooleanLiteral: BooleanLiteral
    
    @JSName("Expressions$ConstantRefExpression")
    var Expressions$ConstantRefExpression: ConstantRefExpression
    
    @JSName("Expressions$EmptyLiteral")
    var Expressions$EmptyLiteral: EmptyLiteral
    
    @JSName("Expressions$EnumerationValueRefExpression")
    var Expressions$EnumerationValueRefExpression: EnumerationValueRefExpression
    
    @JSName("Expressions$FloatLiteral")
    var Expressions$FloatLiteral: FloatLiteral
    
    @JSName("Expressions$FunctionCallExpression")
    var Expressions$FunctionCallExpression: FunctionCallExpression
    
    @JSName("Expressions$GlobalVariableRef")
    var Expressions$GlobalVariableRef: GlobalVariableRef
    
    @JSName("Expressions$IfExpression")
    var Expressions$IfExpression: IfExpression
    
    @JSName("Expressions$IntegerLiteral")
    var Expressions$IntegerLiteral: IntegerLiteral
    
    @JSName("Expressions$NoExpression")
    var Expressions$NoExpression: NoExpression
    
    @JSName("Expressions$NoVariableRef")
    var Expressions$NoVariableRef: NoVariableRef
    
    @JSName("Expressions$ParenthesisExpression")
    var Expressions$ParenthesisExpression: ParenthesisExpression
    
    @JSName("Expressions$StringLiteral")
    var Expressions$StringLiteral: StringLiteral
    
    @JSName("Expressions$UnaryExpression")
    var Expressions$UnaryExpression: UnaryExpression
    
    @JSName("Expressions$UnparsableExpression")
    var Expressions$UnparsableExpression: UnparsableExpression
    
    @JSName("Expressions$VariableRefExpression")
    var Expressions$VariableRefExpression: VariableRefExpression
    
    @JSName("Images$Image")
    var Images$Image: Image
    
    @JSName("ImportMappings$ImportObjectMappingElement")
    var ImportMappings$ImportObjectMappingElement: ImportObjectMappingElement
    
    @JSName("ImportMappings$ImportValueMappingElement")
    var ImportMappings$ImportValueMappingElement: ImportValueMappingElement
    
    @JSName("JavaActions$BasicParameterType")
    var JavaActions$BasicParameterType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BasicParameterType
    
    @JSName("JavaActions$BooleanType")
    var JavaActions$BooleanType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BooleanType
    
    @JSName("JavaActions$ConcreteEntityType")
    var JavaActions$ConcreteEntityType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ConcreteEntityType
    
    @JSName("JavaActions$DateTimeType")
    var JavaActions$DateTimeType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DateTimeType
    
    @JSName("JavaActions$DecimalType")
    var JavaActions$DecimalType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DecimalType
    
    @JSName("JavaActions$EntityTypeParameterType")
    var JavaActions$EntityTypeParameterType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EntityTypeParameterType
    
    @JSName("JavaActions$EnumerationType")
    var JavaActions$EnumerationType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EnumerationType
    
    @JSName("JavaActions$ExportMappingJavaActionParameterType")
    var JavaActions$ExportMappingJavaActionParameterType: ExportMappingJavaActionParameterType
    
    @JSName("JavaActions$ExportMappingParameterType")
    var JavaActions$ExportMappingParameterType: ExportMappingParameterType
    
    @JSName("JavaActions$FloatType")
    var JavaActions$FloatType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.FloatType
    
    @JSName("JavaActions$ImportMappingJavaActionParameterType")
    var JavaActions$ImportMappingJavaActionParameterType: ImportMappingJavaActionParameterType
    
    @JSName("JavaActions$ImportMappingParameterType")
    var JavaActions$ImportMappingParameterType: ImportMappingParameterType
    
    @JSName("JavaActions$IntegerType")
    var JavaActions$IntegerType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.IntegerType
    
    @JSName("JavaActions$JavaActionParameter")
    var JavaActions$JavaActionParameter: JavaActionParameter
    
    @JSName("JavaActions$ListType")
    var JavaActions$ListType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ListType
    
    @JSName("JavaActions$MicroflowActionInfo")
    var JavaActions$MicroflowActionInfo: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.MicroflowActionInfo
    
    @JSName("JavaActions$MicroflowJavaActionParameterType")
    var JavaActions$MicroflowJavaActionParameterType: MicroflowJavaActionParameterType
    
    @JSName("JavaActions$MicroflowParameterType")
    var JavaActions$MicroflowParameterType: MicroflowParameterType
    
    @JSName("JavaActions$ParameterizedEntityType")
    var JavaActions$ParameterizedEntityType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ParameterizedEntityType
    
    @JSName("JavaActions$StringType")
    var JavaActions$StringType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.StringType
    
    @JSName("JavaActions$TypeParameter")
    var JavaActions$TypeParameter: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.TypeParameter
    
    @JSName("JavaScriptActions$JavaScriptActionParameter")
    var JavaScriptActions$JavaScriptActionParameter: JavaScriptActionParameter
    
    @JSName("JavaScriptActions$NanoflowJavaScriptActionParameterType")
    var JavaScriptActions$NanoflowJavaScriptActionParameterType: NanoflowJavaScriptActionParameterType
    
    @JSName("JsonStructures$JsonElement")
    var JsonStructures$JsonElement: JsonElement
    
    @JSName("Kafka$KafkaMappedValue")
    var Kafka$KafkaMappedValue: KafkaMappedValue
    
    @JSName("Kafka$KafkaRemoteEntitySource")
    var Kafka$KafkaRemoteEntitySource: KafkaRemoteEntitySource
    
    @JSName("Kafka$PublishedKafkaResource")
    var Kafka$PublishedKafkaResource: PublishedKafkaResource
    
    @JSName("Kafka$PublishedKafkaResourceAttribute")
    var Kafka$PublishedKafkaResourceAttribute: PublishedKafkaResourceAttribute
    
    @JSName("MLMappings$MLModelEntityMappings")
    var MLMappings$MLModelEntityMappings: MLModelEntityMappings
    
    @JSName("MLMappings$MLModelMappings")
    var MLMappings$MLModelMappings: MLModelMappings
    
    @JSName("MLMappings$TensorDimension")
    var MLMappings$TensorDimension: TensorDimension
    
    @JSName("MLMappings$TensorMappingElement")
    var MLMappings$TensorMappingElement: TensorMappingElement
    
    @JSName("Mappings$MappingMicroflowCall")
    var Mappings$MappingMicroflowCall: MappingMicroflowCall
    
    @JSName("Mappings$MappingMicroflowParameter")
    var Mappings$MappingMicroflowParameter: MappingMicroflowParameter
    
    @JSName("Menus$MenuItem")
    var Menus$MenuItem: MenuItem
    
    @JSName("Menus$MenuItemCollection")
    var Menus$MenuItemCollection: MenuItemCollection
    
    @JSName("MessageDefinitions$AssociationElement")
    var MessageDefinitions$AssociationElement: AssociationElement
    
    @JSName("MessageDefinitions$AttributeElement")
    var MessageDefinitions$AttributeElement: AttributeElement
    
    @JSName("MessageDefinitions$EntityElement")
    var MessageDefinitions$EntityElement: EntityElement
    
    @JSName("MessageDefinitions$EntityMessageDefinition")
    var MessageDefinitions$EntityMessageDefinition: EntityMessageDefinition
    
    @JSName("MessageDefinitions$ExposedAssociation")
    var MessageDefinitions$ExposedAssociation: ExposedAssociation
    
    @JSName("MessageDefinitions$ExposedAttribute")
    var MessageDefinitions$ExposedAttribute: ExposedAttribute
    
    @JSName("MessageDefinitions$ExposedEntity")
    var MessageDefinitions$ExposedEntity: ExposedEntity
    
    @JSName("Microflows$AbortOperation")
    var Microflows$AbortOperation: AbortOperation
    
    @JSName("Microflows$ActionActivity")
    var Microflows$ActionActivity: ActionActivity
    
    @JSName("Microflows$AdvancedRequestHandling")
    var Microflows$AdvancedRequestHandling: AdvancedRequestHandling
    
    @JSName("Microflows$AggregateListAction")
    var Microflows$AggregateListAction: AggregateListAction
    
    @JSName("Microflows$Annotation")
    var Microflows$Annotation: typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Annotation
    
    @JSName("Microflows$AnnotationFlow")
    var Microflows$AnnotationFlow: AnnotationFlow
    
    @JSName("Microflows$AppServiceCallAction")
    var Microflows$AppServiceCallAction: AppServiceCallAction
    
    @JSName("Microflows$AppServiceCallParameterMapping")
    var Microflows$AppServiceCallParameterMapping: AppServiceCallParameterMapping
    
    @JSName("Microflows$ApplyJumpToOptionAction")
    var Microflows$ApplyJumpToOptionAction: ApplyJumpToOptionAction
    
    @JSName("Microflows$AssociationRetrieveSource")
    var Microflows$AssociationRetrieveSource: AssociationRetrieveSource
    
    @JSName("Microflows$BasicCodeActionParameterValue")
    var Microflows$BasicCodeActionParameterValue: BasicCodeActionParameterValue
    
    @JSName("Microflows$BasicJavaActionParameterValue")
    var Microflows$BasicJavaActionParameterValue: BasicJavaActionParameterValue
    
    @JSName("Microflows$BinaryRequestHandling")
    var Microflows$BinaryRequestHandling: BinaryRequestHandling
    
    @JSName("Microflows$BreakEvent")
    var Microflows$BreakEvent: BreakEvent
    
    @JSName("Microflows$CastAction")
    var Microflows$CastAction: CastAction
    
    @JSName("Microflows$ChangeListAction")
    var Microflows$ChangeListAction: ChangeListAction
    
    @JSName("Microflows$ChangeObjectAction")
    var Microflows$ChangeObjectAction: ChangeObjectAction
    
    @JSName("Microflows$ChangeVariableAction")
    var Microflows$ChangeVariableAction: ChangeVariableAction
    
    @JSName("Microflows$CloseFormAction")
    var Microflows$CloseFormAction: CloseFormAction
    
    @JSName("Microflows$CommitAction")
    var Microflows$CommitAction: CommitAction
    
    @JSName("Microflows$ConstantRange")
    var Microflows$ConstantRange: ConstantRange
    
    @JSName("Microflows$Contains")
    var Microflows$Contains: Contains
    
    @JSName("Microflows$ContinueEvent")
    var Microflows$ContinueEvent: ContinueEvent
    
    @JSName("Microflows$ContinueOperation")
    var Microflows$ContinueOperation: ContinueOperation
    
    @JSName("Microflows$CounterMeterAction")
    var Microflows$CounterMeterAction: CounterMeterAction
    
    @JSName("Microflows$CreateListAction")
    var Microflows$CreateListAction: CreateListAction
    
    @JSName("Microflows$CreateObjectAction")
    var Microflows$CreateObjectAction: CreateObjectAction
    
    @JSName("Microflows$CreateVariableAction")
    var Microflows$CreateVariableAction: CreateVariableAction
    
    @JSName("Microflows$CustomRange")
    var Microflows$CustomRange: CustomRange
    
    @JSName("Microflows$CustomRequestHandling")
    var Microflows$CustomRequestHandling: CustomRequestHandling
    
    @JSName("Microflows$DatabaseRetrieveSource")
    var Microflows$DatabaseRetrieveSource: DatabaseRetrieveSource
    
    @JSName("Microflows$DeleteAction")
    var Microflows$DeleteAction: DeleteAction
    
    @JSName("Microflows$DeleteExternalObject")
    var Microflows$DeleteExternalObject: DeleteExternalObject
    
    @JSName("Microflows$DocumentTemplateParameterMapping")
    var Microflows$DocumentTemplateParameterMapping: DocumentTemplateParameterMapping
    
    @JSName("Microflows$DownloadFileAction")
    var Microflows$DownloadFileAction: DownloadFileAction
    
    @JSName("Microflows$EndEvent")
    var Microflows$EndEvent: EndEvent
    
    @JSName("Microflows$EntityTypeCodeActionParameterValue")
    var Microflows$EntityTypeCodeActionParameterValue: EntityTypeCodeActionParameterValue
    
    @JSName("Microflows$EntityTypeJavaActionParameterValue")
    var Microflows$EntityTypeJavaActionParameterValue: EntityTypeJavaActionParameterValue
    
    @JSName("Microflows$EnumerationCase")
    var Microflows$EnumerationCase: EnumerationCase
    
    @JSName("Microflows$ErrorEvent")
    var Microflows$ErrorEvent: ErrorEvent
    
    @JSName("Microflows$ExclusiveMerge")
    var Microflows$ExclusiveMerge: ExclusiveMerge
    
    @JSName("Microflows$ExclusiveSplit")
    var Microflows$ExclusiveSplit: ExclusiveSplit
    
    @JSName("Microflows$ExportMappingJavaActionParameterValue")
    var Microflows$ExportMappingJavaActionParameterValue: ExportMappingJavaActionParameterValue
    
    @JSName("Microflows$ExportMappingParameterValue")
    var Microflows$ExportMappingParameterValue: ExportMappingParameterValue
    
    @JSName("Microflows$ExportXmlAction")
    var Microflows$ExportXmlAction: ExportXmlAction
    
    @JSName("Microflows$ExpressionSplitCondition")
    var Microflows$ExpressionSplitCondition: ExpressionSplitCondition
    
    @JSName("Microflows$FileDocumentExport")
    var Microflows$FileDocumentExport: FileDocumentExport
    
    @JSName("Microflows$Filter")
    var Microflows$Filter: Filter
    
    @JSName("Microflows$FilterByExpression")
    var Microflows$FilterByExpression: FilterByExpression
    
    @JSName("Microflows$Find")
    var Microflows$Find: Find
    
    @JSName("Microflows$FindByExpression")
    var Microflows$FindByExpression: FindByExpression
    
    @JSName("Microflows$FormDataPart")
    var Microflows$FormDataPart: FormDataPart
    
    @JSName("Microflows$FormDataRequestHandling")
    var Microflows$FormDataRequestHandling: FormDataRequestHandling
    
    @JSName("Microflows$GaugeMeterAction")
    var Microflows$GaugeMeterAction: GaugeMeterAction
    
    @JSName("Microflows$GenerateDocumentAction")
    var Microflows$GenerateDocumentAction: GenerateDocumentAction
    
    @JSName("Microflows$GenerateJumpToOptionsAction")
    var Microflows$GenerateJumpToOptionsAction: GenerateJumpToOptionsAction
    
    @JSName("Microflows$GetWorkflowDataAction")
    var Microflows$GetWorkflowDataAction: GetWorkflowDataAction
    
    @JSName("Microflows$Head")
    var Microflows$Head: Head
    
    @JSName("Microflows$HttpConfiguration")
    var Microflows$HttpConfiguration: HttpConfiguration
    
    @JSName("Microflows$HttpHeaderEntry")
    var Microflows$HttpHeaderEntry: HttpHeaderEntry
    
    @JSName("Microflows$ImportMappingCall")
    var Microflows$ImportMappingCall: ImportMappingCall
    
    @JSName("Microflows$ImportMappingJavaActionParameterValue")
    var Microflows$ImportMappingJavaActionParameterValue: ImportMappingJavaActionParameterValue
    
    @JSName("Microflows$ImportMappingParameterValue")
    var Microflows$ImportMappingParameterValue: ImportMappingParameterValue
    
    @JSName("Microflows$ImportXmlAction")
    var Microflows$ImportXmlAction: ImportXmlAction
    
    @JSName("Microflows$IncrementCounterMeterAction")
    var Microflows$IncrementCounterMeterAction: IncrementCounterMeterAction
    
    @JSName("Microflows$InheritanceCase")
    var Microflows$InheritanceCase: InheritanceCase
    
    @JSName("Microflows$InheritanceSplit")
    var Microflows$InheritanceSplit: InheritanceSplit
    
    @JSName("Microflows$Intersect")
    var Microflows$Intersect: Intersect
    
    @JSName("Microflows$IterableList")
    var Microflows$IterableList: IterableList
    
    @JSName("Microflows$JavaActionCallAction")
    var Microflows$JavaActionCallAction: JavaActionCallAction
    
    @JSName("Microflows$JavaActionParameterMapping")
    var Microflows$JavaActionParameterMapping: JavaActionParameterMapping
    
    @JSName("Microflows$JavaScriptActionCallAction")
    var Microflows$JavaScriptActionCallAction: JavaScriptActionCallAction
    
    @JSName("Microflows$JavaScriptActionParameterMapping")
    var Microflows$JavaScriptActionParameterMapping: JavaScriptActionParameterMapping
    
    @JSName("Microflows$ListEquals")
    var Microflows$ListEquals: ListEquals
    
    @JSName("Microflows$ListOperationAction")
    var Microflows$ListOperationAction: ListOperationAction
    
    @JSName("Microflows$LogMessageAction")
    var Microflows$LogMessageAction: LogMessageAction
    
    @JSName("Microflows$LoopedActivity")
    var Microflows$LoopedActivity: LoopedActivity
    
    @JSName("Microflows$MLModelCall")
    var Microflows$MLModelCall: MLModelCall
    
    @JSName("Microflows$MLModelCallAction")
    var Microflows$MLModelCallAction: MLModelCallAction
    
    @JSName("Microflows$MLModelCallParameterMapping")
    var Microflows$MLModelCallParameterMapping: MLModelCallParameterMapping
    
    @JSName("Microflows$MappingRequestHandling")
    var Microflows$MappingRequestHandling: MappingRequestHandling
    
    @JSName("Microflows$MemberChange")
    var Microflows$MemberChange: MemberChange
    
    @JSName("Microflows$MeterTagMapping")
    var Microflows$MeterTagMapping: MeterTagMapping
    
    @JSName("Microflows$MicroflowCall")
    var Microflows$MicroflowCall: MicroflowCall
    
    @JSName("Microflows$MicroflowCallAction")
    var Microflows$MicroflowCallAction: MicroflowCallAction
    
    @JSName("Microflows$MicroflowCallParameterMapping")
    var Microflows$MicroflowCallParameterMapping: MicroflowCallParameterMapping
    
    @JSName("Microflows$MicroflowJavaActionParameterValue")
    var Microflows$MicroflowJavaActionParameterValue: MicroflowJavaActionParameterValue
    
    @JSName("Microflows$MicroflowObjectCollection")
    var Microflows$MicroflowObjectCollection: MicroflowObjectCollection
    
    @JSName("Microflows$MicroflowParameter")
    var Microflows$MicroflowParameter: MicroflowParameter
    
    @JSName("Microflows$MicroflowParameterObject")
    var Microflows$MicroflowParameterObject: MicroflowParameterObject
    
    @JSName("Microflows$MicroflowParameterValue")
    var Microflows$MicroflowParameterValue: MicroflowParameterValue
    
    @JSName("Microflows$NanoflowCall")
    var Microflows$NanoflowCall: NanoflowCall
    
    @JSName("Microflows$NanoflowCallAction")
    var Microflows$NanoflowCallAction: NanoflowCallAction
    
    @JSName("Microflows$NanoflowCallParameterMapping")
    var Microflows$NanoflowCallParameterMapping: NanoflowCallParameterMapping
    
    @JSName("Microflows$NanoflowParameter")
    var Microflows$NanoflowParameter: NanoflowParameter
    
    @JSName("Microflows$NoCase")
    var Microflows$NoCase: NoCase
    
    @JSName("Microflows$OpenUserTaskAction")
    var Microflows$OpenUserTaskAction: OpenUserTaskAction
    
    @JSName("Microflows$OpenWorkflowAction")
    var Microflows$OpenWorkflowAction: OpenWorkflowAction
    
    @JSName("Microflows$PauseOperation")
    var Microflows$PauseOperation: PauseOperation
    
    @JSName("Microflows$PrimitiveTypedTemplateArgument")
    var Microflows$PrimitiveTypedTemplateArgument: PrimitiveTypedTemplateArgument
    
    @JSName("Microflows$ProxyConfiguration")
    var Microflows$ProxyConfiguration: ProxyConfiguration
    
    @JSName("Microflows$PushToClientAction")
    var Microflows$PushToClientAction: PushToClientAction
    
    @JSName("Microflows$RestCallAction")
    var Microflows$RestCallAction: RestCallAction
    
    @JSName("Microflows$RestartOperation")
    var Microflows$RestartOperation: RestartOperation
    
    @JSName("Microflows$ResultHandling")
    var Microflows$ResultHandling: ResultHandling
    
    @JSName("Microflows$ResumeOperation")
    var Microflows$ResumeOperation: ResumeOperation
    
    @JSName("Microflows$RetrieveAction")
    var Microflows$RetrieveAction: RetrieveAction
    
    @JSName("Microflows$RetryOperation")
    var Microflows$RetryOperation: RetryOperation
    
    @JSName("Microflows$RollbackAction")
    var Microflows$RollbackAction: RollbackAction
    
    @JSName("Microflows$RuleCall")
    var Microflows$RuleCall: RuleCall
    
    @JSName("Microflows$RuleCallParameterMapping")
    var Microflows$RuleCallParameterMapping: RuleCallParameterMapping
    
    @JSName("Microflows$RuleParameter")
    var Microflows$RuleParameter: RuleParameter
    
    @JSName("Microflows$RuleSplitCondition")
    var Microflows$RuleSplitCondition: RuleSplitCondition
    
    @JSName("Microflows$SendExternalObject")
    var Microflows$SendExternalObject: SendExternalObject
    
    @JSName("Microflows$SequenceFlow")
    var Microflows$SequenceFlow: SequenceFlow
    
    @JSName("Microflows$SetTaskOutcomeAction")
    var Microflows$SetTaskOutcomeAction: SetTaskOutcomeAction
    
    @JSName("Microflows$ShowHomePageAction")
    var Microflows$ShowHomePageAction: ShowHomePageAction
    
    @JSName("Microflows$ShowMessageAction")
    var Microflows$ShowMessageAction: ShowMessageAction
    
    @JSName("Microflows$ShowPageAction")
    var Microflows$ShowPageAction: ShowPageAction
    
    @JSName("Microflows$SimpleRequestHandling")
    var Microflows$SimpleRequestHandling: SimpleRequestHandling
    
    @JSName("Microflows$Sort")
    var Microflows$Sort: Sort
    
    @JSName("Microflows$SortItem")
    var Microflows$SortItem: SortItem
    
    @JSName("Microflows$SortItemList")
    var Microflows$SortItemList: SortItemList
    
    @JSName("Microflows$StartEvent")
    var Microflows$StartEvent: StartEvent
    
    @JSName("Microflows$StringTemplate")
    var Microflows$StringTemplate: StringTemplate
    
    @JSName("Microflows$StringTemplateParameterValue")
    var Microflows$StringTemplateParameterValue: StringTemplateParameterValue
    
    @JSName("Microflows$Subtract")
    var Microflows$Subtract: Subtract
    
    @JSName("Microflows$SynchronizeAction")
    var Microflows$SynchronizeAction: SynchronizeAction
    
    @JSName("Microflows$Tail")
    var Microflows$Tail: Tail
    
    @JSName("Microflows$TemplateArgument")
    var Microflows$TemplateArgument: TemplateArgument
    
    @JSName("Microflows$TextTemplate")
    var Microflows$TextTemplate: TextTemplate
    
    @JSName("Microflows$TypedTemplate")
    var Microflows$TypedTemplate: TypedTemplate
    
    @JSName("Microflows$Union")
    var Microflows$Union: Union
    
    @JSName("Microflows$UnpauseOperation")
    var Microflows$UnpauseOperation: UnpauseOperation
    
    @JSName("Microflows$ValidationFeedbackAction")
    var Microflows$ValidationFeedbackAction: ValidationFeedbackAction
    
    @JSName("Microflows$VariableExport")
    var Microflows$VariableExport: VariableExport
    
    @JSName("Microflows$WebServiceCallAction")
    var Microflows$WebServiceCallAction: WebServiceCallAction
    
    @JSName("Microflows$WebServiceOperationAdvancedParameterMapping")
    var Microflows$WebServiceOperationAdvancedParameterMapping: WebServiceOperationAdvancedParameterMapping
    
    @JSName("Microflows$WebServiceOperationSimpleParameterMapping")
    var Microflows$WebServiceOperationSimpleParameterMapping: WebServiceOperationSimpleParameterMapping
    
    @JSName("Microflows$WhileLoopCondition")
    var Microflows$WhileLoopCondition: WhileLoopCondition
    
    @JSName("Microflows$WorkflowCallAction")
    var Microflows$WorkflowCallAction: WorkflowCallAction
    
    @JSName("Microflows$WorkflowOperationAction")
    var Microflows$WorkflowOperationAction: WorkflowOperationAction
    
    @JSName("Nanoflows$NanoflowParameterValue")
    var Nanoflows$NanoflowParameterValue: NanoflowParameterValue
    
    @JSName("NativePages$BottomBarItem")
    var NativePages$BottomBarItem: BottomBarItem
    
    @JSName("NativePages$NativeLayoutCallArgument")
    var NativePages$NativeLayoutCallArgument: NativeLayoutCallArgument
    
    @JSName("NativePages$NativePageClientAction")
    var NativePages$NativePageClientAction: NativePageClientAction
    
    @JSName("NativePages$NativePlaceholder")
    var NativePages$NativePlaceholder: NativePlaceholder
    
    @JSName("Navigation$HomePage")
    var Navigation$HomePage: HomePage
    
    @JSName("Navigation$NativeHomePage")
    var Navigation$NativeHomePage: NativeHomePage
    
    @JSName("Navigation$NativeNavigationProfile")
    var Navigation$NativeNavigationProfile: NativeNavigationProfile
    
    @JSName("Navigation$NavigationProfile")
    var Navigation$NavigationProfile: NavigationProfile
    
    @JSName("Navigation$OfflineEntityConfig")
    var Navigation$OfflineEntityConfig: OfflineEntityConfig
    
    @JSName("Navigation$ProgressiveWebAppSettings")
    var Navigation$ProgressiveWebAppSettings: ProgressiveWebAppSettings
    
    @JSName("Navigation$RoleBasedHomePage")
    var Navigation$RoleBasedHomePage: RoleBasedHomePage
    
    @JSName("Navigation$RoleBasedNativeHomePage")
    var Navigation$RoleBasedNativeHomePage: RoleBasedNativeHomePage
    
    @JSName("Pages$ActionButton")
    var Pages$ActionButton: ActionButton
    
    @JSName("Pages$Appearance")
    var Pages$Appearance: Appearance
    
    @JSName("Pages$AssociationSource")
    var Pages$AssociationSource: AssociationSource
    
    @JSName("Pages$BackButton")
    var Pages$BackButton: BackButton
    
    @JSName("Pages$CallNanoflowClientAction")
    var Pages$CallNanoflowClientAction: CallNanoflowClientAction
    
    @JSName("Pages$CallWorkflowClientAction")
    var Pages$CallWorkflowClientAction: CallWorkflowClientAction
    
    @JSName("Pages$CancelButton")
    var Pages$CancelButton: CancelButton
    
    @JSName("Pages$CancelChangesClientAction")
    var Pages$CancelChangesClientAction: CancelChangesClientAction
    
    @JSName("Pages$CheckBox")
    var Pages$CheckBox: CheckBox
    
    @JSName("Pages$ClientTemplate")
    var Pages$ClientTemplate: ClientTemplate
    
    @JSName("Pages$ClientTemplateParameter")
    var Pages$ClientTemplateParameter: ClientTemplateParameter
    
    @JSName("Pages$ClosePageClientAction")
    var Pages$ClosePageClientAction: ClosePageClientAction
    
    @JSName("Pages$ComparisonSearchField")
    var Pages$ComparisonSearchField: ComparisonSearchField
    
    @JSName("Pages$ConditionalEditabilitySettings")
    var Pages$ConditionalEditabilitySettings: ConditionalEditabilitySettings
    
    @JSName("Pages$ConditionalVisibilitySettings")
    var Pages$ConditionalVisibilitySettings: ConditionalVisibilitySettings
    
    @JSName("Pages$ConfirmationInfo")
    var Pages$ConfirmationInfo: ConfirmationInfo
    
    @JSName("Pages$CreateObjectClientAction")
    var Pages$CreateObjectClientAction: CreateObjectClientAction
    
    @JSName("Pages$DataGrid")
    var Pages$DataGrid: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGrid
    
    @JSName("Pages$DataGridAddButton")
    var Pages$DataGridAddButton: DataGridAddButton
    
    @JSName("Pages$DataGridExportToCSVButton")
    var Pages$DataGridExportToCSVButton: DataGridExportToCSVButton
    
    @JSName("Pages$DataGridExportToExcelButton")
    var Pages$DataGridExportToExcelButton: DataGridExportToExcelButton
    
    @JSName("Pages$DataGridRemoveButton")
    var Pages$DataGridRemoveButton: DataGridRemoveButton
    
    @JSName("Pages$DataView")
    var Pages$DataView: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataView
    
    @JSName("Pages$DataViewActionButton")
    var Pages$DataViewActionButton: DataViewActionButton
    
    @JSName("Pages$DataViewCancelButton")
    var Pages$DataViewCancelButton: DataViewCancelButton
    
    @JSName("Pages$DataViewCloseButton")
    var Pages$DataViewCloseButton: DataViewCloseButton
    
    @JSName("Pages$DataViewControlBar")
    var Pages$DataViewControlBar: DataViewControlBar
    
    @JSName("Pages$DataViewSaveButton")
    var Pages$DataViewSaveButton: DataViewSaveButton
    
    @JSName("Pages$DataViewSource")
    var Pages$DataViewSource: DataViewSource
    
    @JSName("Pages$DatabaseConstraint")
    var Pages$DatabaseConstraint: DatabaseConstraint
    
    @JSName("Pages$DatePicker")
    var Pages$DatePicker: DatePicker
    
    @JSName("Pages$DeleteClientAction")
    var Pages$DeleteClientAction: DeleteClientAction
    
    @JSName("Pages$DesignPropertyValue")
    var Pages$DesignPropertyValue: DesignPropertyValue
    
    @JSName("Pages$DivContainer")
    var Pages$DivContainer: DivContainer
    
    @JSName("Pages$DropDown")
    var Pages$DropDown: DropDown
    
    @JSName("Pages$DropDownButton")
    var Pages$DropDownButton: DropDownButton
    
    @JSName("Pages$DropDownButtonItem")
    var Pages$DropDownButtonItem: DropDownButtonItem
    
    @JSName("Pages$DropDownSearchField")
    var Pages$DropDownSearchField: DropDownSearchField
    
    @JSName("Pages$DynamicImageViewer")
    var Pages$DynamicImageViewer: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DynamicImageViewer
    
    @JSName("Pages$DynamicText")
    var Pages$DynamicText: DynamicText
    
    @JSName("Pages$EditPageTemplateType")
    var Pages$EditPageTemplateType: EditPageTemplateType
    
    @JSName("Pages$FileManager")
    var Pages$FileManager: FileManager
    
    @JSName("Pages$FormattingInfo")
    var Pages$FormattingInfo: FormattingInfo
    
    @JSName("Pages$GlyphIcon")
    var Pages$GlyphIcon: GlyphIcon
    
    @JSName("Pages$GridActionButton")
    var Pages$GridActionButton: GridActionButton
    
    @JSName("Pages$GridColumn")
    var Pages$GridColumn: GridColumn
    
    @JSName("Pages$GridControlBar")
    var Pages$GridControlBar: GridControlBar
    
    @JSName("Pages$GridDatabaseSource")
    var Pages$GridDatabaseSource: GridDatabaseSource
    
    @JSName("Pages$GridDeleteButton")
    var Pages$GridDeleteButton: GridDeleteButton
    
    @JSName("Pages$GridDeselectAllButton")
    var Pages$GridDeselectAllButton: GridDeselectAllButton
    
    @JSName("Pages$GridEditButton")
    var Pages$GridEditButton: GridEditButton
    
    @JSName("Pages$GridNewButton")
    var Pages$GridNewButton: GridNewButton
    
    @JSName("Pages$GridSearchButton")
    var Pages$GridSearchButton: GridSearchButton
    
    @JSName("Pages$GridSelectAllButton")
    var Pages$GridSelectAllButton: GridSelectAllButton
    
    @JSName("Pages$GridSortBar")
    var Pages$GridSortBar: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSortBar
    
    @JSName("Pages$GridSortItem")
    var Pages$GridSortItem: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSortItem
    
    @JSName("Pages$GridXPathSource")
    var Pages$GridXPathSource: GridXPathSource
    
    @JSName("Pages$GroupBox")
    var Pages$GroupBox: GroupBox
    
    @JSName("Pages$Header")
    var Pages$Header: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Header
    
    @JSName("Pages$HorizontalSplitPane")
    var Pages$HorizontalSplitPane: HorizontalSplitPane
    
    @JSName("Pages$ImageIcon")
    var Pages$ImageIcon: ImageIcon
    
    @JSName("Pages$ImageUploader")
    var Pages$ImageUploader: ImageUploader
    
    @JSName("Pages$ImageViewerSource")
    var Pages$ImageViewerSource: ImageViewerSource
    
    @JSName("Pages$InputReferenceSetSelector")
    var Pages$InputReferenceSetSelector: InputReferenceSetSelector
    
    @JSName("Pages$Label")
    var Pages$Label: Label
    
    @JSName("Pages$LayoutCall")
    var Pages$LayoutCall: LayoutCall
    
    @JSName("Pages$LayoutCallArgument")
    var Pages$LayoutCallArgument: LayoutCallArgument
    
    @JSName("Pages$LayoutGrid")
    var Pages$LayoutGrid: LayoutGrid
    
    @JSName("Pages$LayoutGridColumn")
    var Pages$LayoutGridColumn: LayoutGridColumn
    
    @JSName("Pages$LayoutGridRow")
    var Pages$LayoutGridRow: LayoutGridRow
    
    @JSName("Pages$LayoutParameter")
    var Pages$LayoutParameter: LayoutParameter
    
    @JSName("Pages$LinkButton")
    var Pages$LinkButton: LinkButton
    
    @JSName("Pages$ListView")
    var Pages$ListView: ListView
    
    @JSName("Pages$ListViewDatabaseSource")
    var Pages$ListViewDatabaseSource: ListViewDatabaseSource
    
    @JSName("Pages$ListViewSearch")
    var Pages$ListViewSearch: ListViewSearch
    
    @JSName("Pages$ListViewTemplate")
    var Pages$ListViewTemplate: ListViewTemplate
    
    @JSName("Pages$ListViewXPathSource")
    var Pages$ListViewXPathSource: ListViewXPathSource
    
    @JSName("Pages$ListenTargetSource")
    var Pages$ListenTargetSource: ListenTargetSource
    
    @JSName("Pages$LoginButton")
    var Pages$LoginButton: LoginButton
    
    @JSName("Pages$LoginIdTextBox")
    var Pages$LoginIdTextBox: LoginIdTextBox
    
    @JSName("Pages$LogoutButton")
    var Pages$LogoutButton: LogoutButton
    
    @JSName("Pages$MasterDetail")
    var Pages$MasterDetail: MasterDetail
    
    @JSName("Pages$MasterDetailDetailRegion")
    var Pages$MasterDetailDetailRegion: MasterDetailDetailRegion
    
    @JSName("Pages$MasterDetailMasterRegion")
    var Pages$MasterDetailMasterRegion: MasterDetailMasterRegion
    
    @JSName("Pages$MenuBar")
    var Pages$MenuBar: MenuBar
    
    @JSName("Pages$MenuDocumentSource")
    var Pages$MenuDocumentSource: MenuDocumentSource
    
    @JSName("Pages$MicroflowClientAction")
    var Pages$MicroflowClientAction: MicroflowClientAction
    
    @JSName("Pages$MicroflowParameterMapping")
    var Pages$MicroflowParameterMapping: MicroflowParameterMapping
    
    @JSName("Pages$MicroflowSettings")
    var Pages$MicroflowSettings: MicroflowSettings
    
    @JSName("Pages$MicroflowSource")
    var Pages$MicroflowSource: MicroflowSource
    
    @JSName("Pages$NanoflowParameterMapping")
    var Pages$NanoflowParameterMapping: NanoflowParameterMapping
    
    @JSName("Pages$NanoflowSource")
    var Pages$NanoflowSource: NanoflowSource
    
    @JSName("Pages$NativeLayoutContent")
    var Pages$NativeLayoutContent: NativeLayoutContent
    
    @JSName("Pages$NavigationList")
    var Pages$NavigationList: NavigationList
    
    @JSName("Pages$NavigationListItem")
    var Pages$NavigationListItem: NavigationListItem
    
    @JSName("Pages$NavigationSource")
    var Pages$NavigationSource: NavigationSource
    
    @JSName("Pages$NavigationTree")
    var Pages$NavigationTree: NavigationTree
    
    @JSName("Pages$NewButton")
    var Pages$NewButton: NewButton
    
    @JSName("Pages$NoClientAction")
    var Pages$NoClientAction: NoClientAction
    
    @JSName("Pages$OfflineSchema")
    var Pages$OfflineSchema: OfflineSchema
    
    @JSName("Pages$OfflineSchemaFetchInstruction")
    var Pages$OfflineSchemaFetchInstruction: OfflineSchemaFetchInstruction
    
    @JSName("Pages$OnClickEnlarge")
    var Pages$OnClickEnlarge: OnClickEnlarge
    
    @JSName("Pages$OnClickMicroflow")
    var Pages$OnClickMicroflow: OnClickMicroflow
    
    @JSName("Pages$OnClickNothing")
    var Pages$OnClickNothing: OnClickNothing
    
    @JSName("Pages$OpenLinkClientAction")
    var Pages$OpenLinkClientAction: OpenLinkClientAction
    
    @JSName("Pages$OpenUserTaskClientAction")
    var Pages$OpenUserTaskClientAction: OpenUserTaskClientAction
    
    @JSName("Pages$OpenWorkflowClientAction")
    var Pages$OpenWorkflowClientAction: OpenWorkflowClientAction
    
    @JSName("Pages$PageClientAction")
    var Pages$PageClientAction: PageClientAction
    
    @JSName("Pages$PageForSpecialization")
    var Pages$PageForSpecialization: PageForSpecialization
    
    @JSName("Pages$PageParameter")
    var Pages$PageParameter: PageParameter
    
    @JSName("Pages$PageParameterMapping")
    var Pages$PageParameterMapping: PageParameterMapping
    
    @JSName("Pages$PageSettings")
    var Pages$PageSettings: PageSettings
    
    @JSName("Pages$PageVariable")
    var Pages$PageVariable: PageVariable
    
    @JSName("Pages$PasswordTextBox")
    var Pages$PasswordTextBox: PasswordTextBox
    
    @JSName("Pages$Placeholder")
    var Pages$Placeholder: Placeholder
    
    @JSName("Pages$RadioButtonGroup")
    var Pages$RadioButtonGroup: RadioButtonGroup
    
    @JSName("Pages$RangeSearchField")
    var Pages$RangeSearchField: RangeSearchField
    
    @JSName("Pages$ReferenceSelector")
    var Pages$ReferenceSelector: ReferenceSelector
    
    @JSName("Pages$ReferenceSetSelector")
    var Pages$ReferenceSetSelector: ReferenceSetSelector
    
    @JSName("Pages$ReferenceSetSource")
    var Pages$ReferenceSetSource: ReferenceSetSource
    
    @JSName("Pages$RegularPageTemplateType")
    var Pages$RegularPageTemplateType: RegularPageTemplateType
    
    @JSName("Pages$RetrievalQuery")
    var Pages$RetrievalQuery: RetrievalQuery
    
    @JSName("Pages$RetrievalQueryParameter")
    var Pages$RetrievalQueryParameter: RetrievalQueryParameter
    
    @JSName("Pages$RetrievalSchema")
    var Pages$RetrievalSchema: RetrievalSchema
    
    @JSName("Pages$RuntimeOperation")
    var Pages$RuntimeOperation: RuntimeOperation
    
    @JSName("Pages$SaveButton")
    var Pages$SaveButton: SaveButton
    
    @JSName("Pages$SaveChangesClientAction")
    var Pages$SaveChangesClientAction: SaveChangesClientAction
    
    @JSName("Pages$ScrollContainer")
    var Pages$ScrollContainer: ScrollContainer
    
    @JSName("Pages$ScrollContainerRegion")
    var Pages$ScrollContainerRegion: ScrollContainerRegion
    
    @JSName("Pages$SearchBar")
    var Pages$SearchBar: SearchBar
    
    @JSName("Pages$SelectButton")
    var Pages$SelectButton: SelectButton
    
    @JSName("Pages$SelectPageTemplateType")
    var Pages$SelectPageTemplateType: SelectPageTemplateType
    
    @JSName("Pages$SelectorDatabaseSource")
    var Pages$SelectorDatabaseSource: SelectorDatabaseSource
    
    @JSName("Pages$SelectorMicroflowSource")
    var Pages$SelectorMicroflowSource: SelectorMicroflowSource
    
    @JSName("Pages$SelectorXPathSource")
    var Pages$SelectorXPathSource: SelectorXPathSource
    
    @JSName("Pages$SetTaskOutcomeClientAction")
    var Pages$SetTaskOutcomeClientAction: SetTaskOutcomeClientAction
    
    @JSName("Pages$SidebarToggleButton")
    var Pages$SidebarToggleButton: SidebarToggleButton
    
    @JSName("Pages$SignOutClientAction")
    var Pages$SignOutClientAction: SignOutClientAction
    
    @JSName("Pages$SimpleMenuBar")
    var Pages$SimpleMenuBar: SimpleMenuBar
    
    @JSName("Pages$SnippetCall")
    var Pages$SnippetCall: SnippetCall
    
    @JSName("Pages$SnippetCallWidget")
    var Pages$SnippetCallWidget: SnippetCallWidget
    
    @JSName("Pages$StaticImageViewer")
    var Pages$StaticImageViewer: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.StaticImageViewer
    
    @JSName("Pages$StaticOrDynamicString")
    var Pages$StaticOrDynamicString: StaticOrDynamicString
    
    @JSName("Pages$SyncButton")
    var Pages$SyncButton: SyncButton
    
    @JSName("Pages$SyncClientAction")
    var Pages$SyncClientAction: SyncClientAction
    
    @JSName("Pages$TabContainer")
    var Pages$TabContainer: TabContainer
    
    @JSName("Pages$TabPage")
    var Pages$TabPage: TabPage
    
    @JSName("Pages$Table")
    var Pages$Table: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Table
    
    @JSName("Pages$TableCell")
    var Pages$TableCell: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TableCell
    
    @JSName("Pages$TableColumn")
    var Pages$TableColumn: TableColumn
    
    @JSName("Pages$TableRow")
    var Pages$TableRow: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TableRow
    
    @JSName("Pages$TemplateGrid")
    var Pages$TemplateGrid: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TemplateGrid
    
    @JSName("Pages$TemplateGridContents")
    var Pages$TemplateGridContents: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TemplateGridContents
    
    @JSName("Pages$TemplatePlaceholder")
    var Pages$TemplatePlaceholder: TemplatePlaceholder
    
    @JSName("Pages$TextArea")
    var Pages$TextArea: TextArea
    
    @JSName("Pages$TextBox")
    var Pages$TextBox: TextBox
    
    @JSName("Pages$Title")
    var Pages$Title: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Title
    
    @JSName("Pages$UserTaskTemplateType")
    var Pages$UserTaskTemplateType: UserTaskTemplateType
    
    @JSName("Pages$ValidationMessage")
    var Pages$ValidationMessage: ValidationMessage
    
    @JSName("Pages$VerticalFlow")
    var Pages$VerticalFlow: VerticalFlow
    
    @JSName("Pages$VerticalSplitPane")
    var Pages$VerticalSplitPane: VerticalSplitPane
    
    @JSName("Pages$WebLayoutContent")
    var Pages$WebLayoutContent: WebLayoutContent
    
    @JSName("Pages$WidgetValidation")
    var Pages$WidgetValidation: WidgetValidation
    
    @JSName("Pages$WorkflowOverviewTemplateType")
    var Pages$WorkflowOverviewTemplateType: WorkflowOverviewTemplateType
    
    @JSName("Projects$OneTimeConversionMarker")
    var Projects$OneTimeConversionMarker: OneTimeConversionMarker
    
    @JSName("Queues$BasicQueueConfig")
    var Queues$BasicQueueConfig: BasicQueueConfig
    
    @JSName("Queues$QueueExponentialRetry")
    var Queues$QueueExponentialRetry: QueueExponentialRetry
    
    @JSName("Queues$QueueFixedRetry")
    var Queues$QueueFixedRetry: QueueFixedRetry
    
    @JSName("Queues$QueueSettings")
    var Queues$QueueSettings: QueueSettings
    
    @JSName("Reports$BasicReport")
    var Reports$BasicReport: BasicReport
    
    @JSName("Reports$BasicReportAggregate")
    var Reports$BasicReportAggregate: BasicReportAggregate
    
    @JSName("Reports$BasicReportColumn")
    var Reports$BasicReportColumn: BasicReportColumn
    
    @JSName("Reports$ReportButton")
    var Reports$ReportButton: ReportButton
    
    @JSName("Reports$ReportChart")
    var Reports$ReportChart: ReportChart
    
    @JSName("Reports$ReportChartSeries")
    var Reports$ReportChartSeries: ReportChartSeries
    
    @JSName("Reports$ReportDateRangeField")
    var Reports$ReportDateRangeField: ReportDateRangeField
    
    @JSName("Reports$ReportDateRangeSelector")
    var Reports$ReportDateRangeSelector: ReportDateRangeSelector
    
    @JSName("Reports$ReportDropDown")
    var Reports$ReportDropDown: ReportDropDown
    
    @JSName("Reports$ReportPane")
    var Reports$ReportPane: ReportPane
    
    @JSName("Reports$ReportZoomInfo")
    var Reports$ReportZoomInfo: ReportZoomInfo
    
    @JSName("Reports$ReportZoomMapping")
    var Reports$ReportZoomMapping: ReportZoomMapping
    
    @JSName("Rest$CallMicroflowToChange")
    var Rest$CallMicroflowToChange: CallMicroflowToChange
    
    @JSName("Rest$CallMicroflowToRead")
    var Rest$CallMicroflowToRead: CallMicroflowToRead
    
    @JSName("Rest$ChangeNotSupported")
    var Rest$ChangeNotSupported: ChangeNotSupported
    
    @JSName("Rest$ChangeSource")
    var Rest$ChangeSource: ChangeSource
    
    @JSName("Rest$CorsConfiguration")
    var Rest$CorsConfiguration: CorsConfiguration
    
    @JSName("Rest$MetadataReference")
    var Rest$MetadataReference: MetadataReference
    
    @JSName("Rest$ODataKey")
    var Rest$ODataKey: ODataKey
    
    @JSName("Rest$ODataKeyPart")
    var Rest$ODataKeyPart: ODataKeyPart
    
    @JSName("Rest$ODataMappedValue")
    var Rest$ODataMappedValue: ODataMappedValue
    
    @JSName("Rest$ODataRemoteAssociationSource")
    var Rest$ODataRemoteAssociationSource: ODataRemoteAssociationSource
    
    @JSName("Rest$ODataRemoteEntitySource")
    var Rest$ODataRemoteEntitySource: ODataRemoteEntitySource
    
    @JSName("Rest$PublishedODataContract")
    var Rest$PublishedODataContract: PublishedODataContract
    
    @JSName("Rest$PublishedRestResource")
    var Rest$PublishedRestResource: PublishedRestResource
    
    @JSName("Rest$PublishedRestServiceOperation")
    var Rest$PublishedRestServiceOperation: PublishedRestServiceOperation
    
    @JSName("Rest$PublishedRestServiceResource")
    var Rest$PublishedRestServiceResource: PublishedRestServiceResource
    
    @JSName("Rest$QueryOptions")
    var Rest$QueryOptions: QueryOptions
    
    @JSName("Rest$ReadSource")
    var Rest$ReadSource: ReadSource
    
    @JSName("Rest$RestOperationParameter")
    var Rest$RestOperationParameter: RestOperationParameter
    
    @JSName("Rest$ServiceFeed")
    var Rest$ServiceFeed: ServiceFeed
    
    @JSName("ScheduledEvents$DaySchedule")
    var ScheduledEvents$DaySchedule: DaySchedule
    
    @JSName("ScheduledEvents$HourSchedule")
    var ScheduledEvents$HourSchedule: HourSchedule
    
    @JSName("ScheduledEvents$MinuteSchedule")
    var ScheduledEvents$MinuteSchedule: MinuteSchedule
    
    @JSName("ScheduledEvents$MonthDateSchedule")
    var ScheduledEvents$MonthDateSchedule: MonthDateSchedule
    
    @JSName("ScheduledEvents$MonthWeekdaySchedule")
    var ScheduledEvents$MonthWeekdaySchedule: MonthWeekdaySchedule
    
    @JSName("ScheduledEvents$WeekSchedule")
    var ScheduledEvents$WeekSchedule: WeekSchedule
    
    @JSName("ScheduledEvents$YearDateSchedule")
    var ScheduledEvents$YearDateSchedule: YearDateSchedule
    
    @JSName("ScheduledEvents$YearWeekdaySchedule")
    var ScheduledEvents$YearWeekdaySchedule: YearWeekdaySchedule
    
    @JSName("Security$DemoUser")
    var Security$DemoUser: DemoUser
    
    @JSName("Security$FileDocumentAccessRuleContainer")
    var Security$FileDocumentAccessRuleContainer: FileDocumentAccessRuleContainer
    
    @JSName("Security$ImageAccessRuleContainer")
    var Security$ImageAccessRuleContainer: ImageAccessRuleContainer
    
    @JSName("Security$ModuleRole")
    var Security$ModuleRole: ModuleRole
    
    @JSName("Security$PasswordPolicySettings")
    var Security$PasswordPolicySettings: PasswordPolicySettings
    
    @JSName("Security$UserRole")
    var Security$UserRole: UserRole
    
    @JSName("Settings$ActionActivityDefaultColor")
    var Settings$ActionActivityDefaultColor: ActionActivityDefaultColor
    
    @JSName("Settings$Certificate")
    var Settings$Certificate: Certificate
    
    @JSName("Settings$CertificateSettings")
    var Settings$CertificateSettings: CertificateSettings
    
    @JSName("Settings$Configuration")
    var Settings$Configuration: Configuration
    
    @JSName("Settings$ConfigurationSettings")
    var Settings$ConfigurationSettings: ConfigurationSettings
    
    @JSName("Settings$ConstantValue")
    var Settings$ConstantValue: ConstantValue
    
    @JSName("Settings$CustomSetting")
    var Settings$CustomSetting: CustomSetting
    
    @JSName("Settings$IntegrationProjectSettingsPart")
    var Settings$IntegrationProjectSettingsPart: IntegrationProjectSettingsPart
    
    @JSName("Settings$JarDeploymentSettings")
    var Settings$JarDeploymentSettings: JarDeploymentSettings
    
    @JSName("Settings$JavaActionsSettings")
    var Settings$JavaActionsSettings: JavaActionsSettings
    
    @JSName("Settings$Language")
    var Settings$Language: Language
    
    @JSName("Settings$LanguageSettings")
    var Settings$LanguageSettings: LanguageSettings
    
    @JSName("Settings$ModelerSettings")
    var Settings$ModelerSettings: ModelerSettings
    
    @JSName("Settings$ProtectedModuleJarLocation")
    var Settings$ProtectedModuleJarLocation: ProtectedModuleJarLocation
    
    @JSName("Settings$RuntimeSettings")
    var Settings$RuntimeSettings: RuntimeSettings
    
    @JSName("Settings$ThemeModuleEntry")
    var Settings$ThemeModuleEntry: ThemeModuleEntry
    
    @JSName("Settings$UserLibJarLocation")
    var Settings$UserLibJarLocation: UserLibJarLocation
    
    @JSName("Settings$WebUIProjectSettingsPart")
    var Settings$WebUIProjectSettingsPart: WebUIProjectSettingsPart
    
    @JSName("Settings$WorkflowsProjectSettingsPart")
    var Settings$WorkflowsProjectSettingsPart: WorkflowsProjectSettingsPart
    
    @JSName("Texts$SystemText")
    var Texts$SystemText: SystemText
    
    @JSName("Texts$Text")
    var Texts$Text: Text
    
    @JSName("Texts$Translation")
    var Texts$Translation: Translation
    
    @JSName("WebServices$DataAssociation")
    var WebServices$DataAssociation: DataAssociation
    
    @JSName("WebServices$DataAttribute")
    var WebServices$DataAttribute: DataAttribute
    
    @JSName("WebServices$DataEntity")
    var WebServices$DataEntity: DataEntity
    
    @JSName("WebServices$OperationInfo")
    var WebServices$OperationInfo: OperationInfo
    
    @JSName("WebServices$PartEncoding")
    var WebServices$PartEncoding: PartEncoding
    
    @JSName("WebServices$PublishedOperation")
    var WebServices$PublishedOperation: PublishedOperation
    
    @JSName("WebServices$PublishedParameter")
    var WebServices$PublishedParameter: PublishedParameter
    
    @JSName("WebServices$RpcMessagePartElement")
    var WebServices$RpcMessagePartElement: RpcMessagePartElement
    
    @JSName("WebServices$RpcOperationElement")
    var WebServices$RpcOperationElement: RpcOperationElement
    
    @JSName("WebServices$ServiceInfo")
    var WebServices$ServiceInfo: ServiceInfo
    
    @JSName("WebServices$SystemIdDataAttribute")
    var WebServices$SystemIdDataAttribute: SystemIdDataAttribute
    
    @JSName("WebServices$VersionedService")
    var WebServices$VersionedService: VersionedService
    
    @JSName("WebServices$WsdlDescription")
    var WebServices$WsdlDescription: WsdlDescription
    
    @JSName("WebServices$WsdlEntry")
    var WebServices$WsdlEntry: WsdlEntry
    
    @JSName("Workflows$Annotation")
    var Workflows$Annotation: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.Annotation
    
    @JSName("Workflows$BooleanConditionOutcome")
    var Workflows$BooleanConditionOutcome: BooleanConditionOutcome
    
    @JSName("Workflows$CallMicroflowTask")
    var Workflows$CallMicroflowTask: CallMicroflowTask
    
    @JSName("Workflows$CallWorkflowActivity")
    var Workflows$CallWorkflowActivity: CallWorkflowActivity
    
    @JSName("Workflows$EmptyUserSource")
    var Workflows$EmptyUserSource: EmptyUserSource
    
    @JSName("Workflows$EndWorkflowActivity")
    var Workflows$EndWorkflowActivity: EndWorkflowActivity
    
    @JSName("Workflows$EnumerationValueConditionOutcome")
    var Workflows$EnumerationValueConditionOutcome: EnumerationValueConditionOutcome
    
    @JSName("Workflows$ExclusiveSplitActivity")
    var Workflows$ExclusiveSplitActivity: ExclusiveSplitActivity
    
    @JSName("Workflows$Flow")
    var Workflows$Flow: Flow
    
    @JSName("Workflows$JumpToActivity")
    var Workflows$JumpToActivity: JumpToActivity
    
    @JSName("Workflows$MicroflowBasedEvent")
    var Workflows$MicroflowBasedEvent: MicroflowBasedEvent
    
    @JSName("Workflows$MicroflowBasedUserSource")
    var Workflows$MicroflowBasedUserSource: MicroflowBasedUserSource
    
    @JSName("Workflows$MicroflowCallParameterMapping")
    var Workflows$MicroflowCallParameterMapping: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.MicroflowCallParameterMapping
    
    @JSName("Workflows$MicroflowEventHandler")
    var Workflows$MicroflowEventHandler: MicroflowEventHandler
    
    @JSName("Workflows$NoEvent")
    var Workflows$NoEvent: NoEvent
    
    @JSName("Workflows$PageParameterMapping")
    var Workflows$PageParameterMapping: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.PageParameterMapping
    
    @JSName("Workflows$PageReference")
    var Workflows$PageReference: PageReference
    
    @JSName("Workflows$ParallelSplitActivity")
    var Workflows$ParallelSplitActivity: ParallelSplitActivity
    
    @JSName("Workflows$ParallelSplitOutcome")
    var Workflows$ParallelSplitOutcome: ParallelSplitOutcome
    
    @JSName("Workflows$Parameter")
    var Workflows$Parameter: Parameter
    
    @JSName("Workflows$UserTask")
    var Workflows$UserTask: UserTask
    
    @JSName("Workflows$UserTaskOutcome")
    var Workflows$UserTaskOutcome: UserTaskOutcome
    
    @JSName("Workflows$VoidConditionOutcome")
    var Workflows$VoidConditionOutcome: VoidConditionOutcome
    
    @JSName("Workflows$WorkflowCallParameterMapping")
    var Workflows$WorkflowCallParameterMapping: WorkflowCallParameterMapping
    
    @JSName("Workflows$WorkflowType")
    var Workflows$WorkflowType: WorkflowType
    
    @JSName("Workflows$XPathBasedUserSource")
    var Workflows$XPathBasedUserSource: XPathBasedUserSource
    
    @JSName("XmlSchemas$XmlElement")
    var XmlSchemas$XmlElement: XmlElement
    
    @JSName("XmlSchemas$XmlSchemaEntry")
    var XmlSchemas$XmlSchemaEntry: XmlSchemaEntry
  }
  object ConcreteModelElements {
    
    inline def apply(
      AppServices$AppServiceAction: AppServiceAction,
      AppServices$AppServiceActionParameter: AppServiceActionParameter,
      AppServices$Msd: Msd,
      AppServices$MsdAssociation: MsdAssociation,
      AppServices$MsdAttribute: MsdAttribute,
      AppServices$MsdDomainModel: MsdDomainModel,
      AppServices$MsdEntity: MsdEntity,
      AppServices$MsdEnumeration: MsdEnumeration,
      AppServices$MsdEnumerationContainer: MsdEnumerationContainer,
      AppServices$MsdEnumerationValue: MsdEnumerationValue,
      AppServices$MsdMetadata: MsdMetadata,
      AppServices$MsdMicroflow: MsdMicroflow,
      AppServices$MsdMicroflowParameter: MsdMicroflowParameter,
      AppServices$MsdText: MsdText,
      AppServices$MsdVersion: MsdVersion,
      BusinessEvents$ConsumedBusinessEvent: ConsumedBusinessEvent,
      BusinessEvents$PublishedChannel: PublishedChannel,
      BusinessEvents$PublishedMessage: PublishedMessage,
      BusinessEvents$PublishedMessageAttribute: PublishedMessageAttribute,
      CodeActions$BasicParameterType: BasicParameterType,
      CodeActions$BooleanType: BooleanType,
      CodeActions$ConcreteEntityType: ConcreteEntityType,
      CodeActions$DateTimeType: DateTimeType,
      CodeActions$DecimalType: DecimalType,
      CodeActions$EntityTypeParameterType: EntityTypeParameterType,
      CodeActions$EnumerationType: EnumerationType,
      CodeActions$FloatType: FloatType,
      CodeActions$IntegerType: IntegerType,
      CodeActions$ListType: ListType,
      CodeActions$MicroflowActionInfo: MicroflowActionInfo,
      CodeActions$ParameterizedEntityType: ParameterizedEntityType,
      CodeActions$StringTemplateParameterType: StringTemplateParameterType,
      CodeActions$StringType: StringType,
      CodeActions$TypeParameter: TypeParameter,
      CodeActions$VoidType: VoidType,
      CustomWidgets$CustomWidget: CustomWidget,
      CustomWidgets$CustomWidgetDatabaseSource: CustomWidgetDatabaseSource,
      CustomWidgets$CustomWidgetType: CustomWidgetType,
      CustomWidgets$CustomWidgetXPathSource: CustomWidgetXPathSource,
      CustomWidgets$WidgetEnumerationValue: WidgetEnumerationValue,
      CustomWidgets$WidgetObject: WidgetObject,
      CustomWidgets$WidgetObjectType: WidgetObjectType,
      CustomWidgets$WidgetProperty: WidgetProperty,
      CustomWidgets$WidgetPropertyType: WidgetPropertyType,
      CustomWidgets$WidgetReturnType: WidgetReturnType,
      CustomWidgets$WidgetTranslation: WidgetTranslation,
      CustomWidgets$WidgetValue: WidgetValue,
      CustomWidgets$WidgetValueType: WidgetValueType,
      DataSets$DataSetAccess: DataSetAccess,
      DataSets$DataSetColumn: DataSetColumn,
      DataSets$DataSetConstraintAccess: DataSetConstraintAccess,
      DataSets$DataSetDateTimeConstraint: DataSetDateTimeConstraint,
      DataSets$DataSetModuleRoleAccess: DataSetModuleRoleAccess,
      DataSets$DataSetNumericConstraint: DataSetNumericConstraint,
      DataSets$DataSetObjectConstraint: DataSetObjectConstraint,
      DataSets$DataSetParameter: DataSetParameter,
      DataSets$DataSetParameterAccess: DataSetParameterAccess,
      DataSets$JavaDataSetSource: JavaDataSetSource,
      DataSets$OqlDataSetSource: OqlDataSetSource,
      DataTypes$BinaryType: BinaryType,
      DataTypes$BooleanType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.BooleanType,
      DataTypes$DateTimeType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DateTimeType,
      DataTypes$DecimalType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DecimalType,
      DataTypes$EmptyType: EmptyType,
      DataTypes$EnumerationType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.EnumerationType,
      DataTypes$FloatType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.FloatType,
      DataTypes$IntegerType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.IntegerType,
      DataTypes$ListType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.ListType,
      DataTypes$ObjectType: ObjectType,
      DataTypes$StringType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.StringType,
      DataTypes$UnknownType: UnknownType,
      DataTypes$VoidType: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.VoidType,
      DocumentTemplates$ConditionSettings: ConditionSettings,
      DocumentTemplates$DataGrid: DataGrid,
      DocumentTemplates$DataGridCell: DataGridCell,
      DocumentTemplates$DataGridColumn: DataGridColumn,
      DocumentTemplates$DataView: DataView,
      DocumentTemplates$DataViewContents: DataViewContents,
      DocumentTemplates$DocumentTemplateParameter: DocumentTemplateParameter,
      DocumentTemplates$DynamicImageViewer: DynamicImageViewer,
      DocumentTemplates$DynamicLabel: DynamicLabel,
      DocumentTemplates$Footer: Footer,
      DocumentTemplates$GridSortBar: GridSortBar,
      DocumentTemplates$GridSortItem: GridSortItem,
      DocumentTemplates$Header: Header,
      DocumentTemplates$LineBreak: LineBreak,
      DocumentTemplates$PageBreak: PageBreak,
      DocumentTemplates$StaticImageViewer: StaticImageViewer,
      DocumentTemplates$StaticLabel: StaticLabel,
      DocumentTemplates$Style: Style,
      DocumentTemplates$Table: Table,
      DocumentTemplates$TableCell: TableCell,
      DocumentTemplates$TableRow: TableRow,
      DocumentTemplates$TemplateGrid: TemplateGrid,
      DocumentTemplates$TemplateGridContents: TemplateGridContents,
      DocumentTemplates$Title: Title,
      DomainModels$AccessRule: AccessRule,
      DomainModels$Annotation: Annotation,
      DomainModels$Association: Association,
      DomainModels$AssociationCapabilities: AssociationCapabilities,
      DomainModels$AssociationDeleteBehavior: AssociationDeleteBehavior,
      DomainModels$AssociationRef: AssociationRef,
      DomainModels$Attribute: Attribute,
      DomainModels$AttributeCapabilities: AttributeCapabilities,
      DomainModels$AttributeRef: AttributeRef,
      DomainModels$AutoNumberAttributeType: AutoNumberAttributeType,
      DomainModels$BinaryAttributeType: BinaryAttributeType,
      DomainModels$BooleanAttributeType: BooleanAttributeType,
      DomainModels$CalculatedValue: CalculatedValue,
      DomainModels$CrossAssociation: CrossAssociation,
      DomainModels$CurrencyAttributeType: CurrencyAttributeType,
      DomainModels$DateTimeAttributeType: DateTimeAttributeType,
      DomainModels$DecimalAttributeType: DecimalAttributeType,
      DomainModels$DirectEntityRef: DirectEntityRef,
      DomainModels$Entity: Entity,
      DomainModels$EntityCapabilities: EntityCapabilities,
      DomainModels$EntityKey: EntityKey,
      DomainModels$EntityKeyPart: EntityKeyPart,
      DomainModels$EntityRefStep: EntityRefStep,
      DomainModels$EnumerationAttributeType: EnumerationAttributeType,
      DomainModels$EqualsToRuleInfo: EqualsToRuleInfo,
      DomainModels$EventHandler: EventHandler,
      DomainModels$FloatAttributeType: FloatAttributeType,
      DomainModels$Generalization: Generalization,
      DomainModels$HashedStringAttributeType: HashedStringAttributeType,
      DomainModels$Index: Index,
      DomainModels$IndexedAttribute: IndexedAttribute,
      DomainModels$IndirectEntityRef: IndirectEntityRef,
      DomainModels$IntegerAttributeType: IntegerAttributeType,
      DomainModels$LongAttributeType: LongAttributeType,
      DomainModels$MaxLengthRuleInfo: MaxLengthRuleInfo,
      DomainModels$MemberAccess: MemberAccess,
      DomainModels$NoGeneralization: NoGeneralization,
      DomainModels$RangeRuleInfo: RangeRuleInfo,
      DomainModels$RegExRuleInfo: RegExRuleInfo,
      DomainModels$RequiredRuleInfo: RequiredRuleInfo,
      DomainModels$StoredValue: StoredValue,
      DomainModels$StringAttributeType: StringAttributeType,
      DomainModels$UniqueRuleInfo: UniqueRuleInfo,
      DomainModels$ValidationRule: ValidationRule,
      Enumerations$Condition: Condition,
      Enumerations$EnumerationValue: EnumerationValue,
      ExportMappings$ExportObjectMappingElement: ExportObjectMappingElement,
      ExportMappings$ExportValueMappingElement: ExportValueMappingElement,
      Expressions$BinaryExpression: BinaryExpression,
      Expressions$BooleanLiteral: BooleanLiteral,
      Expressions$ConstantRefExpression: ConstantRefExpression,
      Expressions$EmptyLiteral: EmptyLiteral,
      Expressions$EnumerationValueRefExpression: EnumerationValueRefExpression,
      Expressions$FloatLiteral: FloatLiteral,
      Expressions$FunctionCallExpression: FunctionCallExpression,
      Expressions$GlobalVariableRef: GlobalVariableRef,
      Expressions$IfExpression: IfExpression,
      Expressions$IntegerLiteral: IntegerLiteral,
      Expressions$NoExpression: NoExpression,
      Expressions$NoVariableRef: NoVariableRef,
      Expressions$ParenthesisExpression: ParenthesisExpression,
      Expressions$StringLiteral: StringLiteral,
      Expressions$UnaryExpression: UnaryExpression,
      Expressions$UnparsableExpression: UnparsableExpression,
      Expressions$VariableRefExpression: VariableRefExpression,
      Images$Image: Image,
      ImportMappings$ImportObjectMappingElement: ImportObjectMappingElement,
      ImportMappings$ImportValueMappingElement: ImportValueMappingElement,
      JavaActions$BasicParameterType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BasicParameterType,
      JavaActions$BooleanType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BooleanType,
      JavaActions$ConcreteEntityType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ConcreteEntityType,
      JavaActions$DateTimeType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DateTimeType,
      JavaActions$DecimalType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DecimalType,
      JavaActions$EntityTypeParameterType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EntityTypeParameterType,
      JavaActions$EnumerationType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EnumerationType,
      JavaActions$ExportMappingJavaActionParameterType: ExportMappingJavaActionParameterType,
      JavaActions$ExportMappingParameterType: ExportMappingParameterType,
      JavaActions$FloatType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.FloatType,
      JavaActions$ImportMappingJavaActionParameterType: ImportMappingJavaActionParameterType,
      JavaActions$ImportMappingParameterType: ImportMappingParameterType,
      JavaActions$IntegerType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.IntegerType,
      JavaActions$JavaActionParameter: JavaActionParameter,
      JavaActions$ListType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ListType,
      JavaActions$MicroflowActionInfo: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.MicroflowActionInfo,
      JavaActions$MicroflowJavaActionParameterType: MicroflowJavaActionParameterType,
      JavaActions$MicroflowParameterType: MicroflowParameterType,
      JavaActions$ParameterizedEntityType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ParameterizedEntityType,
      JavaActions$StringType: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.StringType,
      JavaActions$TypeParameter: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.TypeParameter,
      JavaScriptActions$JavaScriptActionParameter: JavaScriptActionParameter,
      JavaScriptActions$NanoflowJavaScriptActionParameterType: NanoflowJavaScriptActionParameterType,
      JsonStructures$JsonElement: JsonElement,
      Kafka$KafkaMappedValue: KafkaMappedValue,
      Kafka$KafkaRemoteEntitySource: KafkaRemoteEntitySource,
      Kafka$PublishedKafkaResource: PublishedKafkaResource,
      Kafka$PublishedKafkaResourceAttribute: PublishedKafkaResourceAttribute,
      MLMappings$MLModelEntityMappings: MLModelEntityMappings,
      MLMappings$MLModelMappings: MLModelMappings,
      MLMappings$TensorDimension: TensorDimension,
      MLMappings$TensorMappingElement: TensorMappingElement,
      Mappings$MappingMicroflowCall: MappingMicroflowCall,
      Mappings$MappingMicroflowParameter: MappingMicroflowParameter,
      Menus$MenuItem: MenuItem,
      Menus$MenuItemCollection: MenuItemCollection,
      MessageDefinitions$AssociationElement: AssociationElement,
      MessageDefinitions$AttributeElement: AttributeElement,
      MessageDefinitions$EntityElement: EntityElement,
      MessageDefinitions$EntityMessageDefinition: EntityMessageDefinition,
      MessageDefinitions$ExposedAssociation: ExposedAssociation,
      MessageDefinitions$ExposedAttribute: ExposedAttribute,
      MessageDefinitions$ExposedEntity: ExposedEntity,
      Microflows$AbortOperation: AbortOperation,
      Microflows$ActionActivity: ActionActivity,
      Microflows$AdvancedRequestHandling: AdvancedRequestHandling,
      Microflows$AggregateListAction: AggregateListAction,
      Microflows$Annotation: typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Annotation,
      Microflows$AnnotationFlow: AnnotationFlow,
      Microflows$AppServiceCallAction: AppServiceCallAction,
      Microflows$AppServiceCallParameterMapping: AppServiceCallParameterMapping,
      Microflows$ApplyJumpToOptionAction: ApplyJumpToOptionAction,
      Microflows$AssociationRetrieveSource: AssociationRetrieveSource,
      Microflows$BasicCodeActionParameterValue: BasicCodeActionParameterValue,
      Microflows$BasicJavaActionParameterValue: BasicJavaActionParameterValue,
      Microflows$BinaryRequestHandling: BinaryRequestHandling,
      Microflows$BreakEvent: BreakEvent,
      Microflows$CastAction: CastAction,
      Microflows$ChangeListAction: ChangeListAction,
      Microflows$ChangeObjectAction: ChangeObjectAction,
      Microflows$ChangeVariableAction: ChangeVariableAction,
      Microflows$CloseFormAction: CloseFormAction,
      Microflows$CommitAction: CommitAction,
      Microflows$ConstantRange: ConstantRange,
      Microflows$Contains: Contains,
      Microflows$ContinueEvent: ContinueEvent,
      Microflows$ContinueOperation: ContinueOperation,
      Microflows$CounterMeterAction: CounterMeterAction,
      Microflows$CreateListAction: CreateListAction,
      Microflows$CreateObjectAction: CreateObjectAction,
      Microflows$CreateVariableAction: CreateVariableAction,
      Microflows$CustomRange: CustomRange,
      Microflows$CustomRequestHandling: CustomRequestHandling,
      Microflows$DatabaseRetrieveSource: DatabaseRetrieveSource,
      Microflows$DeleteAction: DeleteAction,
      Microflows$DeleteExternalObject: DeleteExternalObject,
      Microflows$DocumentTemplateParameterMapping: DocumentTemplateParameterMapping,
      Microflows$DownloadFileAction: DownloadFileAction,
      Microflows$EndEvent: EndEvent,
      Microflows$EntityTypeCodeActionParameterValue: EntityTypeCodeActionParameterValue,
      Microflows$EntityTypeJavaActionParameterValue: EntityTypeJavaActionParameterValue,
      Microflows$EnumerationCase: EnumerationCase,
      Microflows$ErrorEvent: ErrorEvent,
      Microflows$ExclusiveMerge: ExclusiveMerge,
      Microflows$ExclusiveSplit: ExclusiveSplit,
      Microflows$ExportMappingJavaActionParameterValue: ExportMappingJavaActionParameterValue,
      Microflows$ExportMappingParameterValue: ExportMappingParameterValue,
      Microflows$ExportXmlAction: ExportXmlAction,
      Microflows$ExpressionSplitCondition: ExpressionSplitCondition,
      Microflows$FileDocumentExport: FileDocumentExport
    ): ConcreteModelElements = {
      val __obj = js.Dynamic.literal(AppServices$AppServiceAction = AppServices$AppServiceAction.asInstanceOf[js.Any], AppServices$AppServiceActionParameter = AppServices$AppServiceActionParameter.asInstanceOf[js.Any], AppServices$Msd = AppServices$Msd.asInstanceOf[js.Any], AppServices$MsdAssociation = AppServices$MsdAssociation.asInstanceOf[js.Any], AppServices$MsdAttribute = AppServices$MsdAttribute.asInstanceOf[js.Any], AppServices$MsdDomainModel = AppServices$MsdDomainModel.asInstanceOf[js.Any], AppServices$MsdEntity = AppServices$MsdEntity.asInstanceOf[js.Any], AppServices$MsdEnumeration = AppServices$MsdEnumeration.asInstanceOf[js.Any], AppServices$MsdEnumerationContainer = AppServices$MsdEnumerationContainer.asInstanceOf[js.Any], AppServices$MsdEnumerationValue = AppServices$MsdEnumerationValue.asInstanceOf[js.Any], AppServices$MsdMetadata = AppServices$MsdMetadata.asInstanceOf[js.Any], AppServices$MsdMicroflow = AppServices$MsdMicroflow.asInstanceOf[js.Any], AppServices$MsdMicroflowParameter = AppServices$MsdMicroflowParameter.asInstanceOf[js.Any], AppServices$MsdText = AppServices$MsdText.asInstanceOf[js.Any], AppServices$MsdVersion = AppServices$MsdVersion.asInstanceOf[js.Any], BusinessEvents$ConsumedBusinessEvent = BusinessEvents$ConsumedBusinessEvent.asInstanceOf[js.Any], BusinessEvents$PublishedChannel = BusinessEvents$PublishedChannel.asInstanceOf[js.Any], BusinessEvents$PublishedMessage = BusinessEvents$PublishedMessage.asInstanceOf[js.Any], BusinessEvents$PublishedMessageAttribute = BusinessEvents$PublishedMessageAttribute.asInstanceOf[js.Any], CodeActions$BasicParameterType = CodeActions$BasicParameterType.asInstanceOf[js.Any], CodeActions$BooleanType = CodeActions$BooleanType.asInstanceOf[js.Any], CodeActions$ConcreteEntityType = CodeActions$ConcreteEntityType.asInstanceOf[js.Any], CodeActions$DateTimeType = CodeActions$DateTimeType.asInstanceOf[js.Any], CodeActions$DecimalType = CodeActions$DecimalType.asInstanceOf[js.Any], CodeActions$EntityTypeParameterType = CodeActions$EntityTypeParameterType.asInstanceOf[js.Any], CodeActions$EnumerationType = CodeActions$EnumerationType.asInstanceOf[js.Any], CodeActions$FloatType = CodeActions$FloatType.asInstanceOf[js.Any], CodeActions$IntegerType = CodeActions$IntegerType.asInstanceOf[js.Any], CodeActions$ListType = CodeActions$ListType.asInstanceOf[js.Any], CodeActions$MicroflowActionInfo = CodeActions$MicroflowActionInfo.asInstanceOf[js.Any], CodeActions$ParameterizedEntityType = CodeActions$ParameterizedEntityType.asInstanceOf[js.Any], CodeActions$StringTemplateParameterType = CodeActions$StringTemplateParameterType.asInstanceOf[js.Any], CodeActions$StringType = CodeActions$StringType.asInstanceOf[js.Any], CodeActions$TypeParameter = CodeActions$TypeParameter.asInstanceOf[js.Any], CodeActions$VoidType = CodeActions$VoidType.asInstanceOf[js.Any], CustomWidgets$CustomWidget = CustomWidgets$CustomWidget.asInstanceOf[js.Any], CustomWidgets$CustomWidgetDatabaseSource = CustomWidgets$CustomWidgetDatabaseSource.asInstanceOf[js.Any], CustomWidgets$CustomWidgetType = CustomWidgets$CustomWidgetType.asInstanceOf[js.Any], CustomWidgets$CustomWidgetXPathSource = CustomWidgets$CustomWidgetXPathSource.asInstanceOf[js.Any], CustomWidgets$WidgetEnumerationValue = CustomWidgets$WidgetEnumerationValue.asInstanceOf[js.Any], CustomWidgets$WidgetObject = CustomWidgets$WidgetObject.asInstanceOf[js.Any], CustomWidgets$WidgetObjectType = CustomWidgets$WidgetObjectType.asInstanceOf[js.Any], CustomWidgets$WidgetProperty = CustomWidgets$WidgetProperty.asInstanceOf[js.Any], CustomWidgets$WidgetPropertyType = CustomWidgets$WidgetPropertyType.asInstanceOf[js.Any], CustomWidgets$WidgetReturnType = CustomWidgets$WidgetReturnType.asInstanceOf[js.Any], CustomWidgets$WidgetTranslation = CustomWidgets$WidgetTranslation.asInstanceOf[js.Any], CustomWidgets$WidgetValue = CustomWidgets$WidgetValue.asInstanceOf[js.Any], CustomWidgets$WidgetValueType = CustomWidgets$WidgetValueType.asInstanceOf[js.Any], DataSets$DataSetAccess = DataSets$DataSetAccess.asInstanceOf[js.Any], DataSets$DataSetColumn = DataSets$DataSetColumn.asInstanceOf[js.Any], DataSets$DataSetConstraintAccess = DataSets$DataSetConstraintAccess.asInstanceOf[js.Any], DataSets$DataSetDateTimeConstraint = DataSets$DataSetDateTimeConstraint.asInstanceOf[js.Any], DataSets$DataSetModuleRoleAccess = DataSets$DataSetModuleRoleAccess.asInstanceOf[js.Any], DataSets$DataSetNumericConstraint = DataSets$DataSetNumericConstraint.asInstanceOf[js.Any], DataSets$DataSetObjectConstraint = DataSets$DataSetObjectConstraint.asInstanceOf[js.Any], DataSets$DataSetParameter = DataSets$DataSetParameter.asInstanceOf[js.Any], DataSets$DataSetParameterAccess = DataSets$DataSetParameterAccess.asInstanceOf[js.Any], DataSets$JavaDataSetSource = DataSets$JavaDataSetSource.asInstanceOf[js.Any], DataSets$OqlDataSetSource = DataSets$OqlDataSetSource.asInstanceOf[js.Any], DataTypes$BinaryType = DataTypes$BinaryType.asInstanceOf[js.Any], DataTypes$BooleanType = DataTypes$BooleanType.asInstanceOf[js.Any], DataTypes$DateTimeType = DataTypes$DateTimeType.asInstanceOf[js.Any], DataTypes$DecimalType = DataTypes$DecimalType.asInstanceOf[js.Any], DataTypes$EmptyType = DataTypes$EmptyType.asInstanceOf[js.Any], DataTypes$EnumerationType = DataTypes$EnumerationType.asInstanceOf[js.Any], DataTypes$FloatType = DataTypes$FloatType.asInstanceOf[js.Any], DataTypes$IntegerType = DataTypes$IntegerType.asInstanceOf[js.Any], DataTypes$ListType = DataTypes$ListType.asInstanceOf[js.Any], DataTypes$ObjectType = DataTypes$ObjectType.asInstanceOf[js.Any], DataTypes$StringType = DataTypes$StringType.asInstanceOf[js.Any], DataTypes$UnknownType = DataTypes$UnknownType.asInstanceOf[js.Any], DataTypes$VoidType = DataTypes$VoidType.asInstanceOf[js.Any], DocumentTemplates$ConditionSettings = DocumentTemplates$ConditionSettings.asInstanceOf[js.Any], DocumentTemplates$DataGrid = DocumentTemplates$DataGrid.asInstanceOf[js.Any], DocumentTemplates$DataGridCell = DocumentTemplates$DataGridCell.asInstanceOf[js.Any], DocumentTemplates$DataGridColumn = DocumentTemplates$DataGridColumn.asInstanceOf[js.Any], DocumentTemplates$DataView = DocumentTemplates$DataView.asInstanceOf[js.Any], DocumentTemplates$DataViewContents = DocumentTemplates$DataViewContents.asInstanceOf[js.Any], DocumentTemplates$DocumentTemplateParameter = DocumentTemplates$DocumentTemplateParameter.asInstanceOf[js.Any], DocumentTemplates$DynamicImageViewer = DocumentTemplates$DynamicImageViewer.asInstanceOf[js.Any], DocumentTemplates$DynamicLabel = DocumentTemplates$DynamicLabel.asInstanceOf[js.Any], DocumentTemplates$Footer = DocumentTemplates$Footer.asInstanceOf[js.Any], DocumentTemplates$GridSortBar = DocumentTemplates$GridSortBar.asInstanceOf[js.Any], DocumentTemplates$GridSortItem = DocumentTemplates$GridSortItem.asInstanceOf[js.Any], DocumentTemplates$Header = DocumentTemplates$Header.asInstanceOf[js.Any], DocumentTemplates$LineBreak = DocumentTemplates$LineBreak.asInstanceOf[js.Any], DocumentTemplates$PageBreak = DocumentTemplates$PageBreak.asInstanceOf[js.Any], DocumentTemplates$StaticImageViewer = DocumentTemplates$StaticImageViewer.asInstanceOf[js.Any], DocumentTemplates$StaticLabel = DocumentTemplates$StaticLabel.asInstanceOf[js.Any], DocumentTemplates$Style = DocumentTemplates$Style.asInstanceOf[js.Any], DocumentTemplates$Table = DocumentTemplates$Table.asInstanceOf[js.Any], DocumentTemplates$TableCell = DocumentTemplates$TableCell.asInstanceOf[js.Any], DocumentTemplates$TableRow = DocumentTemplates$TableRow.asInstanceOf[js.Any], DocumentTemplates$TemplateGrid = DocumentTemplates$TemplateGrid.asInstanceOf[js.Any], DocumentTemplates$TemplateGridContents = DocumentTemplates$TemplateGridContents.asInstanceOf[js.Any], DocumentTemplates$Title = DocumentTemplates$Title.asInstanceOf[js.Any], DomainModels$AccessRule = DomainModels$AccessRule.asInstanceOf[js.Any], DomainModels$Annotation = DomainModels$Annotation.asInstanceOf[js.Any], DomainModels$Association = DomainModels$Association.asInstanceOf[js.Any], DomainModels$AssociationCapabilities = DomainModels$AssociationCapabilities.asInstanceOf[js.Any], DomainModels$AssociationDeleteBehavior = DomainModels$AssociationDeleteBehavior.asInstanceOf[js.Any], DomainModels$AssociationRef = DomainModels$AssociationRef.asInstanceOf[js.Any], DomainModels$Attribute = DomainModels$Attribute.asInstanceOf[js.Any], DomainModels$AttributeCapabilities = DomainModels$AttributeCapabilities.asInstanceOf[js.Any], DomainModels$AttributeRef = DomainModels$AttributeRef.asInstanceOf[js.Any], DomainModels$AutoNumberAttributeType = DomainModels$AutoNumberAttributeType.asInstanceOf[js.Any], DomainModels$BinaryAttributeType = DomainModels$BinaryAttributeType.asInstanceOf[js.Any], DomainModels$BooleanAttributeType = DomainModels$BooleanAttributeType.asInstanceOf[js.Any], DomainModels$CalculatedValue = DomainModels$CalculatedValue.asInstanceOf[js.Any], DomainModels$CrossAssociation = DomainModels$CrossAssociation.asInstanceOf[js.Any], DomainModels$CurrencyAttributeType = DomainModels$CurrencyAttributeType.asInstanceOf[js.Any], DomainModels$DateTimeAttributeType = DomainModels$DateTimeAttributeType.asInstanceOf[js.Any], DomainModels$DecimalAttributeType = DomainModels$DecimalAttributeType.asInstanceOf[js.Any], DomainModels$DirectEntityRef = DomainModels$DirectEntityRef.asInstanceOf[js.Any], DomainModels$Entity = DomainModels$Entity.asInstanceOf[js.Any], DomainModels$EntityCapabilities = DomainModels$EntityCapabilities.asInstanceOf[js.Any], DomainModels$EntityKey = DomainModels$EntityKey.asInstanceOf[js.Any], DomainModels$EntityKeyPart = DomainModels$EntityKeyPart.asInstanceOf[js.Any], DomainModels$EntityRefStep = DomainModels$EntityRefStep.asInstanceOf[js.Any], DomainModels$EnumerationAttributeType = DomainModels$EnumerationAttributeType.asInstanceOf[js.Any], DomainModels$EqualsToRuleInfo = DomainModels$EqualsToRuleInfo.asInstanceOf[js.Any], DomainModels$EventHandler = DomainModels$EventHandler.asInstanceOf[js.Any], DomainModels$FloatAttributeType = DomainModels$FloatAttributeType.asInstanceOf[js.Any], DomainModels$Generalization = DomainModels$Generalization.asInstanceOf[js.Any], DomainModels$HashedStringAttributeType = DomainModels$HashedStringAttributeType.asInstanceOf[js.Any], DomainModels$Index = DomainModels$Index.asInstanceOf[js.Any], DomainModels$IndexedAttribute = DomainModels$IndexedAttribute.asInstanceOf[js.Any], DomainModels$IndirectEntityRef = DomainModels$IndirectEntityRef.asInstanceOf[js.Any], DomainModels$IntegerAttributeType = DomainModels$IntegerAttributeType.asInstanceOf[js.Any], DomainModels$LongAttributeType = DomainModels$LongAttributeType.asInstanceOf[js.Any], DomainModels$MaxLengthRuleInfo = DomainModels$MaxLengthRuleInfo.asInstanceOf[js.Any], DomainModels$MemberAccess = DomainModels$MemberAccess.asInstanceOf[js.Any], DomainModels$NoGeneralization = DomainModels$NoGeneralization.asInstanceOf[js.Any], DomainModels$RangeRuleInfo = DomainModels$RangeRuleInfo.asInstanceOf[js.Any], DomainModels$RegExRuleInfo = DomainModels$RegExRuleInfo.asInstanceOf[js.Any], DomainModels$RequiredRuleInfo = DomainModels$RequiredRuleInfo.asInstanceOf[js.Any], DomainModels$StoredValue = DomainModels$StoredValue.asInstanceOf[js.Any], DomainModels$StringAttributeType = DomainModels$StringAttributeType.asInstanceOf[js.Any], DomainModels$UniqueRuleInfo = DomainModels$UniqueRuleInfo.asInstanceOf[js.Any], DomainModels$ValidationRule = DomainModels$ValidationRule.asInstanceOf[js.Any], Enumerations$Condition = Enumerations$Condition.asInstanceOf[js.Any], Enumerations$EnumerationValue = Enumerations$EnumerationValue.asInstanceOf[js.Any], ExportMappings$ExportObjectMappingElement = ExportMappings$ExportObjectMappingElement.asInstanceOf[js.Any], ExportMappings$ExportValueMappingElement = ExportMappings$ExportValueMappingElement.asInstanceOf[js.Any], Expressions$BinaryExpression = Expressions$BinaryExpression.asInstanceOf[js.Any], Expressions$BooleanLiteral = Expressions$BooleanLiteral.asInstanceOf[js.Any], Expressions$ConstantRefExpression = Expressions$ConstantRefExpression.asInstanceOf[js.Any], Expressions$EmptyLiteral = Expressions$EmptyLiteral.asInstanceOf[js.Any], Expressions$EnumerationValueRefExpression = Expressions$EnumerationValueRefExpression.asInstanceOf[js.Any], Expressions$FloatLiteral = Expressions$FloatLiteral.asInstanceOf[js.Any], Expressions$FunctionCallExpression = Expressions$FunctionCallExpression.asInstanceOf[js.Any], Expressions$GlobalVariableRef = Expressions$GlobalVariableRef.asInstanceOf[js.Any], Expressions$IfExpression = Expressions$IfExpression.asInstanceOf[js.Any], Expressions$IntegerLiteral = Expressions$IntegerLiteral.asInstanceOf[js.Any], Expressions$NoExpression = Expressions$NoExpression.asInstanceOf[js.Any], Expressions$NoVariableRef = Expressions$NoVariableRef.asInstanceOf[js.Any], Expressions$ParenthesisExpression = Expressions$ParenthesisExpression.asInstanceOf[js.Any], Expressions$StringLiteral = Expressions$StringLiteral.asInstanceOf[js.Any], Expressions$UnaryExpression = Expressions$UnaryExpression.asInstanceOf[js.Any], Expressions$UnparsableExpression = Expressions$UnparsableExpression.asInstanceOf[js.Any], Expressions$VariableRefExpression = Expressions$VariableRefExpression.asInstanceOf[js.Any], Images$Image = Images$Image.asInstanceOf[js.Any], ImportMappings$ImportObjectMappingElement = ImportMappings$ImportObjectMappingElement.asInstanceOf[js.Any], ImportMappings$ImportValueMappingElement = ImportMappings$ImportValueMappingElement.asInstanceOf[js.Any], JavaActions$BasicParameterType = JavaActions$BasicParameterType.asInstanceOf[js.Any], JavaActions$BooleanType = JavaActions$BooleanType.asInstanceOf[js.Any], JavaActions$ConcreteEntityType = JavaActions$ConcreteEntityType.asInstanceOf[js.Any], JavaActions$DateTimeType = JavaActions$DateTimeType.asInstanceOf[js.Any], JavaActions$DecimalType = JavaActions$DecimalType.asInstanceOf[js.Any], JavaActions$EntityTypeParameterType = JavaActions$EntityTypeParameterType.asInstanceOf[js.Any], JavaActions$EnumerationType = JavaActions$EnumerationType.asInstanceOf[js.Any], JavaActions$ExportMappingJavaActionParameterType = JavaActions$ExportMappingJavaActionParameterType.asInstanceOf[js.Any], JavaActions$ExportMappingParameterType = JavaActions$ExportMappingParameterType.asInstanceOf[js.Any], JavaActions$FloatType = JavaActions$FloatType.asInstanceOf[js.Any], JavaActions$ImportMappingJavaActionParameterType = JavaActions$ImportMappingJavaActionParameterType.asInstanceOf[js.Any], JavaActions$ImportMappingParameterType = JavaActions$ImportMappingParameterType.asInstanceOf[js.Any], JavaActions$IntegerType = JavaActions$IntegerType.asInstanceOf[js.Any], JavaActions$JavaActionParameter = JavaActions$JavaActionParameter.asInstanceOf[js.Any], JavaActions$ListType = JavaActions$ListType.asInstanceOf[js.Any], JavaActions$MicroflowActionInfo = JavaActions$MicroflowActionInfo.asInstanceOf[js.Any], JavaActions$MicroflowJavaActionParameterType = JavaActions$MicroflowJavaActionParameterType.asInstanceOf[js.Any], JavaActions$MicroflowParameterType = JavaActions$MicroflowParameterType.asInstanceOf[js.Any], JavaActions$ParameterizedEntityType = JavaActions$ParameterizedEntityType.asInstanceOf[js.Any], JavaActions$StringType = JavaActions$StringType.asInstanceOf[js.Any], JavaActions$TypeParameter = JavaActions$TypeParameter.asInstanceOf[js.Any], JavaScriptActions$JavaScriptActionParameter = JavaScriptActions$JavaScriptActionParameter.asInstanceOf[js.Any], JavaScriptActions$NanoflowJavaScriptActionParameterType = JavaScriptActions$NanoflowJavaScriptActionParameterType.asInstanceOf[js.Any], JsonStructures$JsonElement = JsonStructures$JsonElement.asInstanceOf[js.Any], Kafka$KafkaMappedValue = Kafka$KafkaMappedValue.asInstanceOf[js.Any], Kafka$KafkaRemoteEntitySource = Kafka$KafkaRemoteEntitySource.asInstanceOf[js.Any], Kafka$PublishedKafkaResource = Kafka$PublishedKafkaResource.asInstanceOf[js.Any], Kafka$PublishedKafkaResourceAttribute = Kafka$PublishedKafkaResourceAttribute.asInstanceOf[js.Any], MLMappings$MLModelEntityMappings = MLMappings$MLModelEntityMappings.asInstanceOf[js.Any], MLMappings$MLModelMappings = MLMappings$MLModelMappings.asInstanceOf[js.Any], MLMappings$TensorDimension = MLMappings$TensorDimension.asInstanceOf[js.Any], MLMappings$TensorMappingElement = MLMappings$TensorMappingElement.asInstanceOf[js.Any], Mappings$MappingMicroflowCall = Mappings$MappingMicroflowCall.asInstanceOf[js.Any], Mappings$MappingMicroflowParameter = Mappings$MappingMicroflowParameter.asInstanceOf[js.Any], Menus$MenuItem = Menus$MenuItem.asInstanceOf[js.Any], Menus$MenuItemCollection = Menus$MenuItemCollection.asInstanceOf[js.Any], MessageDefinitions$AssociationElement = MessageDefinitions$AssociationElement.asInstanceOf[js.Any], MessageDefinitions$AttributeElement = MessageDefinitions$AttributeElement.asInstanceOf[js.Any], MessageDefinitions$EntityElement = MessageDefinitions$EntityElement.asInstanceOf[js.Any], MessageDefinitions$EntityMessageDefinition = MessageDefinitions$EntityMessageDefinition.asInstanceOf[js.Any], MessageDefinitions$ExposedAssociation = MessageDefinitions$ExposedAssociation.asInstanceOf[js.Any], MessageDefinitions$ExposedAttribute = MessageDefinitions$ExposedAttribute.asInstanceOf[js.Any], MessageDefinitions$ExposedEntity = MessageDefinitions$ExposedEntity.asInstanceOf[js.Any], Microflows$AbortOperation = Microflows$AbortOperation.asInstanceOf[js.Any], Microflows$ActionActivity = Microflows$ActionActivity.asInstanceOf[js.Any], Microflows$AdvancedRequestHandling = Microflows$AdvancedRequestHandling.asInstanceOf[js.Any], Microflows$AggregateListAction = Microflows$AggregateListAction.asInstanceOf[js.Any], Microflows$Annotation = Microflows$Annotation.asInstanceOf[js.Any], Microflows$AnnotationFlow = Microflows$AnnotationFlow.asInstanceOf[js.Any], Microflows$AppServiceCallAction = Microflows$AppServiceCallAction.asInstanceOf[js.Any], Microflows$AppServiceCallParameterMapping = Microflows$AppServiceCallParameterMapping.asInstanceOf[js.Any], Microflows$ApplyJumpToOptionAction = Microflows$ApplyJumpToOptionAction.asInstanceOf[js.Any], Microflows$AssociationRetrieveSource = Microflows$AssociationRetrieveSource.asInstanceOf[js.Any], Microflows$BasicCodeActionParameterValue = Microflows$BasicCodeActionParameterValue.asInstanceOf[js.Any], Microflows$BasicJavaActionParameterValue = Microflows$BasicJavaActionParameterValue.asInstanceOf[js.Any], Microflows$BinaryRequestHandling = Microflows$BinaryRequestHandling.asInstanceOf[js.Any], Microflows$BreakEvent = Microflows$BreakEvent.asInstanceOf[js.Any], Microflows$CastAction = Microflows$CastAction.asInstanceOf[js.Any], Microflows$ChangeListAction = Microflows$ChangeListAction.asInstanceOf[js.Any], Microflows$ChangeObjectAction = Microflows$ChangeObjectAction.asInstanceOf[js.Any], Microflows$ChangeVariableAction = Microflows$ChangeVariableAction.asInstanceOf[js.Any], Microflows$CloseFormAction = Microflows$CloseFormAction.asInstanceOf[js.Any], Microflows$CommitAction = Microflows$CommitAction.asInstanceOf[js.Any], Microflows$ConstantRange = Microflows$ConstantRange.asInstanceOf[js.Any], Microflows$Contains = Microflows$Contains.asInstanceOf[js.Any], Microflows$ContinueEvent = Microflows$ContinueEvent.asInstanceOf[js.Any], Microflows$ContinueOperation = Microflows$ContinueOperation.asInstanceOf[js.Any], Microflows$CounterMeterAction = Microflows$CounterMeterAction.asInstanceOf[js.Any], Microflows$CreateListAction = Microflows$CreateListAction.asInstanceOf[js.Any], Microflows$CreateObjectAction = Microflows$CreateObjectAction.asInstanceOf[js.Any], Microflows$CreateVariableAction = Microflows$CreateVariableAction.asInstanceOf[js.Any], Microflows$CustomRange = Microflows$CustomRange.asInstanceOf[js.Any], Microflows$CustomRequestHandling = Microflows$CustomRequestHandling.asInstanceOf[js.Any], Microflows$DatabaseRetrieveSource = Microflows$DatabaseRetrieveSource.asInstanceOf[js.Any], Microflows$DeleteAction = Microflows$DeleteAction.asInstanceOf[js.Any], Microflows$DeleteExternalObject = Microflows$DeleteExternalObject.asInstanceOf[js.Any], Microflows$DocumentTemplateParameterMapping = Microflows$DocumentTemplateParameterMapping.asInstanceOf[js.Any], Microflows$DownloadFileAction = Microflows$DownloadFileAction.asInstanceOf[js.Any], Microflows$EndEvent = Microflows$EndEvent.asInstanceOf[js.Any], Microflows$EntityTypeCodeActionParameterValue = Microflows$EntityTypeCodeActionParameterValue.asInstanceOf[js.Any], Microflows$EntityTypeJavaActionParameterValue = Microflows$EntityTypeJavaActionParameterValue.asInstanceOf[js.Any], Microflows$EnumerationCase = Microflows$EnumerationCase.asInstanceOf[js.Any], Microflows$ErrorEvent = Microflows$ErrorEvent.asInstanceOf[js.Any], Microflows$ExclusiveMerge = Microflows$ExclusiveMerge.asInstanceOf[js.Any], Microflows$ExclusiveSplit = Microflows$ExclusiveSplit.asInstanceOf[js.Any], Microflows$ExportMappingJavaActionParameterValue = Microflows$ExportMappingJavaActionParameterValue.asInstanceOf[js.Any], Microflows$ExportMappingParameterValue = Microflows$ExportMappingParameterValue.asInstanceOf[js.Any], Microflows$ExportXmlAction = Microflows$ExportXmlAction.asInstanceOf[js.Any], Microflows$ExpressionSplitCondition = Microflows$ExpressionSplitCondition.asInstanceOf[js.Any], Microflows$FileDocumentExport = Microflows$FileDocumentExport.asInstanceOf[js.Any])
      __obj.asInstanceOf[ConcreteModelElements]
    }
    
    extension [Self <: ConcreteModelElements](x: Self) {
      
      inline def setAppServices$AppServiceAction(value: AppServiceAction): Self = StObject.set(x, "AppServices$AppServiceAction", value.asInstanceOf[js.Any])
      
      inline def setAppServices$AppServiceActionParameter(value: AppServiceActionParameter): Self = StObject.set(x, "AppServices$AppServiceActionParameter", value.asInstanceOf[js.Any])
      
      inline def setAppServices$Msd(value: Msd): Self = StObject.set(x, "AppServices$Msd", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdAssociation(value: MsdAssociation): Self = StObject.set(x, "AppServices$MsdAssociation", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdAttribute(value: MsdAttribute): Self = StObject.set(x, "AppServices$MsdAttribute", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdDomainModel(value: MsdDomainModel): Self = StObject.set(x, "AppServices$MsdDomainModel", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdEntity(value: MsdEntity): Self = StObject.set(x, "AppServices$MsdEntity", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdEnumeration(value: MsdEnumeration): Self = StObject.set(x, "AppServices$MsdEnumeration", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdEnumerationContainer(value: MsdEnumerationContainer): Self = StObject.set(x, "AppServices$MsdEnumerationContainer", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdEnumerationValue(value: MsdEnumerationValue): Self = StObject.set(x, "AppServices$MsdEnumerationValue", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdMetadata(value: MsdMetadata): Self = StObject.set(x, "AppServices$MsdMetadata", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdMicroflow(value: MsdMicroflow): Self = StObject.set(x, "AppServices$MsdMicroflow", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdMicroflowParameter(value: MsdMicroflowParameter): Self = StObject.set(x, "AppServices$MsdMicroflowParameter", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdText(value: MsdText): Self = StObject.set(x, "AppServices$MsdText", value.asInstanceOf[js.Any])
      
      inline def setAppServices$MsdVersion(value: MsdVersion): Self = StObject.set(x, "AppServices$MsdVersion", value.asInstanceOf[js.Any])
      
      inline def setBusinessEvents$ConsumedBusinessEvent(value: ConsumedBusinessEvent): Self = StObject.set(x, "BusinessEvents$ConsumedBusinessEvent", value.asInstanceOf[js.Any])
      
      inline def setBusinessEvents$PublishedChannel(value: PublishedChannel): Self = StObject.set(x, "BusinessEvents$PublishedChannel", value.asInstanceOf[js.Any])
      
      inline def setBusinessEvents$PublishedMessage(value: PublishedMessage): Self = StObject.set(x, "BusinessEvents$PublishedMessage", value.asInstanceOf[js.Any])
      
      inline def setBusinessEvents$PublishedMessageAttribute(value: PublishedMessageAttribute): Self = StObject.set(x, "BusinessEvents$PublishedMessageAttribute", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$BasicParameterType(value: BasicParameterType): Self = StObject.set(x, "CodeActions$BasicParameterType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$BooleanType(value: BooleanType): Self = StObject.set(x, "CodeActions$BooleanType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$ConcreteEntityType(value: ConcreteEntityType): Self = StObject.set(x, "CodeActions$ConcreteEntityType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$DateTimeType(value: DateTimeType): Self = StObject.set(x, "CodeActions$DateTimeType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$DecimalType(value: DecimalType): Self = StObject.set(x, "CodeActions$DecimalType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$EntityTypeParameterType(value: EntityTypeParameterType): Self = StObject.set(x, "CodeActions$EntityTypeParameterType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$EnumerationType(value: EnumerationType): Self = StObject.set(x, "CodeActions$EnumerationType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$FloatType(value: FloatType): Self = StObject.set(x, "CodeActions$FloatType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$IntegerType(value: IntegerType): Self = StObject.set(x, "CodeActions$IntegerType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$ListType(value: ListType): Self = StObject.set(x, "CodeActions$ListType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$MicroflowActionInfo(value: MicroflowActionInfo): Self = StObject.set(x, "CodeActions$MicroflowActionInfo", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$ParameterizedEntityType(value: ParameterizedEntityType): Self = StObject.set(x, "CodeActions$ParameterizedEntityType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$StringTemplateParameterType(value: StringTemplateParameterType): Self = StObject.set(x, "CodeActions$StringTemplateParameterType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$StringType(value: StringType): Self = StObject.set(x, "CodeActions$StringType", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$TypeParameter(value: TypeParameter): Self = StObject.set(x, "CodeActions$TypeParameter", value.asInstanceOf[js.Any])
      
      inline def setCodeActions$VoidType(value: VoidType): Self = StObject.set(x, "CodeActions$VoidType", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$CustomWidget(value: CustomWidget): Self = StObject.set(x, "CustomWidgets$CustomWidget", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$CustomWidgetDatabaseSource(value: CustomWidgetDatabaseSource): Self = StObject.set(x, "CustomWidgets$CustomWidgetDatabaseSource", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$CustomWidgetType(value: CustomWidgetType): Self = StObject.set(x, "CustomWidgets$CustomWidgetType", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$CustomWidgetXPathSource(value: CustomWidgetXPathSource): Self = StObject.set(x, "CustomWidgets$CustomWidgetXPathSource", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetEnumerationValue(value: WidgetEnumerationValue): Self = StObject.set(x, "CustomWidgets$WidgetEnumerationValue", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetObject(value: WidgetObject): Self = StObject.set(x, "CustomWidgets$WidgetObject", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetObjectType(value: WidgetObjectType): Self = StObject.set(x, "CustomWidgets$WidgetObjectType", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetProperty(value: WidgetProperty): Self = StObject.set(x, "CustomWidgets$WidgetProperty", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetPropertyType(value: WidgetPropertyType): Self = StObject.set(x, "CustomWidgets$WidgetPropertyType", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetReturnType(value: WidgetReturnType): Self = StObject.set(x, "CustomWidgets$WidgetReturnType", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetTranslation(value: WidgetTranslation): Self = StObject.set(x, "CustomWidgets$WidgetTranslation", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetValue(value: WidgetValue): Self = StObject.set(x, "CustomWidgets$WidgetValue", value.asInstanceOf[js.Any])
      
      inline def setCustomWidgets$WidgetValueType(value: WidgetValueType): Self = StObject.set(x, "CustomWidgets$WidgetValueType", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetAccess(value: DataSetAccess): Self = StObject.set(x, "DataSets$DataSetAccess", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetColumn(value: DataSetColumn): Self = StObject.set(x, "DataSets$DataSetColumn", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetConstraintAccess(value: DataSetConstraintAccess): Self = StObject.set(x, "DataSets$DataSetConstraintAccess", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetDateTimeConstraint(value: DataSetDateTimeConstraint): Self = StObject.set(x, "DataSets$DataSetDateTimeConstraint", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetModuleRoleAccess(value: DataSetModuleRoleAccess): Self = StObject.set(x, "DataSets$DataSetModuleRoleAccess", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetNumericConstraint(value: DataSetNumericConstraint): Self = StObject.set(x, "DataSets$DataSetNumericConstraint", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetObjectConstraint(value: DataSetObjectConstraint): Self = StObject.set(x, "DataSets$DataSetObjectConstraint", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetParameter(value: DataSetParameter): Self = StObject.set(x, "DataSets$DataSetParameter", value.asInstanceOf[js.Any])
      
      inline def setDataSets$DataSetParameterAccess(value: DataSetParameterAccess): Self = StObject.set(x, "DataSets$DataSetParameterAccess", value.asInstanceOf[js.Any])
      
      inline def setDataSets$JavaDataSetSource(value: JavaDataSetSource): Self = StObject.set(x, "DataSets$JavaDataSetSource", value.asInstanceOf[js.Any])
      
      inline def setDataSets$OqlDataSetSource(value: OqlDataSetSource): Self = StObject.set(x, "DataSets$OqlDataSetSource", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$BinaryType(value: BinaryType): Self = StObject.set(x, "DataTypes$BinaryType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$BooleanType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.BooleanType): Self = StObject.set(x, "DataTypes$BooleanType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$DateTimeType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DateTimeType): Self = StObject.set(x, "DataTypes$DateTimeType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$DecimalType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.DecimalType): Self = StObject.set(x, "DataTypes$DecimalType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$EmptyType(value: EmptyType): Self = StObject.set(x, "DataTypes$EmptyType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$EnumerationType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.EnumerationType): Self = StObject.set(x, "DataTypes$EnumerationType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$FloatType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.FloatType): Self = StObject.set(x, "DataTypes$FloatType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$IntegerType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.IntegerType): Self = StObject.set(x, "DataTypes$IntegerType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$ListType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.ListType): Self = StObject.set(x, "DataTypes$ListType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$ObjectType(value: ObjectType): Self = StObject.set(x, "DataTypes$ObjectType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$StringType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.StringType): Self = StObject.set(x, "DataTypes$StringType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$UnknownType(value: UnknownType): Self = StObject.set(x, "DataTypes$UnknownType", value.asInstanceOf[js.Any])
      
      inline def setDataTypes$VoidType(value: typingsJapgolly.mendixmodelsdk.srcGenDatatypesMod.datatypes.VoidType): Self = StObject.set(x, "DataTypes$VoidType", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$ConditionSettings(value: ConditionSettings): Self = StObject.set(x, "DocumentTemplates$ConditionSettings", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DataGrid(value: DataGrid): Self = StObject.set(x, "DocumentTemplates$DataGrid", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DataGridCell(value: DataGridCell): Self = StObject.set(x, "DocumentTemplates$DataGridCell", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DataGridColumn(value: DataGridColumn): Self = StObject.set(x, "DocumentTemplates$DataGridColumn", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DataView(value: DataView): Self = StObject.set(x, "DocumentTemplates$DataView", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DataViewContents(value: DataViewContents): Self = StObject.set(x, "DocumentTemplates$DataViewContents", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DocumentTemplateParameter(value: DocumentTemplateParameter): Self = StObject.set(x, "DocumentTemplates$DocumentTemplateParameter", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DynamicImageViewer(value: DynamicImageViewer): Self = StObject.set(x, "DocumentTemplates$DynamicImageViewer", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$DynamicLabel(value: DynamicLabel): Self = StObject.set(x, "DocumentTemplates$DynamicLabel", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$Footer(value: Footer): Self = StObject.set(x, "DocumentTemplates$Footer", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$GridSortBar(value: GridSortBar): Self = StObject.set(x, "DocumentTemplates$GridSortBar", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$GridSortItem(value: GridSortItem): Self = StObject.set(x, "DocumentTemplates$GridSortItem", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$Header(value: Header): Self = StObject.set(x, "DocumentTemplates$Header", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$LineBreak(value: LineBreak): Self = StObject.set(x, "DocumentTemplates$LineBreak", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$PageBreak(value: PageBreak): Self = StObject.set(x, "DocumentTemplates$PageBreak", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$StaticImageViewer(value: StaticImageViewer): Self = StObject.set(x, "DocumentTemplates$StaticImageViewer", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$StaticLabel(value: StaticLabel): Self = StObject.set(x, "DocumentTemplates$StaticLabel", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$Style(value: Style): Self = StObject.set(x, "DocumentTemplates$Style", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$Table(value: Table): Self = StObject.set(x, "DocumentTemplates$Table", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$TableCell(value: TableCell): Self = StObject.set(x, "DocumentTemplates$TableCell", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$TableRow(value: TableRow): Self = StObject.set(x, "DocumentTemplates$TableRow", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$TemplateGrid(value: TemplateGrid): Self = StObject.set(x, "DocumentTemplates$TemplateGrid", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$TemplateGridContents(value: TemplateGridContents): Self = StObject.set(x, "DocumentTemplates$TemplateGridContents", value.asInstanceOf[js.Any])
      
      inline def setDocumentTemplates$Title(value: Title): Self = StObject.set(x, "DocumentTemplates$Title", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AccessRule(value: AccessRule): Self = StObject.set(x, "DomainModels$AccessRule", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Annotation(value: Annotation): Self = StObject.set(x, "DomainModels$Annotation", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Association(value: Association): Self = StObject.set(x, "DomainModels$Association", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AssociationCapabilities(value: AssociationCapabilities): Self = StObject.set(x, "DomainModels$AssociationCapabilities", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AssociationDeleteBehavior(value: AssociationDeleteBehavior): Self = StObject.set(x, "DomainModels$AssociationDeleteBehavior", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AssociationRef(value: AssociationRef): Self = StObject.set(x, "DomainModels$AssociationRef", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Attribute(value: Attribute): Self = StObject.set(x, "DomainModels$Attribute", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AttributeCapabilities(value: AttributeCapabilities): Self = StObject.set(x, "DomainModels$AttributeCapabilities", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AttributeRef(value: AttributeRef): Self = StObject.set(x, "DomainModels$AttributeRef", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$AutoNumberAttributeType(value: AutoNumberAttributeType): Self = StObject.set(x, "DomainModels$AutoNumberAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$BinaryAttributeType(value: BinaryAttributeType): Self = StObject.set(x, "DomainModels$BinaryAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$BooleanAttributeType(value: BooleanAttributeType): Self = StObject.set(x, "DomainModels$BooleanAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$CalculatedValue(value: CalculatedValue): Self = StObject.set(x, "DomainModels$CalculatedValue", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$CrossAssociation(value: CrossAssociation): Self = StObject.set(x, "DomainModels$CrossAssociation", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$CurrencyAttributeType(value: CurrencyAttributeType): Self = StObject.set(x, "DomainModels$CurrencyAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$DateTimeAttributeType(value: DateTimeAttributeType): Self = StObject.set(x, "DomainModels$DateTimeAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$DecimalAttributeType(value: DecimalAttributeType): Self = StObject.set(x, "DomainModels$DecimalAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$DirectEntityRef(value: DirectEntityRef): Self = StObject.set(x, "DomainModels$DirectEntityRef", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Entity(value: Entity): Self = StObject.set(x, "DomainModels$Entity", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EntityCapabilities(value: EntityCapabilities): Self = StObject.set(x, "DomainModels$EntityCapabilities", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EntityKey(value: EntityKey): Self = StObject.set(x, "DomainModels$EntityKey", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EntityKeyPart(value: EntityKeyPart): Self = StObject.set(x, "DomainModels$EntityKeyPart", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EntityRefStep(value: EntityRefStep): Self = StObject.set(x, "DomainModels$EntityRefStep", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EnumerationAttributeType(value: EnumerationAttributeType): Self = StObject.set(x, "DomainModels$EnumerationAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EqualsToRuleInfo(value: EqualsToRuleInfo): Self = StObject.set(x, "DomainModels$EqualsToRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$EventHandler(value: EventHandler): Self = StObject.set(x, "DomainModels$EventHandler", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$FloatAttributeType(value: FloatAttributeType): Self = StObject.set(x, "DomainModels$FloatAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Generalization(value: Generalization): Self = StObject.set(x, "DomainModels$Generalization", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$HashedStringAttributeType(value: HashedStringAttributeType): Self = StObject.set(x, "DomainModels$HashedStringAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$Index(value: Index): Self = StObject.set(x, "DomainModels$Index", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$IndexedAttribute(value: IndexedAttribute): Self = StObject.set(x, "DomainModels$IndexedAttribute", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$IndirectEntityRef(value: IndirectEntityRef): Self = StObject.set(x, "DomainModels$IndirectEntityRef", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$IntegerAttributeType(value: IntegerAttributeType): Self = StObject.set(x, "DomainModels$IntegerAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$LongAttributeType(value: LongAttributeType): Self = StObject.set(x, "DomainModels$LongAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$MaxLengthRuleInfo(value: MaxLengthRuleInfo): Self = StObject.set(x, "DomainModels$MaxLengthRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$MemberAccess(value: MemberAccess): Self = StObject.set(x, "DomainModels$MemberAccess", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$NoGeneralization(value: NoGeneralization): Self = StObject.set(x, "DomainModels$NoGeneralization", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$RangeRuleInfo(value: RangeRuleInfo): Self = StObject.set(x, "DomainModels$RangeRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$RegExRuleInfo(value: RegExRuleInfo): Self = StObject.set(x, "DomainModels$RegExRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$RequiredRuleInfo(value: RequiredRuleInfo): Self = StObject.set(x, "DomainModels$RequiredRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$StoredValue(value: StoredValue): Self = StObject.set(x, "DomainModels$StoredValue", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$StringAttributeType(value: StringAttributeType): Self = StObject.set(x, "DomainModels$StringAttributeType", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$UniqueRuleInfo(value: UniqueRuleInfo): Self = StObject.set(x, "DomainModels$UniqueRuleInfo", value.asInstanceOf[js.Any])
      
      inline def setDomainModels$ValidationRule(value: ValidationRule): Self = StObject.set(x, "DomainModels$ValidationRule", value.asInstanceOf[js.Any])
      
      inline def setEnumerations$Condition(value: Condition): Self = StObject.set(x, "Enumerations$Condition", value.asInstanceOf[js.Any])
      
      inline def setEnumerations$EnumerationValue(value: EnumerationValue): Self = StObject.set(x, "Enumerations$EnumerationValue", value.asInstanceOf[js.Any])
      
      inline def setExportMappings$ExportObjectMappingElement(value: ExportObjectMappingElement): Self = StObject.set(x, "ExportMappings$ExportObjectMappingElement", value.asInstanceOf[js.Any])
      
      inline def setExportMappings$ExportValueMappingElement(value: ExportValueMappingElement): Self = StObject.set(x, "ExportMappings$ExportValueMappingElement", value.asInstanceOf[js.Any])
      
      inline def setExpressions$BinaryExpression(value: BinaryExpression): Self = StObject.set(x, "Expressions$BinaryExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$BooleanLiteral(value: BooleanLiteral): Self = StObject.set(x, "Expressions$BooleanLiteral", value.asInstanceOf[js.Any])
      
      inline def setExpressions$ConstantRefExpression(value: ConstantRefExpression): Self = StObject.set(x, "Expressions$ConstantRefExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$EmptyLiteral(value: EmptyLiteral): Self = StObject.set(x, "Expressions$EmptyLiteral", value.asInstanceOf[js.Any])
      
      inline def setExpressions$EnumerationValueRefExpression(value: EnumerationValueRefExpression): Self = StObject.set(x, "Expressions$EnumerationValueRefExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$FloatLiteral(value: FloatLiteral): Self = StObject.set(x, "Expressions$FloatLiteral", value.asInstanceOf[js.Any])
      
      inline def setExpressions$FunctionCallExpression(value: FunctionCallExpression): Self = StObject.set(x, "Expressions$FunctionCallExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$GlobalVariableRef(value: GlobalVariableRef): Self = StObject.set(x, "Expressions$GlobalVariableRef", value.asInstanceOf[js.Any])
      
      inline def setExpressions$IfExpression(value: IfExpression): Self = StObject.set(x, "Expressions$IfExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$IntegerLiteral(value: IntegerLiteral): Self = StObject.set(x, "Expressions$IntegerLiteral", value.asInstanceOf[js.Any])
      
      inline def setExpressions$NoExpression(value: NoExpression): Self = StObject.set(x, "Expressions$NoExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$NoVariableRef(value: NoVariableRef): Self = StObject.set(x, "Expressions$NoVariableRef", value.asInstanceOf[js.Any])
      
      inline def setExpressions$ParenthesisExpression(value: ParenthesisExpression): Self = StObject.set(x, "Expressions$ParenthesisExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$StringLiteral(value: StringLiteral): Self = StObject.set(x, "Expressions$StringLiteral", value.asInstanceOf[js.Any])
      
      inline def setExpressions$UnaryExpression(value: UnaryExpression): Self = StObject.set(x, "Expressions$UnaryExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$UnparsableExpression(value: UnparsableExpression): Self = StObject.set(x, "Expressions$UnparsableExpression", value.asInstanceOf[js.Any])
      
      inline def setExpressions$VariableRefExpression(value: VariableRefExpression): Self = StObject.set(x, "Expressions$VariableRefExpression", value.asInstanceOf[js.Any])
      
      inline def setImages$Image(value: Image): Self = StObject.set(x, "Images$Image", value.asInstanceOf[js.Any])
      
      inline def setImportMappings$ImportObjectMappingElement(value: ImportObjectMappingElement): Self = StObject.set(x, "ImportMappings$ImportObjectMappingElement", value.asInstanceOf[js.Any])
      
      inline def setImportMappings$ImportValueMappingElement(value: ImportValueMappingElement): Self = StObject.set(x, "ImportMappings$ImportValueMappingElement", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$BasicParameterType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BasicParameterType): Self = StObject.set(x, "JavaActions$BasicParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$BooleanType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.BooleanType): Self = StObject.set(x, "JavaActions$BooleanType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ConcreteEntityType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ConcreteEntityType): Self = StObject.set(x, "JavaActions$ConcreteEntityType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$DateTimeType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DateTimeType): Self = StObject.set(x, "JavaActions$DateTimeType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$DecimalType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.DecimalType): Self = StObject.set(x, "JavaActions$DecimalType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$EntityTypeParameterType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EntityTypeParameterType): Self = StObject.set(x, "JavaActions$EntityTypeParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$EnumerationType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.EnumerationType): Self = StObject.set(x, "JavaActions$EnumerationType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ExportMappingJavaActionParameterType(value: ExportMappingJavaActionParameterType): Self = StObject.set(x, "JavaActions$ExportMappingJavaActionParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ExportMappingParameterType(value: ExportMappingParameterType): Self = StObject.set(x, "JavaActions$ExportMappingParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$FloatType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.FloatType): Self = StObject.set(x, "JavaActions$FloatType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ImportMappingJavaActionParameterType(value: ImportMappingJavaActionParameterType): Self = StObject.set(x, "JavaActions$ImportMappingJavaActionParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ImportMappingParameterType(value: ImportMappingParameterType): Self = StObject.set(x, "JavaActions$ImportMappingParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$IntegerType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.IntegerType): Self = StObject.set(x, "JavaActions$IntegerType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$JavaActionParameter(value: JavaActionParameter): Self = StObject.set(x, "JavaActions$JavaActionParameter", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ListType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ListType): Self = StObject.set(x, "JavaActions$ListType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$MicroflowActionInfo(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.MicroflowActionInfo): Self = StObject.set(x, "JavaActions$MicroflowActionInfo", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$MicroflowJavaActionParameterType(value: MicroflowJavaActionParameterType): Self = StObject.set(x, "JavaActions$MicroflowJavaActionParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$MicroflowParameterType(value: MicroflowParameterType): Self = StObject.set(x, "JavaActions$MicroflowParameterType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$ParameterizedEntityType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.ParameterizedEntityType): Self = StObject.set(x, "JavaActions$ParameterizedEntityType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$StringType(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.StringType): Self = StObject.set(x, "JavaActions$StringType", value.asInstanceOf[js.Any])
      
      inline def setJavaActions$TypeParameter(value: typingsJapgolly.mendixmodelsdk.srcGenJavaactionsMod.javaactions.TypeParameter): Self = StObject.set(x, "JavaActions$TypeParameter", value.asInstanceOf[js.Any])
      
      inline def setJavaScriptActions$JavaScriptActionParameter(value: JavaScriptActionParameter): Self = StObject.set(x, "JavaScriptActions$JavaScriptActionParameter", value.asInstanceOf[js.Any])
      
      inline def setJavaScriptActions$NanoflowJavaScriptActionParameterType(value: NanoflowJavaScriptActionParameterType): Self = StObject.set(x, "JavaScriptActions$NanoflowJavaScriptActionParameterType", value.asInstanceOf[js.Any])
      
      inline def setJsonStructures$JsonElement(value: JsonElement): Self = StObject.set(x, "JsonStructures$JsonElement", value.asInstanceOf[js.Any])
      
      inline def setKafka$KafkaMappedValue(value: KafkaMappedValue): Self = StObject.set(x, "Kafka$KafkaMappedValue", value.asInstanceOf[js.Any])
      
      inline def setKafka$KafkaRemoteEntitySource(value: KafkaRemoteEntitySource): Self = StObject.set(x, "Kafka$KafkaRemoteEntitySource", value.asInstanceOf[js.Any])
      
      inline def setKafka$PublishedKafkaResource(value: PublishedKafkaResource): Self = StObject.set(x, "Kafka$PublishedKafkaResource", value.asInstanceOf[js.Any])
      
      inline def setKafka$PublishedKafkaResourceAttribute(value: PublishedKafkaResourceAttribute): Self = StObject.set(x, "Kafka$PublishedKafkaResourceAttribute", value.asInstanceOf[js.Any])
      
      inline def setMLMappings$MLModelEntityMappings(value: MLModelEntityMappings): Self = StObject.set(x, "MLMappings$MLModelEntityMappings", value.asInstanceOf[js.Any])
      
      inline def setMLMappings$MLModelMappings(value: MLModelMappings): Self = StObject.set(x, "MLMappings$MLModelMappings", value.asInstanceOf[js.Any])
      
      inline def setMLMappings$TensorDimension(value: TensorDimension): Self = StObject.set(x, "MLMappings$TensorDimension", value.asInstanceOf[js.Any])
      
      inline def setMLMappings$TensorMappingElement(value: TensorMappingElement): Self = StObject.set(x, "MLMappings$TensorMappingElement", value.asInstanceOf[js.Any])
      
      inline def setMappings$MappingMicroflowCall(value: MappingMicroflowCall): Self = StObject.set(x, "Mappings$MappingMicroflowCall", value.asInstanceOf[js.Any])
      
      inline def setMappings$MappingMicroflowParameter(value: MappingMicroflowParameter): Self = StObject.set(x, "Mappings$MappingMicroflowParameter", value.asInstanceOf[js.Any])
      
      inline def setMenus$MenuItem(value: MenuItem): Self = StObject.set(x, "Menus$MenuItem", value.asInstanceOf[js.Any])
      
      inline def setMenus$MenuItemCollection(value: MenuItemCollection): Self = StObject.set(x, "Menus$MenuItemCollection", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$AssociationElement(value: AssociationElement): Self = StObject.set(x, "MessageDefinitions$AssociationElement", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$AttributeElement(value: AttributeElement): Self = StObject.set(x, "MessageDefinitions$AttributeElement", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$EntityElement(value: EntityElement): Self = StObject.set(x, "MessageDefinitions$EntityElement", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$EntityMessageDefinition(value: EntityMessageDefinition): Self = StObject.set(x, "MessageDefinitions$EntityMessageDefinition", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$ExposedAssociation(value: ExposedAssociation): Self = StObject.set(x, "MessageDefinitions$ExposedAssociation", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$ExposedAttribute(value: ExposedAttribute): Self = StObject.set(x, "MessageDefinitions$ExposedAttribute", value.asInstanceOf[js.Any])
      
      inline def setMessageDefinitions$ExposedEntity(value: ExposedEntity): Self = StObject.set(x, "MessageDefinitions$ExposedEntity", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AbortOperation(value: AbortOperation): Self = StObject.set(x, "Microflows$AbortOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ActionActivity(value: ActionActivity): Self = StObject.set(x, "Microflows$ActionActivity", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AdvancedRequestHandling(value: AdvancedRequestHandling): Self = StObject.set(x, "Microflows$AdvancedRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AggregateListAction(value: AggregateListAction): Self = StObject.set(x, "Microflows$AggregateListAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Annotation(value: typingsJapgolly.mendixmodelsdk.srcGenMicroflowsMod.microflows.Annotation): Self = StObject.set(x, "Microflows$Annotation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AnnotationFlow(value: AnnotationFlow): Self = StObject.set(x, "Microflows$AnnotationFlow", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AppServiceCallAction(value: AppServiceCallAction): Self = StObject.set(x, "Microflows$AppServiceCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AppServiceCallParameterMapping(value: AppServiceCallParameterMapping): Self = StObject.set(x, "Microflows$AppServiceCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ApplyJumpToOptionAction(value: ApplyJumpToOptionAction): Self = StObject.set(x, "Microflows$ApplyJumpToOptionAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$AssociationRetrieveSource(value: AssociationRetrieveSource): Self = StObject.set(x, "Microflows$AssociationRetrieveSource", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$BasicCodeActionParameterValue(value: BasicCodeActionParameterValue): Self = StObject.set(x, "Microflows$BasicCodeActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$BasicJavaActionParameterValue(value: BasicJavaActionParameterValue): Self = StObject.set(x, "Microflows$BasicJavaActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$BinaryRequestHandling(value: BinaryRequestHandling): Self = StObject.set(x, "Microflows$BinaryRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$BreakEvent(value: BreakEvent): Self = StObject.set(x, "Microflows$BreakEvent", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CastAction(value: CastAction): Self = StObject.set(x, "Microflows$CastAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ChangeListAction(value: ChangeListAction): Self = StObject.set(x, "Microflows$ChangeListAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ChangeObjectAction(value: ChangeObjectAction): Self = StObject.set(x, "Microflows$ChangeObjectAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ChangeVariableAction(value: ChangeVariableAction): Self = StObject.set(x, "Microflows$ChangeVariableAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CloseFormAction(value: CloseFormAction): Self = StObject.set(x, "Microflows$CloseFormAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CommitAction(value: CommitAction): Self = StObject.set(x, "Microflows$CommitAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ConstantRange(value: ConstantRange): Self = StObject.set(x, "Microflows$ConstantRange", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Contains(value: Contains): Self = StObject.set(x, "Microflows$Contains", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ContinueEvent(value: ContinueEvent): Self = StObject.set(x, "Microflows$ContinueEvent", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ContinueOperation(value: ContinueOperation): Self = StObject.set(x, "Microflows$ContinueOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CounterMeterAction(value: CounterMeterAction): Self = StObject.set(x, "Microflows$CounterMeterAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CreateListAction(value: CreateListAction): Self = StObject.set(x, "Microflows$CreateListAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CreateObjectAction(value: CreateObjectAction): Self = StObject.set(x, "Microflows$CreateObjectAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CreateVariableAction(value: CreateVariableAction): Self = StObject.set(x, "Microflows$CreateVariableAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CustomRange(value: CustomRange): Self = StObject.set(x, "Microflows$CustomRange", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$CustomRequestHandling(value: CustomRequestHandling): Self = StObject.set(x, "Microflows$CustomRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$DatabaseRetrieveSource(value: DatabaseRetrieveSource): Self = StObject.set(x, "Microflows$DatabaseRetrieveSource", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$DeleteAction(value: DeleteAction): Self = StObject.set(x, "Microflows$DeleteAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$DeleteExternalObject(value: DeleteExternalObject): Self = StObject.set(x, "Microflows$DeleteExternalObject", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$DocumentTemplateParameterMapping(value: DocumentTemplateParameterMapping): Self = StObject.set(x, "Microflows$DocumentTemplateParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$DownloadFileAction(value: DownloadFileAction): Self = StObject.set(x, "Microflows$DownloadFileAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$EndEvent(value: EndEvent): Self = StObject.set(x, "Microflows$EndEvent", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$EntityTypeCodeActionParameterValue(value: EntityTypeCodeActionParameterValue): Self = StObject.set(x, "Microflows$EntityTypeCodeActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$EntityTypeJavaActionParameterValue(value: EntityTypeJavaActionParameterValue): Self = StObject.set(x, "Microflows$EntityTypeJavaActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$EnumerationCase(value: EnumerationCase): Self = StObject.set(x, "Microflows$EnumerationCase", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ErrorEvent(value: ErrorEvent): Self = StObject.set(x, "Microflows$ErrorEvent", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExclusiveMerge(value: ExclusiveMerge): Self = StObject.set(x, "Microflows$ExclusiveMerge", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExclusiveSplit(value: ExclusiveSplit): Self = StObject.set(x, "Microflows$ExclusiveSplit", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExportMappingJavaActionParameterValue(value: ExportMappingJavaActionParameterValue): Self = StObject.set(x, "Microflows$ExportMappingJavaActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExportMappingParameterValue(value: ExportMappingParameterValue): Self = StObject.set(x, "Microflows$ExportMappingParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExportXmlAction(value: ExportXmlAction): Self = StObject.set(x, "Microflows$ExportXmlAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ExpressionSplitCondition(value: ExpressionSplitCondition): Self = StObject.set(x, "Microflows$ExpressionSplitCondition", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$FileDocumentExport(value: FileDocumentExport): Self = StObject.set(x, "Microflows$FileDocumentExport", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Filter(value: Filter): Self = StObject.set(x, "Microflows$Filter", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$FilterByExpression(value: FilterByExpression): Self = StObject.set(x, "Microflows$FilterByExpression", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Find(value: Find): Self = StObject.set(x, "Microflows$Find", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$FindByExpression(value: FindByExpression): Self = StObject.set(x, "Microflows$FindByExpression", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$FormDataPart(value: FormDataPart): Self = StObject.set(x, "Microflows$FormDataPart", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$FormDataRequestHandling(value: FormDataRequestHandling): Self = StObject.set(x, "Microflows$FormDataRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$GaugeMeterAction(value: GaugeMeterAction): Self = StObject.set(x, "Microflows$GaugeMeterAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$GenerateDocumentAction(value: GenerateDocumentAction): Self = StObject.set(x, "Microflows$GenerateDocumentAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$GenerateJumpToOptionsAction(value: GenerateJumpToOptionsAction): Self = StObject.set(x, "Microflows$GenerateJumpToOptionsAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$GetWorkflowDataAction(value: GetWorkflowDataAction): Self = StObject.set(x, "Microflows$GetWorkflowDataAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Head(value: Head): Self = StObject.set(x, "Microflows$Head", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$HttpConfiguration(value: HttpConfiguration): Self = StObject.set(x, "Microflows$HttpConfiguration", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$HttpHeaderEntry(value: HttpHeaderEntry): Self = StObject.set(x, "Microflows$HttpHeaderEntry", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ImportMappingCall(value: ImportMappingCall): Self = StObject.set(x, "Microflows$ImportMappingCall", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ImportMappingJavaActionParameterValue(value: ImportMappingJavaActionParameterValue): Self = StObject.set(x, "Microflows$ImportMappingJavaActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ImportMappingParameterValue(value: ImportMappingParameterValue): Self = StObject.set(x, "Microflows$ImportMappingParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ImportXmlAction(value: ImportXmlAction): Self = StObject.set(x, "Microflows$ImportXmlAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$IncrementCounterMeterAction(value: IncrementCounterMeterAction): Self = StObject.set(x, "Microflows$IncrementCounterMeterAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$InheritanceCase(value: InheritanceCase): Self = StObject.set(x, "Microflows$InheritanceCase", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$InheritanceSplit(value: InheritanceSplit): Self = StObject.set(x, "Microflows$InheritanceSplit", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Intersect(value: Intersect): Self = StObject.set(x, "Microflows$Intersect", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$IterableList(value: IterableList): Self = StObject.set(x, "Microflows$IterableList", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$JavaActionCallAction(value: JavaActionCallAction): Self = StObject.set(x, "Microflows$JavaActionCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$JavaActionParameterMapping(value: JavaActionParameterMapping): Self = StObject.set(x, "Microflows$JavaActionParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$JavaScriptActionCallAction(value: JavaScriptActionCallAction): Self = StObject.set(x, "Microflows$JavaScriptActionCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$JavaScriptActionParameterMapping(value: JavaScriptActionParameterMapping): Self = StObject.set(x, "Microflows$JavaScriptActionParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ListEquals(value: ListEquals): Self = StObject.set(x, "Microflows$ListEquals", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ListOperationAction(value: ListOperationAction): Self = StObject.set(x, "Microflows$ListOperationAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$LogMessageAction(value: LogMessageAction): Self = StObject.set(x, "Microflows$LogMessageAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$LoopedActivity(value: LoopedActivity): Self = StObject.set(x, "Microflows$LoopedActivity", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MLModelCall(value: MLModelCall): Self = StObject.set(x, "Microflows$MLModelCall", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MLModelCallAction(value: MLModelCallAction): Self = StObject.set(x, "Microflows$MLModelCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MLModelCallParameterMapping(value: MLModelCallParameterMapping): Self = StObject.set(x, "Microflows$MLModelCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MappingRequestHandling(value: MappingRequestHandling): Self = StObject.set(x, "Microflows$MappingRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MemberChange(value: MemberChange): Self = StObject.set(x, "Microflows$MemberChange", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MeterTagMapping(value: MeterTagMapping): Self = StObject.set(x, "Microflows$MeterTagMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowCall(value: MicroflowCall): Self = StObject.set(x, "Microflows$MicroflowCall", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowCallAction(value: MicroflowCallAction): Self = StObject.set(x, "Microflows$MicroflowCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowCallParameterMapping(value: MicroflowCallParameterMapping): Self = StObject.set(x, "Microflows$MicroflowCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowJavaActionParameterValue(value: MicroflowJavaActionParameterValue): Self = StObject.set(x, "Microflows$MicroflowJavaActionParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowObjectCollection(value: MicroflowObjectCollection): Self = StObject.set(x, "Microflows$MicroflowObjectCollection", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowParameter(value: MicroflowParameter): Self = StObject.set(x, "Microflows$MicroflowParameter", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowParameterObject(value: MicroflowParameterObject): Self = StObject.set(x, "Microflows$MicroflowParameterObject", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$MicroflowParameterValue(value: MicroflowParameterValue): Self = StObject.set(x, "Microflows$MicroflowParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$NanoflowCall(value: NanoflowCall): Self = StObject.set(x, "Microflows$NanoflowCall", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$NanoflowCallAction(value: NanoflowCallAction): Self = StObject.set(x, "Microflows$NanoflowCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$NanoflowCallParameterMapping(value: NanoflowCallParameterMapping): Self = StObject.set(x, "Microflows$NanoflowCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$NanoflowParameter(value: NanoflowParameter): Self = StObject.set(x, "Microflows$NanoflowParameter", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$NoCase(value: NoCase): Self = StObject.set(x, "Microflows$NoCase", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$OpenUserTaskAction(value: OpenUserTaskAction): Self = StObject.set(x, "Microflows$OpenUserTaskAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$OpenWorkflowAction(value: OpenWorkflowAction): Self = StObject.set(x, "Microflows$OpenWorkflowAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$PauseOperation(value: PauseOperation): Self = StObject.set(x, "Microflows$PauseOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$PrimitiveTypedTemplateArgument(value: PrimitiveTypedTemplateArgument): Self = StObject.set(x, "Microflows$PrimitiveTypedTemplateArgument", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ProxyConfiguration(value: ProxyConfiguration): Self = StObject.set(x, "Microflows$ProxyConfiguration", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$PushToClientAction(value: PushToClientAction): Self = StObject.set(x, "Microflows$PushToClientAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RestCallAction(value: RestCallAction): Self = StObject.set(x, "Microflows$RestCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RestartOperation(value: RestartOperation): Self = StObject.set(x, "Microflows$RestartOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ResultHandling(value: ResultHandling): Self = StObject.set(x, "Microflows$ResultHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ResumeOperation(value: ResumeOperation): Self = StObject.set(x, "Microflows$ResumeOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RetrieveAction(value: RetrieveAction): Self = StObject.set(x, "Microflows$RetrieveAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RetryOperation(value: RetryOperation): Self = StObject.set(x, "Microflows$RetryOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RollbackAction(value: RollbackAction): Self = StObject.set(x, "Microflows$RollbackAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RuleCall(value: RuleCall): Self = StObject.set(x, "Microflows$RuleCall", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RuleCallParameterMapping(value: RuleCallParameterMapping): Self = StObject.set(x, "Microflows$RuleCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RuleParameter(value: RuleParameter): Self = StObject.set(x, "Microflows$RuleParameter", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$RuleSplitCondition(value: RuleSplitCondition): Self = StObject.set(x, "Microflows$RuleSplitCondition", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SendExternalObject(value: SendExternalObject): Self = StObject.set(x, "Microflows$SendExternalObject", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SequenceFlow(value: SequenceFlow): Self = StObject.set(x, "Microflows$SequenceFlow", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SetTaskOutcomeAction(value: SetTaskOutcomeAction): Self = StObject.set(x, "Microflows$SetTaskOutcomeAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ShowHomePageAction(value: ShowHomePageAction): Self = StObject.set(x, "Microflows$ShowHomePageAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ShowMessageAction(value: ShowMessageAction): Self = StObject.set(x, "Microflows$ShowMessageAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ShowPageAction(value: ShowPageAction): Self = StObject.set(x, "Microflows$ShowPageAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SimpleRequestHandling(value: SimpleRequestHandling): Self = StObject.set(x, "Microflows$SimpleRequestHandling", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Sort(value: Sort): Self = StObject.set(x, "Microflows$Sort", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SortItem(value: SortItem): Self = StObject.set(x, "Microflows$SortItem", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SortItemList(value: SortItemList): Self = StObject.set(x, "Microflows$SortItemList", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$StartEvent(value: StartEvent): Self = StObject.set(x, "Microflows$StartEvent", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$StringTemplate(value: StringTemplate): Self = StObject.set(x, "Microflows$StringTemplate", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$StringTemplateParameterValue(value: StringTemplateParameterValue): Self = StObject.set(x, "Microflows$StringTemplateParameterValue", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Subtract(value: Subtract): Self = StObject.set(x, "Microflows$Subtract", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$SynchronizeAction(value: SynchronizeAction): Self = StObject.set(x, "Microflows$SynchronizeAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Tail(value: Tail): Self = StObject.set(x, "Microflows$Tail", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$TemplateArgument(value: TemplateArgument): Self = StObject.set(x, "Microflows$TemplateArgument", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$TextTemplate(value: TextTemplate): Self = StObject.set(x, "Microflows$TextTemplate", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$TypedTemplate(value: TypedTemplate): Self = StObject.set(x, "Microflows$TypedTemplate", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$Union(value: Union): Self = StObject.set(x, "Microflows$Union", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$UnpauseOperation(value: UnpauseOperation): Self = StObject.set(x, "Microflows$UnpauseOperation", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$ValidationFeedbackAction(value: ValidationFeedbackAction): Self = StObject.set(x, "Microflows$ValidationFeedbackAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$VariableExport(value: VariableExport): Self = StObject.set(x, "Microflows$VariableExport", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WebServiceCallAction(value: WebServiceCallAction): Self = StObject.set(x, "Microflows$WebServiceCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WebServiceOperationAdvancedParameterMapping(value: WebServiceOperationAdvancedParameterMapping): Self = StObject.set(x, "Microflows$WebServiceOperationAdvancedParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WebServiceOperationSimpleParameterMapping(value: WebServiceOperationSimpleParameterMapping): Self = StObject.set(x, "Microflows$WebServiceOperationSimpleParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WhileLoopCondition(value: WhileLoopCondition): Self = StObject.set(x, "Microflows$WhileLoopCondition", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WorkflowCallAction(value: WorkflowCallAction): Self = StObject.set(x, "Microflows$WorkflowCallAction", value.asInstanceOf[js.Any])
      
      inline def setMicroflows$WorkflowOperationAction(value: WorkflowOperationAction): Self = StObject.set(x, "Microflows$WorkflowOperationAction", value.asInstanceOf[js.Any])
      
      inline def setNanoflows$NanoflowParameterValue(value: NanoflowParameterValue): Self = StObject.set(x, "Nanoflows$NanoflowParameterValue", value.asInstanceOf[js.Any])
      
      inline def setNativePages$BottomBarItem(value: BottomBarItem): Self = StObject.set(x, "NativePages$BottomBarItem", value.asInstanceOf[js.Any])
      
      inline def setNativePages$NativeLayoutCallArgument(value: NativeLayoutCallArgument): Self = StObject.set(x, "NativePages$NativeLayoutCallArgument", value.asInstanceOf[js.Any])
      
      inline def setNativePages$NativePageClientAction(value: NativePageClientAction): Self = StObject.set(x, "NativePages$NativePageClientAction", value.asInstanceOf[js.Any])
      
      inline def setNativePages$NativePlaceholder(value: NativePlaceholder): Self = StObject.set(x, "NativePages$NativePlaceholder", value.asInstanceOf[js.Any])
      
      inline def setNavigation$HomePage(value: HomePage): Self = StObject.set(x, "Navigation$HomePage", value.asInstanceOf[js.Any])
      
      inline def setNavigation$NativeHomePage(value: NativeHomePage): Self = StObject.set(x, "Navigation$NativeHomePage", value.asInstanceOf[js.Any])
      
      inline def setNavigation$NativeNavigationProfile(value: NativeNavigationProfile): Self = StObject.set(x, "Navigation$NativeNavigationProfile", value.asInstanceOf[js.Any])
      
      inline def setNavigation$NavigationProfile(value: NavigationProfile): Self = StObject.set(x, "Navigation$NavigationProfile", value.asInstanceOf[js.Any])
      
      inline def setNavigation$OfflineEntityConfig(value: OfflineEntityConfig): Self = StObject.set(x, "Navigation$OfflineEntityConfig", value.asInstanceOf[js.Any])
      
      inline def setNavigation$ProgressiveWebAppSettings(value: ProgressiveWebAppSettings): Self = StObject.set(x, "Navigation$ProgressiveWebAppSettings", value.asInstanceOf[js.Any])
      
      inline def setNavigation$RoleBasedHomePage(value: RoleBasedHomePage): Self = StObject.set(x, "Navigation$RoleBasedHomePage", value.asInstanceOf[js.Any])
      
      inline def setNavigation$RoleBasedNativeHomePage(value: RoleBasedNativeHomePage): Self = StObject.set(x, "Navigation$RoleBasedNativeHomePage", value.asInstanceOf[js.Any])
      
      inline def setPages$ActionButton(value: ActionButton): Self = StObject.set(x, "Pages$ActionButton", value.asInstanceOf[js.Any])
      
      inline def setPages$Appearance(value: Appearance): Self = StObject.set(x, "Pages$Appearance", value.asInstanceOf[js.Any])
      
      inline def setPages$AssociationSource(value: AssociationSource): Self = StObject.set(x, "Pages$AssociationSource", value.asInstanceOf[js.Any])
      
      inline def setPages$BackButton(value: BackButton): Self = StObject.set(x, "Pages$BackButton", value.asInstanceOf[js.Any])
      
      inline def setPages$CallNanoflowClientAction(value: CallNanoflowClientAction): Self = StObject.set(x, "Pages$CallNanoflowClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$CallWorkflowClientAction(value: CallWorkflowClientAction): Self = StObject.set(x, "Pages$CallWorkflowClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$CancelButton(value: CancelButton): Self = StObject.set(x, "Pages$CancelButton", value.asInstanceOf[js.Any])
      
      inline def setPages$CancelChangesClientAction(value: CancelChangesClientAction): Self = StObject.set(x, "Pages$CancelChangesClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$CheckBox(value: CheckBox): Self = StObject.set(x, "Pages$CheckBox", value.asInstanceOf[js.Any])
      
      inline def setPages$ClientTemplate(value: ClientTemplate): Self = StObject.set(x, "Pages$ClientTemplate", value.asInstanceOf[js.Any])
      
      inline def setPages$ClientTemplateParameter(value: ClientTemplateParameter): Self = StObject.set(x, "Pages$ClientTemplateParameter", value.asInstanceOf[js.Any])
      
      inline def setPages$ClosePageClientAction(value: ClosePageClientAction): Self = StObject.set(x, "Pages$ClosePageClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$ComparisonSearchField(value: ComparisonSearchField): Self = StObject.set(x, "Pages$ComparisonSearchField", value.asInstanceOf[js.Any])
      
      inline def setPages$ConditionalEditabilitySettings(value: ConditionalEditabilitySettings): Self = StObject.set(x, "Pages$ConditionalEditabilitySettings", value.asInstanceOf[js.Any])
      
      inline def setPages$ConditionalVisibilitySettings(value: ConditionalVisibilitySettings): Self = StObject.set(x, "Pages$ConditionalVisibilitySettings", value.asInstanceOf[js.Any])
      
      inline def setPages$ConfirmationInfo(value: ConfirmationInfo): Self = StObject.set(x, "Pages$ConfirmationInfo", value.asInstanceOf[js.Any])
      
      inline def setPages$CreateObjectClientAction(value: CreateObjectClientAction): Self = StObject.set(x, "Pages$CreateObjectClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$DataGrid(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataGrid): Self = StObject.set(x, "Pages$DataGrid", value.asInstanceOf[js.Any])
      
      inline def setPages$DataGridAddButton(value: DataGridAddButton): Self = StObject.set(x, "Pages$DataGridAddButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataGridExportToCSVButton(value: DataGridExportToCSVButton): Self = StObject.set(x, "Pages$DataGridExportToCSVButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataGridExportToExcelButton(value: DataGridExportToExcelButton): Self = StObject.set(x, "Pages$DataGridExportToExcelButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataGridRemoveButton(value: DataGridRemoveButton): Self = StObject.set(x, "Pages$DataGridRemoveButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataView(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DataView): Self = StObject.set(x, "Pages$DataView", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewActionButton(value: DataViewActionButton): Self = StObject.set(x, "Pages$DataViewActionButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewCancelButton(value: DataViewCancelButton): Self = StObject.set(x, "Pages$DataViewCancelButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewCloseButton(value: DataViewCloseButton): Self = StObject.set(x, "Pages$DataViewCloseButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewControlBar(value: DataViewControlBar): Self = StObject.set(x, "Pages$DataViewControlBar", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewSaveButton(value: DataViewSaveButton): Self = StObject.set(x, "Pages$DataViewSaveButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DataViewSource(value: DataViewSource): Self = StObject.set(x, "Pages$DataViewSource", value.asInstanceOf[js.Any])
      
      inline def setPages$DatabaseConstraint(value: DatabaseConstraint): Self = StObject.set(x, "Pages$DatabaseConstraint", value.asInstanceOf[js.Any])
      
      inline def setPages$DatePicker(value: DatePicker): Self = StObject.set(x, "Pages$DatePicker", value.asInstanceOf[js.Any])
      
      inline def setPages$DeleteClientAction(value: DeleteClientAction): Self = StObject.set(x, "Pages$DeleteClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$DesignPropertyValue(value: DesignPropertyValue): Self = StObject.set(x, "Pages$DesignPropertyValue", value.asInstanceOf[js.Any])
      
      inline def setPages$DivContainer(value: DivContainer): Self = StObject.set(x, "Pages$DivContainer", value.asInstanceOf[js.Any])
      
      inline def setPages$DropDown(value: DropDown): Self = StObject.set(x, "Pages$DropDown", value.asInstanceOf[js.Any])
      
      inline def setPages$DropDownButton(value: DropDownButton): Self = StObject.set(x, "Pages$DropDownButton", value.asInstanceOf[js.Any])
      
      inline def setPages$DropDownButtonItem(value: DropDownButtonItem): Self = StObject.set(x, "Pages$DropDownButtonItem", value.asInstanceOf[js.Any])
      
      inline def setPages$DropDownSearchField(value: DropDownSearchField): Self = StObject.set(x, "Pages$DropDownSearchField", value.asInstanceOf[js.Any])
      
      inline def setPages$DynamicImageViewer(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.DynamicImageViewer): Self = StObject.set(x, "Pages$DynamicImageViewer", value.asInstanceOf[js.Any])
      
      inline def setPages$DynamicText(value: DynamicText): Self = StObject.set(x, "Pages$DynamicText", value.asInstanceOf[js.Any])
      
      inline def setPages$EditPageTemplateType(value: EditPageTemplateType): Self = StObject.set(x, "Pages$EditPageTemplateType", value.asInstanceOf[js.Any])
      
      inline def setPages$FileManager(value: FileManager): Self = StObject.set(x, "Pages$FileManager", value.asInstanceOf[js.Any])
      
      inline def setPages$FormattingInfo(value: FormattingInfo): Self = StObject.set(x, "Pages$FormattingInfo", value.asInstanceOf[js.Any])
      
      inline def setPages$GlyphIcon(value: GlyphIcon): Self = StObject.set(x, "Pages$GlyphIcon", value.asInstanceOf[js.Any])
      
      inline def setPages$GridActionButton(value: GridActionButton): Self = StObject.set(x, "Pages$GridActionButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridColumn(value: GridColumn): Self = StObject.set(x, "Pages$GridColumn", value.asInstanceOf[js.Any])
      
      inline def setPages$GridControlBar(value: GridControlBar): Self = StObject.set(x, "Pages$GridControlBar", value.asInstanceOf[js.Any])
      
      inline def setPages$GridDatabaseSource(value: GridDatabaseSource): Self = StObject.set(x, "Pages$GridDatabaseSource", value.asInstanceOf[js.Any])
      
      inline def setPages$GridDeleteButton(value: GridDeleteButton): Self = StObject.set(x, "Pages$GridDeleteButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridDeselectAllButton(value: GridDeselectAllButton): Self = StObject.set(x, "Pages$GridDeselectAllButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridEditButton(value: GridEditButton): Self = StObject.set(x, "Pages$GridEditButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridNewButton(value: GridNewButton): Self = StObject.set(x, "Pages$GridNewButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridSearchButton(value: GridSearchButton): Self = StObject.set(x, "Pages$GridSearchButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridSelectAllButton(value: GridSelectAllButton): Self = StObject.set(x, "Pages$GridSelectAllButton", value.asInstanceOf[js.Any])
      
      inline def setPages$GridSortBar(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSortBar): Self = StObject.set(x, "Pages$GridSortBar", value.asInstanceOf[js.Any])
      
      inline def setPages$GridSortItem(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.GridSortItem): Self = StObject.set(x, "Pages$GridSortItem", value.asInstanceOf[js.Any])
      
      inline def setPages$GridXPathSource(value: GridXPathSource): Self = StObject.set(x, "Pages$GridXPathSource", value.asInstanceOf[js.Any])
      
      inline def setPages$GroupBox(value: GroupBox): Self = StObject.set(x, "Pages$GroupBox", value.asInstanceOf[js.Any])
      
      inline def setPages$Header(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Header): Self = StObject.set(x, "Pages$Header", value.asInstanceOf[js.Any])
      
      inline def setPages$HorizontalSplitPane(value: HorizontalSplitPane): Self = StObject.set(x, "Pages$HorizontalSplitPane", value.asInstanceOf[js.Any])
      
      inline def setPages$ImageIcon(value: ImageIcon): Self = StObject.set(x, "Pages$ImageIcon", value.asInstanceOf[js.Any])
      
      inline def setPages$ImageUploader(value: ImageUploader): Self = StObject.set(x, "Pages$ImageUploader", value.asInstanceOf[js.Any])
      
      inline def setPages$ImageViewerSource(value: ImageViewerSource): Self = StObject.set(x, "Pages$ImageViewerSource", value.asInstanceOf[js.Any])
      
      inline def setPages$InputReferenceSetSelector(value: InputReferenceSetSelector): Self = StObject.set(x, "Pages$InputReferenceSetSelector", value.asInstanceOf[js.Any])
      
      inline def setPages$Label(value: Label): Self = StObject.set(x, "Pages$Label", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutCall(value: LayoutCall): Self = StObject.set(x, "Pages$LayoutCall", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutCallArgument(value: LayoutCallArgument): Self = StObject.set(x, "Pages$LayoutCallArgument", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutGrid(value: LayoutGrid): Self = StObject.set(x, "Pages$LayoutGrid", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutGridColumn(value: LayoutGridColumn): Self = StObject.set(x, "Pages$LayoutGridColumn", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutGridRow(value: LayoutGridRow): Self = StObject.set(x, "Pages$LayoutGridRow", value.asInstanceOf[js.Any])
      
      inline def setPages$LayoutParameter(value: LayoutParameter): Self = StObject.set(x, "Pages$LayoutParameter", value.asInstanceOf[js.Any])
      
      inline def setPages$LinkButton(value: LinkButton): Self = StObject.set(x, "Pages$LinkButton", value.asInstanceOf[js.Any])
      
      inline def setPages$ListView(value: ListView): Self = StObject.set(x, "Pages$ListView", value.asInstanceOf[js.Any])
      
      inline def setPages$ListViewDatabaseSource(value: ListViewDatabaseSource): Self = StObject.set(x, "Pages$ListViewDatabaseSource", value.asInstanceOf[js.Any])
      
      inline def setPages$ListViewSearch(value: ListViewSearch): Self = StObject.set(x, "Pages$ListViewSearch", value.asInstanceOf[js.Any])
      
      inline def setPages$ListViewTemplate(value: ListViewTemplate): Self = StObject.set(x, "Pages$ListViewTemplate", value.asInstanceOf[js.Any])
      
      inline def setPages$ListViewXPathSource(value: ListViewXPathSource): Self = StObject.set(x, "Pages$ListViewXPathSource", value.asInstanceOf[js.Any])
      
      inline def setPages$ListenTargetSource(value: ListenTargetSource): Self = StObject.set(x, "Pages$ListenTargetSource", value.asInstanceOf[js.Any])
      
      inline def setPages$LoginButton(value: LoginButton): Self = StObject.set(x, "Pages$LoginButton", value.asInstanceOf[js.Any])
      
      inline def setPages$LoginIdTextBox(value: LoginIdTextBox): Self = StObject.set(x, "Pages$LoginIdTextBox", value.asInstanceOf[js.Any])
      
      inline def setPages$LogoutButton(value: LogoutButton): Self = StObject.set(x, "Pages$LogoutButton", value.asInstanceOf[js.Any])
      
      inline def setPages$MasterDetail(value: MasterDetail): Self = StObject.set(x, "Pages$MasterDetail", value.asInstanceOf[js.Any])
      
      inline def setPages$MasterDetailDetailRegion(value: MasterDetailDetailRegion): Self = StObject.set(x, "Pages$MasterDetailDetailRegion", value.asInstanceOf[js.Any])
      
      inline def setPages$MasterDetailMasterRegion(value: MasterDetailMasterRegion): Self = StObject.set(x, "Pages$MasterDetailMasterRegion", value.asInstanceOf[js.Any])
      
      inline def setPages$MenuBar(value: MenuBar): Self = StObject.set(x, "Pages$MenuBar", value.asInstanceOf[js.Any])
      
      inline def setPages$MenuDocumentSource(value: MenuDocumentSource): Self = StObject.set(x, "Pages$MenuDocumentSource", value.asInstanceOf[js.Any])
      
      inline def setPages$MicroflowClientAction(value: MicroflowClientAction): Self = StObject.set(x, "Pages$MicroflowClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$MicroflowParameterMapping(value: MicroflowParameterMapping): Self = StObject.set(x, "Pages$MicroflowParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setPages$MicroflowSettings(value: MicroflowSettings): Self = StObject.set(x, "Pages$MicroflowSettings", value.asInstanceOf[js.Any])
      
      inline def setPages$MicroflowSource(value: MicroflowSource): Self = StObject.set(x, "Pages$MicroflowSource", value.asInstanceOf[js.Any])
      
      inline def setPages$NanoflowParameterMapping(value: NanoflowParameterMapping): Self = StObject.set(x, "Pages$NanoflowParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setPages$NanoflowSource(value: NanoflowSource): Self = StObject.set(x, "Pages$NanoflowSource", value.asInstanceOf[js.Any])
      
      inline def setPages$NativeLayoutContent(value: NativeLayoutContent): Self = StObject.set(x, "Pages$NativeLayoutContent", value.asInstanceOf[js.Any])
      
      inline def setPages$NavigationList(value: NavigationList): Self = StObject.set(x, "Pages$NavigationList", value.asInstanceOf[js.Any])
      
      inline def setPages$NavigationListItem(value: NavigationListItem): Self = StObject.set(x, "Pages$NavigationListItem", value.asInstanceOf[js.Any])
      
      inline def setPages$NavigationSource(value: NavigationSource): Self = StObject.set(x, "Pages$NavigationSource", value.asInstanceOf[js.Any])
      
      inline def setPages$NavigationTree(value: NavigationTree): Self = StObject.set(x, "Pages$NavigationTree", value.asInstanceOf[js.Any])
      
      inline def setPages$NewButton(value: NewButton): Self = StObject.set(x, "Pages$NewButton", value.asInstanceOf[js.Any])
      
      inline def setPages$NoClientAction(value: NoClientAction): Self = StObject.set(x, "Pages$NoClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$OfflineSchema(value: OfflineSchema): Self = StObject.set(x, "Pages$OfflineSchema", value.asInstanceOf[js.Any])
      
      inline def setPages$OfflineSchemaFetchInstruction(value: OfflineSchemaFetchInstruction): Self = StObject.set(x, "Pages$OfflineSchemaFetchInstruction", value.asInstanceOf[js.Any])
      
      inline def setPages$OnClickEnlarge(value: OnClickEnlarge): Self = StObject.set(x, "Pages$OnClickEnlarge", value.asInstanceOf[js.Any])
      
      inline def setPages$OnClickMicroflow(value: OnClickMicroflow): Self = StObject.set(x, "Pages$OnClickMicroflow", value.asInstanceOf[js.Any])
      
      inline def setPages$OnClickNothing(value: OnClickNothing): Self = StObject.set(x, "Pages$OnClickNothing", value.asInstanceOf[js.Any])
      
      inline def setPages$OpenLinkClientAction(value: OpenLinkClientAction): Self = StObject.set(x, "Pages$OpenLinkClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$OpenUserTaskClientAction(value: OpenUserTaskClientAction): Self = StObject.set(x, "Pages$OpenUserTaskClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$OpenWorkflowClientAction(value: OpenWorkflowClientAction): Self = StObject.set(x, "Pages$OpenWorkflowClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$PageClientAction(value: PageClientAction): Self = StObject.set(x, "Pages$PageClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$PageForSpecialization(value: PageForSpecialization): Self = StObject.set(x, "Pages$PageForSpecialization", value.asInstanceOf[js.Any])
      
      inline def setPages$PageParameter(value: PageParameter): Self = StObject.set(x, "Pages$PageParameter", value.asInstanceOf[js.Any])
      
      inline def setPages$PageParameterMapping(value: PageParameterMapping): Self = StObject.set(x, "Pages$PageParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setPages$PageSettings(value: PageSettings): Self = StObject.set(x, "Pages$PageSettings", value.asInstanceOf[js.Any])
      
      inline def setPages$PageVariable(value: PageVariable): Self = StObject.set(x, "Pages$PageVariable", value.asInstanceOf[js.Any])
      
      inline def setPages$PasswordTextBox(value: PasswordTextBox): Self = StObject.set(x, "Pages$PasswordTextBox", value.asInstanceOf[js.Any])
      
      inline def setPages$Placeholder(value: Placeholder): Self = StObject.set(x, "Pages$Placeholder", value.asInstanceOf[js.Any])
      
      inline def setPages$RadioButtonGroup(value: RadioButtonGroup): Self = StObject.set(x, "Pages$RadioButtonGroup", value.asInstanceOf[js.Any])
      
      inline def setPages$RangeSearchField(value: RangeSearchField): Self = StObject.set(x, "Pages$RangeSearchField", value.asInstanceOf[js.Any])
      
      inline def setPages$ReferenceSelector(value: ReferenceSelector): Self = StObject.set(x, "Pages$ReferenceSelector", value.asInstanceOf[js.Any])
      
      inline def setPages$ReferenceSetSelector(value: ReferenceSetSelector): Self = StObject.set(x, "Pages$ReferenceSetSelector", value.asInstanceOf[js.Any])
      
      inline def setPages$ReferenceSetSource(value: ReferenceSetSource): Self = StObject.set(x, "Pages$ReferenceSetSource", value.asInstanceOf[js.Any])
      
      inline def setPages$RegularPageTemplateType(value: RegularPageTemplateType): Self = StObject.set(x, "Pages$RegularPageTemplateType", value.asInstanceOf[js.Any])
      
      inline def setPages$RetrievalQuery(value: RetrievalQuery): Self = StObject.set(x, "Pages$RetrievalQuery", value.asInstanceOf[js.Any])
      
      inline def setPages$RetrievalQueryParameter(value: RetrievalQueryParameter): Self = StObject.set(x, "Pages$RetrievalQueryParameter", value.asInstanceOf[js.Any])
      
      inline def setPages$RetrievalSchema(value: RetrievalSchema): Self = StObject.set(x, "Pages$RetrievalSchema", value.asInstanceOf[js.Any])
      
      inline def setPages$RuntimeOperation(value: RuntimeOperation): Self = StObject.set(x, "Pages$RuntimeOperation", value.asInstanceOf[js.Any])
      
      inline def setPages$SaveButton(value: SaveButton): Self = StObject.set(x, "Pages$SaveButton", value.asInstanceOf[js.Any])
      
      inline def setPages$SaveChangesClientAction(value: SaveChangesClientAction): Self = StObject.set(x, "Pages$SaveChangesClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$ScrollContainer(value: ScrollContainer): Self = StObject.set(x, "Pages$ScrollContainer", value.asInstanceOf[js.Any])
      
      inline def setPages$ScrollContainerRegion(value: ScrollContainerRegion): Self = StObject.set(x, "Pages$ScrollContainerRegion", value.asInstanceOf[js.Any])
      
      inline def setPages$SearchBar(value: SearchBar): Self = StObject.set(x, "Pages$SearchBar", value.asInstanceOf[js.Any])
      
      inline def setPages$SelectButton(value: SelectButton): Self = StObject.set(x, "Pages$SelectButton", value.asInstanceOf[js.Any])
      
      inline def setPages$SelectPageTemplateType(value: SelectPageTemplateType): Self = StObject.set(x, "Pages$SelectPageTemplateType", value.asInstanceOf[js.Any])
      
      inline def setPages$SelectorDatabaseSource(value: SelectorDatabaseSource): Self = StObject.set(x, "Pages$SelectorDatabaseSource", value.asInstanceOf[js.Any])
      
      inline def setPages$SelectorMicroflowSource(value: SelectorMicroflowSource): Self = StObject.set(x, "Pages$SelectorMicroflowSource", value.asInstanceOf[js.Any])
      
      inline def setPages$SelectorXPathSource(value: SelectorXPathSource): Self = StObject.set(x, "Pages$SelectorXPathSource", value.asInstanceOf[js.Any])
      
      inline def setPages$SetTaskOutcomeClientAction(value: SetTaskOutcomeClientAction): Self = StObject.set(x, "Pages$SetTaskOutcomeClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$SidebarToggleButton(value: SidebarToggleButton): Self = StObject.set(x, "Pages$SidebarToggleButton", value.asInstanceOf[js.Any])
      
      inline def setPages$SignOutClientAction(value: SignOutClientAction): Self = StObject.set(x, "Pages$SignOutClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$SimpleMenuBar(value: SimpleMenuBar): Self = StObject.set(x, "Pages$SimpleMenuBar", value.asInstanceOf[js.Any])
      
      inline def setPages$SnippetCall(value: SnippetCall): Self = StObject.set(x, "Pages$SnippetCall", value.asInstanceOf[js.Any])
      
      inline def setPages$SnippetCallWidget(value: SnippetCallWidget): Self = StObject.set(x, "Pages$SnippetCallWidget", value.asInstanceOf[js.Any])
      
      inline def setPages$StaticImageViewer(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.StaticImageViewer): Self = StObject.set(x, "Pages$StaticImageViewer", value.asInstanceOf[js.Any])
      
      inline def setPages$StaticOrDynamicString(value: StaticOrDynamicString): Self = StObject.set(x, "Pages$StaticOrDynamicString", value.asInstanceOf[js.Any])
      
      inline def setPages$SyncButton(value: SyncButton): Self = StObject.set(x, "Pages$SyncButton", value.asInstanceOf[js.Any])
      
      inline def setPages$SyncClientAction(value: SyncClientAction): Self = StObject.set(x, "Pages$SyncClientAction", value.asInstanceOf[js.Any])
      
      inline def setPages$TabContainer(value: TabContainer): Self = StObject.set(x, "Pages$TabContainer", value.asInstanceOf[js.Any])
      
      inline def setPages$TabPage(value: TabPage): Self = StObject.set(x, "Pages$TabPage", value.asInstanceOf[js.Any])
      
      inline def setPages$Table(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Table): Self = StObject.set(x, "Pages$Table", value.asInstanceOf[js.Any])
      
      inline def setPages$TableCell(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TableCell): Self = StObject.set(x, "Pages$TableCell", value.asInstanceOf[js.Any])
      
      inline def setPages$TableColumn(value: TableColumn): Self = StObject.set(x, "Pages$TableColumn", value.asInstanceOf[js.Any])
      
      inline def setPages$TableRow(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TableRow): Self = StObject.set(x, "Pages$TableRow", value.asInstanceOf[js.Any])
      
      inline def setPages$TemplateGrid(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TemplateGrid): Self = StObject.set(x, "Pages$TemplateGrid", value.asInstanceOf[js.Any])
      
      inline def setPages$TemplateGridContents(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.TemplateGridContents): Self = StObject.set(x, "Pages$TemplateGridContents", value.asInstanceOf[js.Any])
      
      inline def setPages$TemplatePlaceholder(value: TemplatePlaceholder): Self = StObject.set(x, "Pages$TemplatePlaceholder", value.asInstanceOf[js.Any])
      
      inline def setPages$TextArea(value: TextArea): Self = StObject.set(x, "Pages$TextArea", value.asInstanceOf[js.Any])
      
      inline def setPages$TextBox(value: TextBox): Self = StObject.set(x, "Pages$TextBox", value.asInstanceOf[js.Any])
      
      inline def setPages$Title(value: typingsJapgolly.mendixmodelsdk.srcGenPagesMod.pages.Title): Self = StObject.set(x, "Pages$Title", value.asInstanceOf[js.Any])
      
      inline def setPages$UserTaskTemplateType(value: UserTaskTemplateType): Self = StObject.set(x, "Pages$UserTaskTemplateType", value.asInstanceOf[js.Any])
      
      inline def setPages$ValidationMessage(value: ValidationMessage): Self = StObject.set(x, "Pages$ValidationMessage", value.asInstanceOf[js.Any])
      
      inline def setPages$VerticalFlow(value: VerticalFlow): Self = StObject.set(x, "Pages$VerticalFlow", value.asInstanceOf[js.Any])
      
      inline def setPages$VerticalSplitPane(value: VerticalSplitPane): Self = StObject.set(x, "Pages$VerticalSplitPane", value.asInstanceOf[js.Any])
      
      inline def setPages$WebLayoutContent(value: WebLayoutContent): Self = StObject.set(x, "Pages$WebLayoutContent", value.asInstanceOf[js.Any])
      
      inline def setPages$WidgetValidation(value: WidgetValidation): Self = StObject.set(x, "Pages$WidgetValidation", value.asInstanceOf[js.Any])
      
      inline def setPages$WorkflowOverviewTemplateType(value: WorkflowOverviewTemplateType): Self = StObject.set(x, "Pages$WorkflowOverviewTemplateType", value.asInstanceOf[js.Any])
      
      inline def setProjects$OneTimeConversionMarker(value: OneTimeConversionMarker): Self = StObject.set(x, "Projects$OneTimeConversionMarker", value.asInstanceOf[js.Any])
      
      inline def setQueues$BasicQueueConfig(value: BasicQueueConfig): Self = StObject.set(x, "Queues$BasicQueueConfig", value.asInstanceOf[js.Any])
      
      inline def setQueues$QueueExponentialRetry(value: QueueExponentialRetry): Self = StObject.set(x, "Queues$QueueExponentialRetry", value.asInstanceOf[js.Any])
      
      inline def setQueues$QueueFixedRetry(value: QueueFixedRetry): Self = StObject.set(x, "Queues$QueueFixedRetry", value.asInstanceOf[js.Any])
      
      inline def setQueues$QueueSettings(value: QueueSettings): Self = StObject.set(x, "Queues$QueueSettings", value.asInstanceOf[js.Any])
      
      inline def setReports$BasicReport(value: BasicReport): Self = StObject.set(x, "Reports$BasicReport", value.asInstanceOf[js.Any])
      
      inline def setReports$BasicReportAggregate(value: BasicReportAggregate): Self = StObject.set(x, "Reports$BasicReportAggregate", value.asInstanceOf[js.Any])
      
      inline def setReports$BasicReportColumn(value: BasicReportColumn): Self = StObject.set(x, "Reports$BasicReportColumn", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportButton(value: ReportButton): Self = StObject.set(x, "Reports$ReportButton", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportChart(value: ReportChart): Self = StObject.set(x, "Reports$ReportChart", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportChartSeries(value: ReportChartSeries): Self = StObject.set(x, "Reports$ReportChartSeries", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportDateRangeField(value: ReportDateRangeField): Self = StObject.set(x, "Reports$ReportDateRangeField", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportDateRangeSelector(value: ReportDateRangeSelector): Self = StObject.set(x, "Reports$ReportDateRangeSelector", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportDropDown(value: ReportDropDown): Self = StObject.set(x, "Reports$ReportDropDown", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportPane(value: ReportPane): Self = StObject.set(x, "Reports$ReportPane", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportZoomInfo(value: ReportZoomInfo): Self = StObject.set(x, "Reports$ReportZoomInfo", value.asInstanceOf[js.Any])
      
      inline def setReports$ReportZoomMapping(value: ReportZoomMapping): Self = StObject.set(x, "Reports$ReportZoomMapping", value.asInstanceOf[js.Any])
      
      inline def setRest$CallMicroflowToChange(value: CallMicroflowToChange): Self = StObject.set(x, "Rest$CallMicroflowToChange", value.asInstanceOf[js.Any])
      
      inline def setRest$CallMicroflowToRead(value: CallMicroflowToRead): Self = StObject.set(x, "Rest$CallMicroflowToRead", value.asInstanceOf[js.Any])
      
      inline def setRest$ChangeNotSupported(value: ChangeNotSupported): Self = StObject.set(x, "Rest$ChangeNotSupported", value.asInstanceOf[js.Any])
      
      inline def setRest$ChangeSource(value: ChangeSource): Self = StObject.set(x, "Rest$ChangeSource", value.asInstanceOf[js.Any])
      
      inline def setRest$CorsConfiguration(value: CorsConfiguration): Self = StObject.set(x, "Rest$CorsConfiguration", value.asInstanceOf[js.Any])
      
      inline def setRest$MetadataReference(value: MetadataReference): Self = StObject.set(x, "Rest$MetadataReference", value.asInstanceOf[js.Any])
      
      inline def setRest$ODataKey(value: ODataKey): Self = StObject.set(x, "Rest$ODataKey", value.asInstanceOf[js.Any])
      
      inline def setRest$ODataKeyPart(value: ODataKeyPart): Self = StObject.set(x, "Rest$ODataKeyPart", value.asInstanceOf[js.Any])
      
      inline def setRest$ODataMappedValue(value: ODataMappedValue): Self = StObject.set(x, "Rest$ODataMappedValue", value.asInstanceOf[js.Any])
      
      inline def setRest$ODataRemoteAssociationSource(value: ODataRemoteAssociationSource): Self = StObject.set(x, "Rest$ODataRemoteAssociationSource", value.asInstanceOf[js.Any])
      
      inline def setRest$ODataRemoteEntitySource(value: ODataRemoteEntitySource): Self = StObject.set(x, "Rest$ODataRemoteEntitySource", value.asInstanceOf[js.Any])
      
      inline def setRest$PublishedODataContract(value: PublishedODataContract): Self = StObject.set(x, "Rest$PublishedODataContract", value.asInstanceOf[js.Any])
      
      inline def setRest$PublishedRestResource(value: PublishedRestResource): Self = StObject.set(x, "Rest$PublishedRestResource", value.asInstanceOf[js.Any])
      
      inline def setRest$PublishedRestServiceOperation(value: PublishedRestServiceOperation): Self = StObject.set(x, "Rest$PublishedRestServiceOperation", value.asInstanceOf[js.Any])
      
      inline def setRest$PublishedRestServiceResource(value: PublishedRestServiceResource): Self = StObject.set(x, "Rest$PublishedRestServiceResource", value.asInstanceOf[js.Any])
      
      inline def setRest$QueryOptions(value: QueryOptions): Self = StObject.set(x, "Rest$QueryOptions", value.asInstanceOf[js.Any])
      
      inline def setRest$ReadSource(value: ReadSource): Self = StObject.set(x, "Rest$ReadSource", value.asInstanceOf[js.Any])
      
      inline def setRest$RestOperationParameter(value: RestOperationParameter): Self = StObject.set(x, "Rest$RestOperationParameter", value.asInstanceOf[js.Any])
      
      inline def setRest$ServiceFeed(value: ServiceFeed): Self = StObject.set(x, "Rest$ServiceFeed", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$DaySchedule(value: DaySchedule): Self = StObject.set(x, "ScheduledEvents$DaySchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$HourSchedule(value: HourSchedule): Self = StObject.set(x, "ScheduledEvents$HourSchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$MinuteSchedule(value: MinuteSchedule): Self = StObject.set(x, "ScheduledEvents$MinuteSchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$MonthDateSchedule(value: MonthDateSchedule): Self = StObject.set(x, "ScheduledEvents$MonthDateSchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$MonthWeekdaySchedule(value: MonthWeekdaySchedule): Self = StObject.set(x, "ScheduledEvents$MonthWeekdaySchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$WeekSchedule(value: WeekSchedule): Self = StObject.set(x, "ScheduledEvents$WeekSchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$YearDateSchedule(value: YearDateSchedule): Self = StObject.set(x, "ScheduledEvents$YearDateSchedule", value.asInstanceOf[js.Any])
      
      inline def setScheduledEvents$YearWeekdaySchedule(value: YearWeekdaySchedule): Self = StObject.set(x, "ScheduledEvents$YearWeekdaySchedule", value.asInstanceOf[js.Any])
      
      inline def setSecurity$DemoUser(value: DemoUser): Self = StObject.set(x, "Security$DemoUser", value.asInstanceOf[js.Any])
      
      inline def setSecurity$FileDocumentAccessRuleContainer(value: FileDocumentAccessRuleContainer): Self = StObject.set(x, "Security$FileDocumentAccessRuleContainer", value.asInstanceOf[js.Any])
      
      inline def setSecurity$ImageAccessRuleContainer(value: ImageAccessRuleContainer): Self = StObject.set(x, "Security$ImageAccessRuleContainer", value.asInstanceOf[js.Any])
      
      inline def setSecurity$ModuleRole(value: ModuleRole): Self = StObject.set(x, "Security$ModuleRole", value.asInstanceOf[js.Any])
      
      inline def setSecurity$PasswordPolicySettings(value: PasswordPolicySettings): Self = StObject.set(x, "Security$PasswordPolicySettings", value.asInstanceOf[js.Any])
      
      inline def setSecurity$UserRole(value: UserRole): Self = StObject.set(x, "Security$UserRole", value.asInstanceOf[js.Any])
      
      inline def setSettings$ActionActivityDefaultColor(value: ActionActivityDefaultColor): Self = StObject.set(x, "Settings$ActionActivityDefaultColor", value.asInstanceOf[js.Any])
      
      inline def setSettings$Certificate(value: Certificate): Self = StObject.set(x, "Settings$Certificate", value.asInstanceOf[js.Any])
      
      inline def setSettings$CertificateSettings(value: CertificateSettings): Self = StObject.set(x, "Settings$CertificateSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$Configuration(value: Configuration): Self = StObject.set(x, "Settings$Configuration", value.asInstanceOf[js.Any])
      
      inline def setSettings$ConfigurationSettings(value: ConfigurationSettings): Self = StObject.set(x, "Settings$ConfigurationSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$ConstantValue(value: ConstantValue): Self = StObject.set(x, "Settings$ConstantValue", value.asInstanceOf[js.Any])
      
      inline def setSettings$CustomSetting(value: CustomSetting): Self = StObject.set(x, "Settings$CustomSetting", value.asInstanceOf[js.Any])
      
      inline def setSettings$IntegrationProjectSettingsPart(value: IntegrationProjectSettingsPart): Self = StObject.set(x, "Settings$IntegrationProjectSettingsPart", value.asInstanceOf[js.Any])
      
      inline def setSettings$JarDeploymentSettings(value: JarDeploymentSettings): Self = StObject.set(x, "Settings$JarDeploymentSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$JavaActionsSettings(value: JavaActionsSettings): Self = StObject.set(x, "Settings$JavaActionsSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$Language(value: Language): Self = StObject.set(x, "Settings$Language", value.asInstanceOf[js.Any])
      
      inline def setSettings$LanguageSettings(value: LanguageSettings): Self = StObject.set(x, "Settings$LanguageSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$ModelerSettings(value: ModelerSettings): Self = StObject.set(x, "Settings$ModelerSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$ProtectedModuleJarLocation(value: ProtectedModuleJarLocation): Self = StObject.set(x, "Settings$ProtectedModuleJarLocation", value.asInstanceOf[js.Any])
      
      inline def setSettings$RuntimeSettings(value: RuntimeSettings): Self = StObject.set(x, "Settings$RuntimeSettings", value.asInstanceOf[js.Any])
      
      inline def setSettings$ThemeModuleEntry(value: ThemeModuleEntry): Self = StObject.set(x, "Settings$ThemeModuleEntry", value.asInstanceOf[js.Any])
      
      inline def setSettings$UserLibJarLocation(value: UserLibJarLocation): Self = StObject.set(x, "Settings$UserLibJarLocation", value.asInstanceOf[js.Any])
      
      inline def setSettings$WebUIProjectSettingsPart(value: WebUIProjectSettingsPart): Self = StObject.set(x, "Settings$WebUIProjectSettingsPart", value.asInstanceOf[js.Any])
      
      inline def setSettings$WorkflowsProjectSettingsPart(value: WorkflowsProjectSettingsPart): Self = StObject.set(x, "Settings$WorkflowsProjectSettingsPart", value.asInstanceOf[js.Any])
      
      inline def setTexts$SystemText(value: SystemText): Self = StObject.set(x, "Texts$SystemText", value.asInstanceOf[js.Any])
      
      inline def setTexts$Text(value: Text): Self = StObject.set(x, "Texts$Text", value.asInstanceOf[js.Any])
      
      inline def setTexts$Translation(value: Translation): Self = StObject.set(x, "Texts$Translation", value.asInstanceOf[js.Any])
      
      inline def setWebServices$DataAssociation(value: DataAssociation): Self = StObject.set(x, "WebServices$DataAssociation", value.asInstanceOf[js.Any])
      
      inline def setWebServices$DataAttribute(value: DataAttribute): Self = StObject.set(x, "WebServices$DataAttribute", value.asInstanceOf[js.Any])
      
      inline def setWebServices$DataEntity(value: DataEntity): Self = StObject.set(x, "WebServices$DataEntity", value.asInstanceOf[js.Any])
      
      inline def setWebServices$OperationInfo(value: OperationInfo): Self = StObject.set(x, "WebServices$OperationInfo", value.asInstanceOf[js.Any])
      
      inline def setWebServices$PartEncoding(value: PartEncoding): Self = StObject.set(x, "WebServices$PartEncoding", value.asInstanceOf[js.Any])
      
      inline def setWebServices$PublishedOperation(value: PublishedOperation): Self = StObject.set(x, "WebServices$PublishedOperation", value.asInstanceOf[js.Any])
      
      inline def setWebServices$PublishedParameter(value: PublishedParameter): Self = StObject.set(x, "WebServices$PublishedParameter", value.asInstanceOf[js.Any])
      
      inline def setWebServices$RpcMessagePartElement(value: RpcMessagePartElement): Self = StObject.set(x, "WebServices$RpcMessagePartElement", value.asInstanceOf[js.Any])
      
      inline def setWebServices$RpcOperationElement(value: RpcOperationElement): Self = StObject.set(x, "WebServices$RpcOperationElement", value.asInstanceOf[js.Any])
      
      inline def setWebServices$ServiceInfo(value: ServiceInfo): Self = StObject.set(x, "WebServices$ServiceInfo", value.asInstanceOf[js.Any])
      
      inline def setWebServices$SystemIdDataAttribute(value: SystemIdDataAttribute): Self = StObject.set(x, "WebServices$SystemIdDataAttribute", value.asInstanceOf[js.Any])
      
      inline def setWebServices$VersionedService(value: VersionedService): Self = StObject.set(x, "WebServices$VersionedService", value.asInstanceOf[js.Any])
      
      inline def setWebServices$WsdlDescription(value: WsdlDescription): Self = StObject.set(x, "WebServices$WsdlDescription", value.asInstanceOf[js.Any])
      
      inline def setWebServices$WsdlEntry(value: WsdlEntry): Self = StObject.set(x, "WebServices$WsdlEntry", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$Annotation(value: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.Annotation): Self = StObject.set(x, "Workflows$Annotation", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$BooleanConditionOutcome(value: BooleanConditionOutcome): Self = StObject.set(x, "Workflows$BooleanConditionOutcome", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$CallMicroflowTask(value: CallMicroflowTask): Self = StObject.set(x, "Workflows$CallMicroflowTask", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$CallWorkflowActivity(value: CallWorkflowActivity): Self = StObject.set(x, "Workflows$CallWorkflowActivity", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$EmptyUserSource(value: EmptyUserSource): Self = StObject.set(x, "Workflows$EmptyUserSource", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$EndWorkflowActivity(value: EndWorkflowActivity): Self = StObject.set(x, "Workflows$EndWorkflowActivity", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$EnumerationValueConditionOutcome(value: EnumerationValueConditionOutcome): Self = StObject.set(x, "Workflows$EnumerationValueConditionOutcome", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$ExclusiveSplitActivity(value: ExclusiveSplitActivity): Self = StObject.set(x, "Workflows$ExclusiveSplitActivity", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$Flow(value: Flow): Self = StObject.set(x, "Workflows$Flow", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$JumpToActivity(value: JumpToActivity): Self = StObject.set(x, "Workflows$JumpToActivity", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$MicroflowBasedEvent(value: MicroflowBasedEvent): Self = StObject.set(x, "Workflows$MicroflowBasedEvent", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$MicroflowBasedUserSource(value: MicroflowBasedUserSource): Self = StObject.set(x, "Workflows$MicroflowBasedUserSource", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$MicroflowCallParameterMapping(value: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.MicroflowCallParameterMapping): Self = StObject.set(x, "Workflows$MicroflowCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$MicroflowEventHandler(value: MicroflowEventHandler): Self = StObject.set(x, "Workflows$MicroflowEventHandler", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$NoEvent(value: NoEvent): Self = StObject.set(x, "Workflows$NoEvent", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$PageParameterMapping(value: typingsJapgolly.mendixmodelsdk.srcGenWorkflowsMod.workflows.PageParameterMapping): Self = StObject.set(x, "Workflows$PageParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$PageReference(value: PageReference): Self = StObject.set(x, "Workflows$PageReference", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$ParallelSplitActivity(value: ParallelSplitActivity): Self = StObject.set(x, "Workflows$ParallelSplitActivity", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$ParallelSplitOutcome(value: ParallelSplitOutcome): Self = StObject.set(x, "Workflows$ParallelSplitOutcome", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$Parameter(value: Parameter): Self = StObject.set(x, "Workflows$Parameter", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$UserTask(value: UserTask): Self = StObject.set(x, "Workflows$UserTask", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$UserTaskOutcome(value: UserTaskOutcome): Self = StObject.set(x, "Workflows$UserTaskOutcome", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$VoidConditionOutcome(value: VoidConditionOutcome): Self = StObject.set(x, "Workflows$VoidConditionOutcome", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$WorkflowCallParameterMapping(value: WorkflowCallParameterMapping): Self = StObject.set(x, "Workflows$WorkflowCallParameterMapping", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$WorkflowType(value: WorkflowType): Self = StObject.set(x, "Workflows$WorkflowType", value.asInstanceOf[js.Any])
      
      inline def setWorkflows$XPathBasedUserSource(value: XPathBasedUserSource): Self = StObject.set(x, "Workflows$XPathBasedUserSource", value.asInstanceOf[js.Any])
      
      inline def setXmlSchemas$XmlElement(value: XmlElement): Self = StObject.set(x, "XmlSchemas$XmlElement", value.asInstanceOf[js.Any])
      
      inline def setXmlSchemas$XmlSchemaEntry(value: XmlSchemaEntry): Self = StObject.set(x, "XmlSchemas$XmlSchemaEntry", value.asInstanceOf[js.Any])
    }
  }
  
  @js.native
  trait IBaseModel
    extends StObject
       with IAbstractModel {
    
    def allBuildingBlocks(): js.Array[IBuildingBlock] = js.native
    
    def allCodeActions(): js.Array[ICodeAction] = js.native
    
    def allConstants(): js.Array[IConstant] = js.native
    
    def allConsumedAppServices(): js.Array[IConsumedAppService] = js.native
    
    def allConsumedBusinessEventServices(): js.Array[IConsumedBusinessEventService] = js.native
    
    def allConsumedKafkaServices(): js.Array[IConsumedKafkaService] = js.native
    
    def allConsumedODataServices(): js.Array[IConsumedODataService] = js.native
    
    def allDataSets(): js.Array[IDataSet] = js.native
    
    def allDocumentTemplates(): js.Array[IDocumentTemplate] = js.native
    
    def allDocuments(): js.Array[IDocument] = js.native
    
    def allDomainModels(): js.Array[IDomainModel] = js.native
    
    def allEnumerations(): js.Array[IEnumeration] = js.native
    
    def allExportMappings(): js.Array[IExportMapping] = js.native
    
    def allFolderBases(): js.Array[IFolderBase] = js.native
    
    def allFolders(): js.Array[IFolder] = js.native
    
    def allFormBases(): js.Array[IFormBase] = js.native
    
    def allImageCollections(): js.Array[IImageCollection] = js.native
    
    def allImportMappings(): js.Array[IImportMapping] = js.native
    
    def allImportedWebServices(): js.Array[IImportedWebService] = js.native
    
    def allInteractiveRests(): js.Array[IInteractiveRest] = js.native
    
    def allJavaActions(): js.Array[IJavaAction] = js.native
    
    def allJavaScriptActions(): js.Array[IJavaScriptAction] = js.native
    
    def allJsonStructures(): js.Array[IJsonStructure] = js.native
    
    def allLayouts(): js.Array[ILayout] = js.native
    
    def allMLMappingDocuments(): js.Array[IMLMappingDocument] = js.native
    
    def allMappingDocuments(): js.Array[IMappingDocument] = js.native
    
    def allMenuDocuments(): js.Array[IMenuDocument] = js.native
    
    def allMessageDefinitionCollections(): js.Array[IMessageDefinitionCollection] = js.native
    
    def allMicroflowBases(): js.Array[IMicroflowBase] = js.native
    
    def allMicroflows(): js.Array[IMicroflow] = js.native
    
    def allModuleDocuments(): js.Array[IModuleDocument] = js.native
    
    def allModuleSecurities(): js.Array[IModuleSecurity] = js.native
    
    def allModuleSettings(): js.Array[IModuleSettings] = js.native
    
    def allModules(): js.Array[IModule] = js.native
    
    def allMxSchemas(): js.Array[IMxSchema] = js.native
    
    def allNanoflows(): js.Array[INanoflow] = js.native
    
    def allNativeLayouts(): js.Array[INativeLayout] = js.native
    
    def allNativePages(): js.Array[INativePage] = js.native
    
    def allNavigationDocuments(): js.Array[INavigationDocument] = js.native
    
    def allPageTemplates(): js.Array[IPageTemplate] = js.native
    
    def allPages(): js.Array[IPage] = js.native
    
    def allProjectConversions(): js.Array[IProjectConversion] = js.native
    
    def allProjectDocuments(): js.Array[IProjectDocument] = js.native
    
    def allProjectSecurities(): js.Array[IProjectSecurity] = js.native
    
    def allProjectSettings(): js.Array[IProjectSettings] = js.native
    
    def allProjects(): js.Array[IProject] = js.native
    
    def allPublishedAppServices(): js.Array[IPublishedAppService] = js.native
    
    def allPublishedBusinessEventServices(): js.Array[IPublishedBusinessEventService] = js.native
    
    def allPublishedKafkaServices(): js.Array[IPublishedKafkaService] = js.native
    
    def allPublishedODataServices(): js.Array[IPublishedODataService] = js.native
    
    def allPublishedRestServices(): js.Array[IPublishedRestService] = js.native
    
    def allPublishedServiceBases(): js.Array[IPublishedServiceBase] = js.native
    
    def allPublishedWebServices(): js.Array[IPublishedWebService] = js.native
    
    def allQueues(): js.Array[IQueue] = js.native
    
    def allRegularExpressions(): js.Array[IRegularExpression] = js.native
    
    def allRemoteEntitySourceDocuments(): js.Array[IRemoteEntitySourceDocument] = js.native
    
    def allRules(): js.Array[IRule] = js.native
    
    def allScheduledEvents(): js.Array[IScheduledEvent] = js.native
    
    def allServerSideMicroflows(): js.Array[IServerSideMicroflow] = js.native
    
    def allSnippets(): js.Array[ISnippet] = js.native
    
    def allSystemTextCollections(): js.Array[ISystemTextCollection] = js.native
    
    def allTemplateFormBases(): js.Array[ITemplateFormBase] = js.native
    
    def allWorkflows(): js.Array[IWorkflow] = js.native
    
    def allXmlSchemas(): js.Array[IXmlSchema] = js.native
    
    /**
      * Creates and returns a new element in the SDK and on the server.
      * After creation, assign or add this instance to a property that accepts this kind of elements.
      * @param typeName `structureTypeName` of the element type you want to create
      */
    def createElement[T /* <: /* keyof mendixmodelsdk.mendixmodelsdk/src/gen/base-model.ConcreteModelElements */ /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 640, starting with typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$AppServiceAction, typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$AppServiceActionParameter, typingsJapgolly.mendixmodelsdk.mendixmodelsdkStrings.AppServices$Msd */ Any */](typeName: T): /* import warning: importer.ImportType#apply Failed type conversion: mendixmodelsdk.mendixmodelsdk/src/gen/base-model.ConcreteModelElements[T] */ js.Any = js.native
    
    def findAppServiceActionByQualifiedName(qname: String): IAppServiceAction | Null = js.native
    
    def findAppServiceActionParameterByQualifiedName(qname: String): IAppServiceActionParameter | Null = js.native
    
    def findAssociationBaseByQualifiedName(qname: String): IAssociationBase | Null = js.native
    
    def findAttributeByQualifiedName(qname: String): IAttribute | Null = js.native
    
    def findConstantByQualifiedName(qname: String): IConstant | Null = js.native
    
    def findConsumedKafkaServiceByQualifiedName(qname: String): IConsumedKafkaService | Null = js.native
    
    def findConsumedODataServiceByQualifiedName(qname: String): IConsumedODataService | Null = js.native
    
    def findDataSetByQualifiedName(qname: String): IDataSet | Null = js.native
    
    def findDataSetParameterByQualifiedName(qname: String): IDataSetParameter | Null = js.native
    
    def findDocumentTemplateByQualifiedName(qname: String): IDocumentTemplate | Null = js.native
    
    def findEntityByQualifiedName(qname: String): IEntity | Null = js.native
    
    def findEnumerationByQualifiedName(qname: String): IEnumeration | Null = js.native
    
    def findEnumerationValueByQualifiedName(qname: String): IEnumerationValue | Null = js.native
    
    def findExportMappingByQualifiedName(qname: String): IExportMapping | Null = js.native
    
    def findImageByQualifiedName(qname: String): IImage | Null = js.native
    
    def findImportMappingByQualifiedName(qname: String): IImportMapping | Null = js.native
    
    def findImportedWebServiceByQualifiedName(qname: String): IImportedWebService | Null = js.native
    
    def findJavaActionByQualifiedName(qname: String): IJavaAction | Null = js.native
    
    def findJavaActionParameterByQualifiedName(qname: String): IJavaActionParameter | Null = js.native
    
    def findJavaScriptActionByQualifiedName(qname: String): IJavaScriptAction | Null = js.native
    
    def findJavaScriptActionParameterByQualifiedName(qname: String): IJavaScriptActionParameter | Null = js.native
    
    def findJsonStructureByQualifiedName(qname: String): IJsonStructure | Null = js.native
    
    def findLayoutByQualifiedName(qname: String): ILayout | Null = js.native
    
    def findLayoutParameterByQualifiedName(qname: String): ILayoutParameter | Null = js.native
    
    def findMLMappingDocumentByQualifiedName(qname: String): IMLMappingDocument | Null = js.native
    
    def findMenuDocumentByQualifiedName(qname: String): IMenuDocument | Null = js.native
    
    def findMessageDefinitionByQualifiedName(qname: String): IMessageDefinition | Null = js.native
    
    def findMicroflowByQualifiedName(qname: String): IMicroflow | Null = js.native
    
    def findMicroflowParameterByQualifiedName(qname: String): IMicroflowParameter | Null = js.native
    
    def findModuleRoleByQualifiedName(qname: String): IModuleRole | Null = js.native
    
    def findNanoflowByQualifiedName(qname: String): INanoflow | Null = js.native
    
    def findNanoflowParameterByQualifiedName(qname: String): INanoflowParameter | Null = js.native
    
    def findNativeLayoutByQualifiedName(qname: String): INativeLayout | Null = js.native
    
    def findNativePageByQualifiedName(qname: String): INativePage | Null = js.native
    
    def findNavigationProfileByQualifiedName(qname: String): INavigationProfile | Null = js.native
    
    def findPageByQualifiedName(qname: String): IPage | Null = js.native
    
    def findPageParameterByQualifiedName(qname: String): IPageParameter | Null = js.native
    
    def findParameterByQualifiedName(qname: String): IParameter | Null = js.native
    
    def findQueueByQualifiedName(qname: String): IQueue | Null = js.native
    
    def findRegularExpressionByQualifiedName(qname: String): IRegularExpression | Null = js.native
    
    def findRemoteEntitySourceDocumentByQualifiedName(qname: String): IRemoteEntitySourceDocument | Null = js.native
    
    def findRuleByQualifiedName(qname: String): IRule | Null = js.native
    
    def findRuleParameterByQualifiedName(qname: String): IRuleParameter | Null = js.native
    
    def findSnippetByQualifiedName(qname: String): ISnippet | Null = js.native
    
    def findUserRoleByQualifiedName(qname: String): IUserRole | Null = js.native
    
    def findUserTaskOutcomeByQualifiedName(qname: String): IUserTaskOutcome | Null = js.native
    
    def findWorkflowByQualifiedName(qname: String): IWorkflow | Null = js.native
    
    def findXmlSchemaByQualifiedName(qname: String): IXmlSchema | Null = js.native
  }
  
  @js.native
  trait IModel
    extends StObject
       with IBaseModel {
    
    /**
      * Given a qualified name, returns a Module.
      */
    def findModuleByQualifiedName(qualifiedName: String): IModule | Null = js.native
    
    /**
      * The actual contents of the model.
      */
    var root: IProject = js.native
  }
}
