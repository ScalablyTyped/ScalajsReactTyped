package typingsJapgolly.microsoftGraph.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait Alert
  extends StObject
     with Entity {
  
  // Name or alias of the activity group (attacker) this alert is attributed to.
  var activityGroupName: js.UndefOr[NullableOption[String]] = js.undefined
  
  var alertDetections: js.UndefOr[NullableOption[js.Array[AlertDetection]]] = js.undefined
  
  // Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
  var assignedTo: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Azure subscription ID, present if this alert is related to an Azure resource.
  var azureSubscriptionId: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Azure Active Directory tenant ID. Required.
  var azureTenantId: js.UndefOr[String] = js.undefined
  
  // Category of the alert (for example, credentialTheft, ransomware, etc.).
  var category: js.UndefOr[NullableOption[String]] = js.undefined
  
  /**
    * Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and
    * is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
    */
  var closedDateTime: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Security-related stateful information generated by the provider about the cloud application/s related to this alert.
  var cloudAppStates: js.UndefOr[NullableOption[js.Array[CloudAppSecurityState]]] = js.undefined
  
  // Customer-provided comments on alert (for customer alert management) (supports update).
  var comments: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  // Confidence of the detection logic (percentage between 1-100).
  var confidence: js.UndefOr[NullableOption[Double]] = js.undefined
  
  /**
    * Time at which the alert was created by the alert provider. The Timestamp type represents date and time information
    * using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    * Required.
    */
  var createdDateTime: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Alert description.
  var description: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
  var detectionIds: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  /**
    * Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents
    * date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is
    * 2014-01-01T00:00:00Z. Required.
    */
  var eventDateTime: js.UndefOr[NullableOption[String]] = js.undefined
  
  /**
    * Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports
    * update)
    */
  var feedback: js.UndefOr[NullableOption[AlertFeedback]] = js.undefined
  
  // Security-related stateful information generated by the provider about the file(s) related to this alert.
  var fileStates: js.UndefOr[NullableOption[js.Array[FileSecurityState]]] = js.undefined
  
  var historyStates: js.UndefOr[NullableOption[js.Array[AlertHistoryState]]] = js.undefined
  
  // Security-related stateful information generated by the provider about the host(s) related to this alert.
  var hostStates: js.UndefOr[NullableOption[js.Array[HostSecurityState]]] = js.undefined
  
  // IDs of incidents related to current alert.
  var incidentIds: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  var investigationSecurityStates: js.UndefOr[NullableOption[js.Array[InvestigationSecurityState]]] = js.undefined
  
  var lastEventDateTime: js.UndefOr[NullableOption[String]] = js.undefined
  
  /**
    * Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO
    * 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    */
  var lastModifiedDateTime: js.UndefOr[NullableOption[String]] = js.undefined
  
  // Threat Intelligence pertaining to malware related to this alert.
  var malwareStates: js.UndefOr[NullableOption[js.Array[MalwareState]]] = js.undefined
  
  var messageSecurityStates: js.UndefOr[NullableOption[js.Array[MessageSecurityState]]] = js.undefined
  
  // Security-related stateful information generated by the provider about the network connection(s) related to this alert.
  var networkConnections: js.UndefOr[NullableOption[js.Array[NetworkConnection]]] = js.undefined
  
  // Security-related stateful information generated by the provider about the process or processes related to this alert.
  var processes: js.UndefOr[NullableOption[js.Array[Process]]] = js.undefined
  
  /**
    * Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA,
    * reimage host).
    */
  var recommendedActions: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  // Security-related stateful information generated by the provider about the registry keys related to this alert.
  var registryKeyStates: js.UndefOr[NullableOption[js.Array[RegistryKeyState]]] = js.undefined
  
  // Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
  var securityResources: js.UndefOr[NullableOption[js.Array[SecurityResource]]] = js.undefined
  
  // Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high. Required.
  var severity: js.UndefOr[AlertSeverity] = js.undefined
  
  /**
    * Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log
    * search, etc.
    */
  var sourceMaterials: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  /**
    * Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update).
    * Required.
    */
  var status: js.UndefOr[AlertStatus] = js.undefined
  
  /**
    * User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW',
    * etc.) (supports update).
    */
  var tags: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  // Alert title. Required.
  var title: js.UndefOr[NullableOption[String]] = js.undefined
  
  /**
    * Security-related information about the specific properties that triggered the alert (properties appearing in the
    * alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which
    * properties triggered the alert generation.
    */
  var triggers: js.UndefOr[NullableOption[js.Array[AlertTrigger]]] = js.undefined
  
  var uriClickSecurityStates: js.UndefOr[NullableOption[js.Array[UriClickSecurityState]]] = js.undefined
  
  // Security-related stateful information generated by the provider about the user accounts related to this alert.
  var userStates: js.UndefOr[NullableOption[js.Array[UserSecurityState]]] = js.undefined
  
  /**
    * Complex type containing details about the security product/service vendor, provider, and subprovider (for example,
    * vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
    */
  var vendorInformation: js.UndefOr[NullableOption[SecurityVendorInformation]] = js.undefined
  
  // Threat intelligence pertaining to one or more vulnerabilities related to this alert.
  var vulnerabilityStates: js.UndefOr[NullableOption[js.Array[VulnerabilityState]]] = js.undefined
}
object Alert {
  
  inline def apply(): Alert = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Alert]
  }
  
  extension [Self <: Alert](x: Self) {
    
    inline def setActivityGroupName(value: NullableOption[String]): Self = StObject.set(x, "activityGroupName", value.asInstanceOf[js.Any])
    
    inline def setActivityGroupNameNull: Self = StObject.set(x, "activityGroupName", null)
    
    inline def setActivityGroupNameUndefined: Self = StObject.set(x, "activityGroupName", js.undefined)
    
    inline def setAlertDetections(value: NullableOption[js.Array[AlertDetection]]): Self = StObject.set(x, "alertDetections", value.asInstanceOf[js.Any])
    
    inline def setAlertDetectionsNull: Self = StObject.set(x, "alertDetections", null)
    
    inline def setAlertDetectionsUndefined: Self = StObject.set(x, "alertDetections", js.undefined)
    
    inline def setAlertDetectionsVarargs(value: AlertDetection*): Self = StObject.set(x, "alertDetections", js.Array(value*))
    
    inline def setAssignedTo(value: NullableOption[String]): Self = StObject.set(x, "assignedTo", value.asInstanceOf[js.Any])
    
    inline def setAssignedToNull: Self = StObject.set(x, "assignedTo", null)
    
    inline def setAssignedToUndefined: Self = StObject.set(x, "assignedTo", js.undefined)
    
    inline def setAzureSubscriptionId(value: NullableOption[String]): Self = StObject.set(x, "azureSubscriptionId", value.asInstanceOf[js.Any])
    
    inline def setAzureSubscriptionIdNull: Self = StObject.set(x, "azureSubscriptionId", null)
    
    inline def setAzureSubscriptionIdUndefined: Self = StObject.set(x, "azureSubscriptionId", js.undefined)
    
    inline def setAzureTenantId(value: String): Self = StObject.set(x, "azureTenantId", value.asInstanceOf[js.Any])
    
    inline def setAzureTenantIdUndefined: Self = StObject.set(x, "azureTenantId", js.undefined)
    
    inline def setCategory(value: NullableOption[String]): Self = StObject.set(x, "category", value.asInstanceOf[js.Any])
    
    inline def setCategoryNull: Self = StObject.set(x, "category", null)
    
    inline def setCategoryUndefined: Self = StObject.set(x, "category", js.undefined)
    
    inline def setClosedDateTime(value: NullableOption[String]): Self = StObject.set(x, "closedDateTime", value.asInstanceOf[js.Any])
    
    inline def setClosedDateTimeNull: Self = StObject.set(x, "closedDateTime", null)
    
    inline def setClosedDateTimeUndefined: Self = StObject.set(x, "closedDateTime", js.undefined)
    
    inline def setCloudAppStates(value: NullableOption[js.Array[CloudAppSecurityState]]): Self = StObject.set(x, "cloudAppStates", value.asInstanceOf[js.Any])
    
    inline def setCloudAppStatesNull: Self = StObject.set(x, "cloudAppStates", null)
    
    inline def setCloudAppStatesUndefined: Self = StObject.set(x, "cloudAppStates", js.undefined)
    
    inline def setCloudAppStatesVarargs(value: CloudAppSecurityState*): Self = StObject.set(x, "cloudAppStates", js.Array(value*))
    
    inline def setComments(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "comments", value.asInstanceOf[js.Any])
    
    inline def setCommentsNull: Self = StObject.set(x, "comments", null)
    
    inline def setCommentsUndefined: Self = StObject.set(x, "comments", js.undefined)
    
    inline def setCommentsVarargs(value: String*): Self = StObject.set(x, "comments", js.Array(value*))
    
    inline def setConfidence(value: NullableOption[Double]): Self = StObject.set(x, "confidence", value.asInstanceOf[js.Any])
    
    inline def setConfidenceNull: Self = StObject.set(x, "confidence", null)
    
    inline def setConfidenceUndefined: Self = StObject.set(x, "confidence", js.undefined)
    
    inline def setCreatedDateTime(value: NullableOption[String]): Self = StObject.set(x, "createdDateTime", value.asInstanceOf[js.Any])
    
    inline def setCreatedDateTimeNull: Self = StObject.set(x, "createdDateTime", null)
    
    inline def setCreatedDateTimeUndefined: Self = StObject.set(x, "createdDateTime", js.undefined)
    
    inline def setDescription(value: NullableOption[String]): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    inline def setDescriptionNull: Self = StObject.set(x, "description", null)
    
    inline def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    inline def setDetectionIds(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "detectionIds", value.asInstanceOf[js.Any])
    
    inline def setDetectionIdsNull: Self = StObject.set(x, "detectionIds", null)
    
    inline def setDetectionIdsUndefined: Self = StObject.set(x, "detectionIds", js.undefined)
    
    inline def setDetectionIdsVarargs(value: String*): Self = StObject.set(x, "detectionIds", js.Array(value*))
    
    inline def setEventDateTime(value: NullableOption[String]): Self = StObject.set(x, "eventDateTime", value.asInstanceOf[js.Any])
    
    inline def setEventDateTimeNull: Self = StObject.set(x, "eventDateTime", null)
    
    inline def setEventDateTimeUndefined: Self = StObject.set(x, "eventDateTime", js.undefined)
    
    inline def setFeedback(value: NullableOption[AlertFeedback]): Self = StObject.set(x, "feedback", value.asInstanceOf[js.Any])
    
    inline def setFeedbackNull: Self = StObject.set(x, "feedback", null)
    
    inline def setFeedbackUndefined: Self = StObject.set(x, "feedback", js.undefined)
    
    inline def setFileStates(value: NullableOption[js.Array[FileSecurityState]]): Self = StObject.set(x, "fileStates", value.asInstanceOf[js.Any])
    
    inline def setFileStatesNull: Self = StObject.set(x, "fileStates", null)
    
    inline def setFileStatesUndefined: Self = StObject.set(x, "fileStates", js.undefined)
    
    inline def setFileStatesVarargs(value: FileSecurityState*): Self = StObject.set(x, "fileStates", js.Array(value*))
    
    inline def setHistoryStates(value: NullableOption[js.Array[AlertHistoryState]]): Self = StObject.set(x, "historyStates", value.asInstanceOf[js.Any])
    
    inline def setHistoryStatesNull: Self = StObject.set(x, "historyStates", null)
    
    inline def setHistoryStatesUndefined: Self = StObject.set(x, "historyStates", js.undefined)
    
    inline def setHistoryStatesVarargs(value: AlertHistoryState*): Self = StObject.set(x, "historyStates", js.Array(value*))
    
    inline def setHostStates(value: NullableOption[js.Array[HostSecurityState]]): Self = StObject.set(x, "hostStates", value.asInstanceOf[js.Any])
    
    inline def setHostStatesNull: Self = StObject.set(x, "hostStates", null)
    
    inline def setHostStatesUndefined: Self = StObject.set(x, "hostStates", js.undefined)
    
    inline def setHostStatesVarargs(value: HostSecurityState*): Self = StObject.set(x, "hostStates", js.Array(value*))
    
    inline def setIncidentIds(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "incidentIds", value.asInstanceOf[js.Any])
    
    inline def setIncidentIdsNull: Self = StObject.set(x, "incidentIds", null)
    
    inline def setIncidentIdsUndefined: Self = StObject.set(x, "incidentIds", js.undefined)
    
    inline def setIncidentIdsVarargs(value: String*): Self = StObject.set(x, "incidentIds", js.Array(value*))
    
    inline def setInvestigationSecurityStates(value: NullableOption[js.Array[InvestigationSecurityState]]): Self = StObject.set(x, "investigationSecurityStates", value.asInstanceOf[js.Any])
    
    inline def setInvestigationSecurityStatesNull: Self = StObject.set(x, "investigationSecurityStates", null)
    
    inline def setInvestigationSecurityStatesUndefined: Self = StObject.set(x, "investigationSecurityStates", js.undefined)
    
    inline def setInvestigationSecurityStatesVarargs(value: InvestigationSecurityState*): Self = StObject.set(x, "investigationSecurityStates", js.Array(value*))
    
    inline def setLastEventDateTime(value: NullableOption[String]): Self = StObject.set(x, "lastEventDateTime", value.asInstanceOf[js.Any])
    
    inline def setLastEventDateTimeNull: Self = StObject.set(x, "lastEventDateTime", null)
    
    inline def setLastEventDateTimeUndefined: Self = StObject.set(x, "lastEventDateTime", js.undefined)
    
    inline def setLastModifiedDateTime(value: NullableOption[String]): Self = StObject.set(x, "lastModifiedDateTime", value.asInstanceOf[js.Any])
    
    inline def setLastModifiedDateTimeNull: Self = StObject.set(x, "lastModifiedDateTime", null)
    
    inline def setLastModifiedDateTimeUndefined: Self = StObject.set(x, "lastModifiedDateTime", js.undefined)
    
    inline def setMalwareStates(value: NullableOption[js.Array[MalwareState]]): Self = StObject.set(x, "malwareStates", value.asInstanceOf[js.Any])
    
    inline def setMalwareStatesNull: Self = StObject.set(x, "malwareStates", null)
    
    inline def setMalwareStatesUndefined: Self = StObject.set(x, "malwareStates", js.undefined)
    
    inline def setMalwareStatesVarargs(value: MalwareState*): Self = StObject.set(x, "malwareStates", js.Array(value*))
    
    inline def setMessageSecurityStates(value: NullableOption[js.Array[MessageSecurityState]]): Self = StObject.set(x, "messageSecurityStates", value.asInstanceOf[js.Any])
    
    inline def setMessageSecurityStatesNull: Self = StObject.set(x, "messageSecurityStates", null)
    
    inline def setMessageSecurityStatesUndefined: Self = StObject.set(x, "messageSecurityStates", js.undefined)
    
    inline def setMessageSecurityStatesVarargs(value: MessageSecurityState*): Self = StObject.set(x, "messageSecurityStates", js.Array(value*))
    
    inline def setNetworkConnections(value: NullableOption[js.Array[NetworkConnection]]): Self = StObject.set(x, "networkConnections", value.asInstanceOf[js.Any])
    
    inline def setNetworkConnectionsNull: Self = StObject.set(x, "networkConnections", null)
    
    inline def setNetworkConnectionsUndefined: Self = StObject.set(x, "networkConnections", js.undefined)
    
    inline def setNetworkConnectionsVarargs(value: NetworkConnection*): Self = StObject.set(x, "networkConnections", js.Array(value*))
    
    inline def setProcesses(value: NullableOption[js.Array[Process]]): Self = StObject.set(x, "processes", value.asInstanceOf[js.Any])
    
    inline def setProcessesNull: Self = StObject.set(x, "processes", null)
    
    inline def setProcessesUndefined: Self = StObject.set(x, "processes", js.undefined)
    
    inline def setProcessesVarargs(value: Process*): Self = StObject.set(x, "processes", js.Array(value*))
    
    inline def setRecommendedActions(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "recommendedActions", value.asInstanceOf[js.Any])
    
    inline def setRecommendedActionsNull: Self = StObject.set(x, "recommendedActions", null)
    
    inline def setRecommendedActionsUndefined: Self = StObject.set(x, "recommendedActions", js.undefined)
    
    inline def setRecommendedActionsVarargs(value: String*): Self = StObject.set(x, "recommendedActions", js.Array(value*))
    
    inline def setRegistryKeyStates(value: NullableOption[js.Array[RegistryKeyState]]): Self = StObject.set(x, "registryKeyStates", value.asInstanceOf[js.Any])
    
    inline def setRegistryKeyStatesNull: Self = StObject.set(x, "registryKeyStates", null)
    
    inline def setRegistryKeyStatesUndefined: Self = StObject.set(x, "registryKeyStates", js.undefined)
    
    inline def setRegistryKeyStatesVarargs(value: RegistryKeyState*): Self = StObject.set(x, "registryKeyStates", js.Array(value*))
    
    inline def setSecurityResources(value: NullableOption[js.Array[SecurityResource]]): Self = StObject.set(x, "securityResources", value.asInstanceOf[js.Any])
    
    inline def setSecurityResourcesNull: Self = StObject.set(x, "securityResources", null)
    
    inline def setSecurityResourcesUndefined: Self = StObject.set(x, "securityResources", js.undefined)
    
    inline def setSecurityResourcesVarargs(value: SecurityResource*): Self = StObject.set(x, "securityResources", js.Array(value*))
    
    inline def setSeverity(value: AlertSeverity): Self = StObject.set(x, "severity", value.asInstanceOf[js.Any])
    
    inline def setSeverityUndefined: Self = StObject.set(x, "severity", js.undefined)
    
    inline def setSourceMaterials(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "sourceMaterials", value.asInstanceOf[js.Any])
    
    inline def setSourceMaterialsNull: Self = StObject.set(x, "sourceMaterials", null)
    
    inline def setSourceMaterialsUndefined: Self = StObject.set(x, "sourceMaterials", js.undefined)
    
    inline def setSourceMaterialsVarargs(value: String*): Self = StObject.set(x, "sourceMaterials", js.Array(value*))
    
    inline def setStatus(value: AlertStatus): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    inline def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    inline def setTags(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsNull: Self = StObject.set(x, "tags", null)
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setTagsVarargs(value: String*): Self = StObject.set(x, "tags", js.Array(value*))
    
    inline def setTitle(value: NullableOption[String]): Self = StObject.set(x, "title", value.asInstanceOf[js.Any])
    
    inline def setTitleNull: Self = StObject.set(x, "title", null)
    
    inline def setTitleUndefined: Self = StObject.set(x, "title", js.undefined)
    
    inline def setTriggers(value: NullableOption[js.Array[AlertTrigger]]): Self = StObject.set(x, "triggers", value.asInstanceOf[js.Any])
    
    inline def setTriggersNull: Self = StObject.set(x, "triggers", null)
    
    inline def setTriggersUndefined: Self = StObject.set(x, "triggers", js.undefined)
    
    inline def setTriggersVarargs(value: AlertTrigger*): Self = StObject.set(x, "triggers", js.Array(value*))
    
    inline def setUriClickSecurityStates(value: NullableOption[js.Array[UriClickSecurityState]]): Self = StObject.set(x, "uriClickSecurityStates", value.asInstanceOf[js.Any])
    
    inline def setUriClickSecurityStatesNull: Self = StObject.set(x, "uriClickSecurityStates", null)
    
    inline def setUriClickSecurityStatesUndefined: Self = StObject.set(x, "uriClickSecurityStates", js.undefined)
    
    inline def setUriClickSecurityStatesVarargs(value: UriClickSecurityState*): Self = StObject.set(x, "uriClickSecurityStates", js.Array(value*))
    
    inline def setUserStates(value: NullableOption[js.Array[UserSecurityState]]): Self = StObject.set(x, "userStates", value.asInstanceOf[js.Any])
    
    inline def setUserStatesNull: Self = StObject.set(x, "userStates", null)
    
    inline def setUserStatesUndefined: Self = StObject.set(x, "userStates", js.undefined)
    
    inline def setUserStatesVarargs(value: UserSecurityState*): Self = StObject.set(x, "userStates", js.Array(value*))
    
    inline def setVendorInformation(value: NullableOption[SecurityVendorInformation]): Self = StObject.set(x, "vendorInformation", value.asInstanceOf[js.Any])
    
    inline def setVendorInformationNull: Self = StObject.set(x, "vendorInformation", null)
    
    inline def setVendorInformationUndefined: Self = StObject.set(x, "vendorInformation", js.undefined)
    
    inline def setVulnerabilityStates(value: NullableOption[js.Array[VulnerabilityState]]): Self = StObject.set(x, "vulnerabilityStates", value.asInstanceOf[js.Any])
    
    inline def setVulnerabilityStatesNull: Self = StObject.set(x, "vulnerabilityStates", null)
    
    inline def setVulnerabilityStatesUndefined: Self = StObject.set(x, "vulnerabilityStates", js.undefined)
    
    inline def setVulnerabilityStatesVarargs(value: VulnerabilityState*): Self = StObject.set(x, "vulnerabilityStates", js.Array(value*))
  }
}
