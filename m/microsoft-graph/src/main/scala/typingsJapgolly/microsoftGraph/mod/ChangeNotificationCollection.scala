package typingsJapgolly.microsoftGraph.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ChangeNotificationCollection extends StObject {
  
  /**
    * Contains an array of JWT tokens generated by Microsoft Graph for the application to validate the origin of the
    * notifications. Microsoft Graph generates a single token for each distinct app and tenant pair for an item if it exists
    * in the value array. Keep in mind that notifications can contain a mix of items for various apps and tenants that
    * subscribed using the same notification URL. Only provided for change notifications with resource data Optional.
    */
  var validationTokens: js.UndefOr[NullableOption[js.Array[String]]] = js.undefined
  
  // The set of notifications being sent to the notification URL. Required.
  var value: js.UndefOr[js.Array[ChangeNotification]] = js.undefined
}
object ChangeNotificationCollection {
  
  inline def apply(): ChangeNotificationCollection = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ChangeNotificationCollection]
  }
  
  extension [Self <: ChangeNotificationCollection](x: Self) {
    
    inline def setValidationTokens(value: NullableOption[js.Array[String]]): Self = StObject.set(x, "validationTokens", value.asInstanceOf[js.Any])
    
    inline def setValidationTokensNull: Self = StObject.set(x, "validationTokens", null)
    
    inline def setValidationTokensUndefined: Self = StObject.set(x, "validationTokens", js.undefined)
    
    inline def setValidationTokensVarargs(value: String*): Self = StObject.set(x, "validationTokens", js.Array(value*))
    
    inline def setValue(value: js.Array[ChangeNotification]): Self = StObject.set(x, "value", value.asInstanceOf[js.Any])
    
    inline def setValueUndefined: Self = StObject.set(x, "value", js.undefined)
    
    inline def setValueVarargs(value: ChangeNotification*): Self = StObject.set(x, "value", js.Array(value*))
  }
}
