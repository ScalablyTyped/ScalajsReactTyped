package typingsJapgolly.maximMazurokGapiClientAndroidmanagement.gapi.client.androidmanagement

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SigninDetail extends StObject {
  
  /**
    * Controls whether personal usage is allowed on a device provisioned with this enrollment token.For company-owned devices: Enabling personal usage allows the user to set up a work
    * profile on the device. Disabling personal usage requires the user provision the device as a fully managed device.For personally-owned devices: Enabling personal usage allows the
    * user to set up a work profile on the device. Disabling personal usage will prevent the device from provisioning. Personal usage cannot be disabled on personally-owned device.
    */
  var allowPersonalUsage: js.UndefOr[String] = js.undefined
  
  /**
    * A JSON string whose UTF-8 representation can be used to generate a QR code to enroll a device with this enrollment token. To enroll a device using NFC, the NFC record must contain a
    * serialized java.util.Properties representation of the properties in the JSON. This is a read-only field generated by the server.
    */
  var qrCode: js.UndefOr[String] = js.undefined
  
  /** An enterprise wide enrollment token used to trigger custom sign-in flow. This is a read-only field generated by the server. */
  var signinEnrollmentToken: js.UndefOr[String] = js.undefined
  
  /**
    * Sign-in URL for authentication when device is provisioned with a sign-in enrollment token. The sign-in endpoint should finish authentication flow with a URL in the form of
    * https://enterprise.google.com/android/enroll?et= for a successful login, or https://enterprise.google.com/android/enroll/invalid for a failed login.
    */
  var signinUrl: js.UndefOr[String] = js.undefined
}
object SigninDetail {
  
  inline def apply(): SigninDetail = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SigninDetail]
  }
  
  extension [Self <: SigninDetail](x: Self) {
    
    inline def setAllowPersonalUsage(value: String): Self = StObject.set(x, "allowPersonalUsage", value.asInstanceOf[js.Any])
    
    inline def setAllowPersonalUsageUndefined: Self = StObject.set(x, "allowPersonalUsage", js.undefined)
    
    inline def setQrCode(value: String): Self = StObject.set(x, "qrCode", value.asInstanceOf[js.Any])
    
    inline def setQrCodeUndefined: Self = StObject.set(x, "qrCode", js.undefined)
    
    inline def setSigninEnrollmentToken(value: String): Self = StObject.set(x, "signinEnrollmentToken", value.asInstanceOf[js.Any])
    
    inline def setSigninEnrollmentTokenUndefined: Self = StObject.set(x, "signinEnrollmentToken", js.undefined)
    
    inline def setSigninUrl(value: String): Self = StObject.set(x, "signinUrl", value.asInstanceOf[js.Any])
    
    inline def setSigninUrlUndefined: Self = StObject.set(x, "signinUrl", js.undefined)
  }
}
