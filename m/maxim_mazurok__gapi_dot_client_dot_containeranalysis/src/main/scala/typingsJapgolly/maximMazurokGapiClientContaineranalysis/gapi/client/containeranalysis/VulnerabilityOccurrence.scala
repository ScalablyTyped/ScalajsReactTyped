package typingsJapgolly.maximMazurokGapiClientContaineranalysis.gapi.client.containeranalysis

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait VulnerabilityOccurrence extends StObject {
  
  /** Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity. */
  var cvssScore: js.UndefOr[Double] = js.undefined
  
  /** The cvss v3 score for the vulnerability. */
  var cvssv3: js.UndefOr[CVSS] = js.undefined
  
  /**
    * The distro assigned severity for this vulnerability when it is available, otherwise this is the note provider assigned severity. When there are multiple PackageIssues for this
    * vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For
    * this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should
    * be the highest severity for any of the PackageIssues.
    */
  var effectiveSeverity: js.UndefOr[String] = js.undefined
  
  /** Output only. Whether at least one of the affected packages has a fix available. */
  var fixAvailable: js.UndefOr[Boolean] = js.undefined
  
  /** Output only. A detailed description of this vulnerability. */
  var longDescription: js.UndefOr[String] = js.undefined
  
  /** Required. The set of affected locations and their fixes (if available) within the associated resource. */
  var packageIssue: js.UndefOr[js.Array[PackageIssue]] = js.undefined
  
  /** Output only. URLs related to this vulnerability. */
  var relatedUrls: js.UndefOr[js.Array[RelatedUrl]] = js.undefined
  
  /** Output only. The note provider assigned severity of this vulnerability. */
  var severity: js.UndefOr[String] = js.undefined
  
  /** Output only. A one sentence description of this vulnerability. */
  var shortDescription: js.UndefOr[String] = js.undefined
  
  /** The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.). */
  var `type`: js.UndefOr[String] = js.undefined
}
object VulnerabilityOccurrence {
  
  inline def apply(): VulnerabilityOccurrence = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[VulnerabilityOccurrence]
  }
  
  extension [Self <: VulnerabilityOccurrence](x: Self) {
    
    inline def setCvssScore(value: Double): Self = StObject.set(x, "cvssScore", value.asInstanceOf[js.Any])
    
    inline def setCvssScoreUndefined: Self = StObject.set(x, "cvssScore", js.undefined)
    
    inline def setCvssv3(value: CVSS): Self = StObject.set(x, "cvssv3", value.asInstanceOf[js.Any])
    
    inline def setCvssv3Undefined: Self = StObject.set(x, "cvssv3", js.undefined)
    
    inline def setEffectiveSeverity(value: String): Self = StObject.set(x, "effectiveSeverity", value.asInstanceOf[js.Any])
    
    inline def setEffectiveSeverityUndefined: Self = StObject.set(x, "effectiveSeverity", js.undefined)
    
    inline def setFixAvailable(value: Boolean): Self = StObject.set(x, "fixAvailable", value.asInstanceOf[js.Any])
    
    inline def setFixAvailableUndefined: Self = StObject.set(x, "fixAvailable", js.undefined)
    
    inline def setLongDescription(value: String): Self = StObject.set(x, "longDescription", value.asInstanceOf[js.Any])
    
    inline def setLongDescriptionUndefined: Self = StObject.set(x, "longDescription", js.undefined)
    
    inline def setPackageIssue(value: js.Array[PackageIssue]): Self = StObject.set(x, "packageIssue", value.asInstanceOf[js.Any])
    
    inline def setPackageIssueUndefined: Self = StObject.set(x, "packageIssue", js.undefined)
    
    inline def setPackageIssueVarargs(value: PackageIssue*): Self = StObject.set(x, "packageIssue", js.Array(value*))
    
    inline def setRelatedUrls(value: js.Array[RelatedUrl]): Self = StObject.set(x, "relatedUrls", value.asInstanceOf[js.Any])
    
    inline def setRelatedUrlsUndefined: Self = StObject.set(x, "relatedUrls", js.undefined)
    
    inline def setRelatedUrlsVarargs(value: RelatedUrl*): Self = StObject.set(x, "relatedUrls", js.Array(value*))
    
    inline def setSeverity(value: String): Self = StObject.set(x, "severity", value.asInstanceOf[js.Any])
    
    inline def setSeverityUndefined: Self = StObject.set(x, "severity", js.undefined)
    
    inline def setShortDescription(value: String): Self = StObject.set(x, "shortDescription", value.asInstanceOf[js.Any])
    
    inline def setShortDescriptionUndefined: Self = StObject.set(x, "shortDescription", js.undefined)
    
    inline def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
  }
}
