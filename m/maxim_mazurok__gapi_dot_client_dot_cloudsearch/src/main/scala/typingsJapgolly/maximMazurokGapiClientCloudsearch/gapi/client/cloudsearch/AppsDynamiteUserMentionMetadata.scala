package typingsJapgolly.maximMazurokGapiClientCloudsearch.gapi.client.cloudsearch

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait AppsDynamiteUserMentionMetadata extends StObject {
  
  /**
    * Display name of the mentioned user. This field should remain empty when clients resolve a UserMention annotation. It will be filled in when a UserMention is generated by the
    * Integration Server.
    */
  var displayName: js.UndefOr[String] = js.undefined
  
  /**
    * Gender of the mentioned user. One of "female", "male" or "other". Used for choosing accurate translations for strings that contain the UserMention, when these need to be constructed
    * (e.g. task assignment update message). This field should remain empty when clients resolve a UserMention. It will be filled in when a UserMention is generated by the Integration
    * Server.
    */
  var gender: js.UndefOr[String] = js.undefined
  
  /** To be deprecated. Use invitee_info field instead. ID of the User mentioned. This field should remain empty when type == MENTION_ALL. */
  var id: js.UndefOr[AppsDynamiteUserId] = js.undefined
  
  /**
    * Invitee UserId and email used when mentioned. This field should remain empty when type == MENTION_ALL. Invitee_info.email is only used when a user is @-mentioned with an email
    * address, and it will be empty when clients get messages from Backend.
    */
  var inviteeInfo: js.UndefOr[AppsDynamiteInviteeInfo] = js.undefined
  
  var `type`: js.UndefOr[String] = js.undefined
}
object AppsDynamiteUserMentionMetadata {
  
  inline def apply(): AppsDynamiteUserMentionMetadata = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[AppsDynamiteUserMentionMetadata]
  }
  
  extension [Self <: AppsDynamiteUserMentionMetadata](x: Self) {
    
    inline def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    inline def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    inline def setGender(value: String): Self = StObject.set(x, "gender", value.asInstanceOf[js.Any])
    
    inline def setGenderUndefined: Self = StObject.set(x, "gender", js.undefined)
    
    inline def setId(value: AppsDynamiteUserId): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setInviteeInfo(value: AppsDynamiteInviteeInfo): Self = StObject.set(x, "inviteeInfo", value.asInstanceOf[js.Any])
    
    inline def setInviteeInfoUndefined: Self = StObject.set(x, "inviteeInfo", js.undefined)
    
    inline def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
  }
}
