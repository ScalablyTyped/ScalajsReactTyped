package typingsJapgolly.libp2p.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/* Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.Libp2pInit> */
trait Libp2pOptions extends StObject {
  
  var addresses: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.AddressesConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.AddressesConfig extends (args : ...any): any ? libp2p.libp2p.AddressesConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.AddressesConfig> * /
  {  listen :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
  {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   announce :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
  {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   noAnnounce :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
  {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   announceFilter :(multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> extends (args : ...any): any ? (multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>> | undefined} */ js.Any
  ] = js.undefined
  
  var connectionEncryption: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined> */ js.Any
  ] = js.undefined
  
  var connectionGater: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
  {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
  {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} extends (args : ...any): any ? / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
  {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater>> * /
  {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends (args : ...any): any ? (peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var connectionManager: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit extends (args : ...any): any ? libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit> * /
  {  maxData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxAddrsToDial :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   autoDial :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   maxParallelDials :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   resolvers :std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined extends (args : ...any): any ? std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined> | undefined,   addressSorter :@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined> | undefined,   dialTimeout :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   movingAverageInterval :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxEventLoopDelay :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   autoDialInterval :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   startupReconnectTimeout :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   pollInterval :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxConnections :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxReceivedData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   minConnections :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxSentData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   inboundUpgradeTimeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxDialsPerPeer :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var connectionProtector: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined extends (args : ...any): any ? @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined> */ js.Any
  ] = js.undefined
  
  var contentRouters: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined> */ js.Any
  ] = js.undefined
  
  var datastore: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: interface-datastore.interface-datastore.Datastore extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : interface-datastore.interface-datastore.Datastore extends (args : ...any): any ? interface-datastore.interface-datastore.Datastore : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<interface-datastore.interface-datastore.Datastore> * /
  {  queryKeys :(query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends (args : ...any): any ? (query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key>> | undefined,   query :(query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends (args : ...any): any ? (query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>> | undefined,   delete :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void>> | undefined,   putMany :(source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>> | undefined,   open :(): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Promise<void> extends (args : ...any): any ? (): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Promise<void>> | undefined,   close :(): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Promise<void> extends (args : ...any): any ? (): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Promise<void>> | undefined,   has :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean>> | undefined,   deleteMany :(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key>> | undefined,   batch :(): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> extends (args : ...any): any ? (): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> | undefined,   put :(key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void>> | undefined,   get :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array>> | undefined,   getMany :(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array>> | undefined} */ js.Any
  ] = js.undefined
  
  var dht: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined extends (args : ...any): any ? @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined> */ js.Any
  ] = js.undefined
  
  var fetch: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/fetch.FetchServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/fetch.FetchServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/fetch.FetchServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/fetch.FetchServiceInit> * /
  {  protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
  ] = js.undefined
  
  var identify: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/identify.IdentifyServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/identify.IdentifyServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/identify.IdentifyServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/identify.IdentifyServiceInit> * /
  {  maxIdentifyMessageSize :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   host :libp2p.libp2p/dist/src/identify.HostProperties extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/identify.HostProperties extends (args : ...any): any ? libp2p.libp2p/dist/src/identify.HostProperties : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/identify.HostProperties> * /
  {  agentVersion :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined} | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxPushOutgoingStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxPushIncomingStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined} */ js.Any
  ] = js.undefined
  
  var keychain: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.KeychainConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.KeychainConfig extends (args : ...any): any ? libp2p.libp2p.KeychainConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.KeychainConfig> * /
  {  pass :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   dek :libp2p.libp2p.DEKConfig | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.DEKConfig | undefined extends (args : ...any): any ? libp2p.libp2p.DEKConfig | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.DEKConfig | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var metrics: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit extends (args : ...any): any ? @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit> * /
  {  enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   computeThrottleTimeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   computeThrottleMaxQueueSize :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   movingAverageIntervals :std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<number> extends (args : ...any): any ? std.Array<number> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<number>> * /
  {  map :<U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, number]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, number]> extends (args : ...any): any ? (): std.IterableIterator<[number, number]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, number]>> | undefined,   pop :(): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): number | undefined extends (args : ...any): any ? (): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): number | undefined> | undefined,   fill :(value : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : number): this extends (args : ...any): any ? (value : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : number): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : number, index : number, array : std.Array<number>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : number, index : number, array : std.Array<number>): void): void extends (args : ...any): any ? (callbackfn : (value : number, index : number, array : std.Array<number>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : number, index : number, array : std.Array<number>): void): void> | undefined,   concat :(items : ...std.ConcatArray<number>): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<number>): std.Array<number> extends (args : ...any): any ? (items : ...std.ConcatArray<number>): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<number>): std.Array<number>> | undefined,   includes :(searchElement : number): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): boolean extends (args : ...any): any ? (searchElement : number): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): boolean> | undefined,   slice :(): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<number> extends (args : ...any): any ? (): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<number>> | undefined,   shift :(): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): number | undefined extends (args : ...any): any ? (): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): number | undefined> | undefined,   push :(items : ...number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...number): number extends (args : ...any): any ? (items : ...number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...number): number> | undefined,   reverse :(): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<number> extends (args : ...any): any ? (): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<number>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<number> extends (args : ...any): any ? (start : number): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<number>> | undefined,   some :(predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean extends (args : ...any): any ? (predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean> | undefined,   at :(index : number): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): number | undefined extends (args : ...any): any ? (index : number): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): number | undefined> | undefined,   unshift :(items : ...number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...number): number extends (args : ...any): any ? (items : ...number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...number): number> | undefined,   filter :<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> extends (args : ...any): any ? <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): number extends (args : ...any): any ? (searchElement : number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): number> | undefined,   reduceRight :(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends (args : ...any): any ? (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number> | undefined,   findIndex :(predicate : (value : number, index : number, obj : std.Array<number>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : number, index : number, obj : std.Array<number>): unknown): number extends (args : ...any): any ? (predicate : (value : number, index : number, obj : std.Array<number>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : number, index : number, obj : std.Array<number>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends (args : ...any): any ? (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number> | undefined,   values :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): number extends (args : ...any): any ? (searchElement : number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): number> | undefined,   find :<S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined extends (args : ...any): any ? <S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined> | undefined} | undefined,   maxOldPeersRetention :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
  ] = js.undefined
  
  var nat: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.NatManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.NatManagerConfig extends (args : ...any): any ? libp2p.libp2p.NatManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.NatManagerConfig> * /
  {  description :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   externalAddress :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   gateway :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   ttl :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   keepAlive :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   localAddress :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var peerDiscovery: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined> */ js.Any
  ] = js.undefined
  
  var peerId: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId extends (args : ...any): any ? @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId> */ js.Any
  ] = js.undefined
  
  var peerRouters: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined> */ js.Any
  ] = js.undefined
  
  var peerRouting: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.PeerRoutingConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.PeerRoutingConfig extends (args : ...any): any ? libp2p.libp2p.PeerRoutingConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.PeerRoutingConfig> * /
  {  refreshManager :libp2p.libp2p.RefreshManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.RefreshManagerConfig extends (args : ...any): any ? libp2p.libp2p.RefreshManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.RefreshManagerConfig> * /
  {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   interval :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   bootDelay :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined} */ js.Any
  ] = js.undefined
  
  var peerStore: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit> * /
  {  addressFilter :@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var ping: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/ping.PingServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/ping.PingServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/ping.PingServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/ping.PingServiceInit> * /
  {  protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
  ] = js.undefined
  
  var pubsub: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined extends (args : ...any): any ? @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined> */ js.Any
  ] = js.undefined
  
  var relay: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.RelayConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.RelayConfig extends (args : ...any): any ? libp2p.libp2p.RelayConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.RelayConfig> * /
  {  enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   advertise :libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig extends (args : ...any): any ? libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig> * /
  {  bootDelay :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   ttl :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined} | undefined,   hop :libp2p.libp2p.HopConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.HopConfig extends (args : ...any): any ? libp2p.libp2p.HopConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.HopConfig> * /
  {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   active :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined,   autoRelay :libp2p.libp2p/dist/src/circuit.AutoRelayConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/circuit.AutoRelayConfig extends (args : ...any): any ? libp2p.libp2p/dist/src/circuit.AutoRelayConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/circuit.AutoRelayConfig> * /
  {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   maxListeners :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined} */ js.Any
  ] = js.undefined
  
  var streamMuxers: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined> */ js.Any
  ] = js.undefined
  
  var transportManager: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.TransportManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.TransportManagerConfig extends (args : ...any): any ? libp2p.libp2p.TransportManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.TransportManagerConfig> * /
  {  faultTolerance :libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined extends (args : ...any): any ? libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined> | undefined} */ js.Any
  ] = js.undefined
  
  var transports: js.UndefOr[
    /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> * /
  {  map :<U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> extends (args : ...any): any ? (): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]>> | undefined,   pop :(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   fill :(value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this extends (args : ...any): any ? (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void extends (args : ...any): any ? (callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void> | undefined,   concat :(items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   includes :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean> | undefined,   slice :(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   shift :(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   push :(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   reverse :(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   some :(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean extends (args : ...any): any ? (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean> | undefined,   at :(index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   unshift :(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   filter :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   reduceRight :(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends (args : ...any): any ? (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport> | undefined,   findIndex :(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number extends (args : ...any): any ? (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends (args : ...any): any ? (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport> | undefined,   values :(): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   find :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined> | undefined} */ js.Any
  ] = js.undefined
}
object Libp2pOptions {
  
  inline def apply(): Libp2pOptions = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Libp2pOptions]
  }
  
  extension [Self <: Libp2pOptions](x: Self) {
    
    inline def setAddresses(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.AddressesConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.AddressesConfig extends (args : ...any): any ? libp2p.libp2p.AddressesConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.AddressesConfig> * /
    {  listen :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
    {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   announce :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
    {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   noAnnounce :std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<string> extends (args : ...any): any ? std.Array<string> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<string>> * /
    {  map :<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : string, index : number, array : std.Array<string>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, string]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, string]> extends (args : ...any): any ? (): std.IterableIterator<[number, string]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, string]>> | undefined,   pop :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   fill :(value : string): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : string): this extends (args : ...any): any ? (value : string): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : string): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : string, index : number, array : std.Array<string>): void): void extends (args : ...any): any ? (callbackfn : (value : string, index : number, array : std.Array<string>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : string, index : number, array : std.Array<string>): void): void> | undefined,   concat :(items : ...std.ConcatArray<string>): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<string>): std.Array<string> extends (args : ...any): any ? (items : ...std.ConcatArray<string>): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<string>): std.Array<string>> | undefined,   includes :(searchElement : string): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): boolean extends (args : ...any): any ? (searchElement : string): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): boolean> | undefined,   slice :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   shift :(): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string | undefined extends (args : ...any): any ? (): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string | undefined> | undefined,   push :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   reverse :(): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<string> extends (args : ...any): any ? (): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<string>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<string> extends (args : ...any): any ? (start : number): std.Array<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<string>> | undefined,   some :(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean extends (args : ...any): any ? (predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, array : std.Array<string>): unknown): boolean> | undefined,   at :(index : number): string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): string | undefined extends (args : ...any): any ? (index : number): string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): string | undefined> | undefined,   unshift :(items : ...string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...string): number extends (args : ...any): any ? (items : ...string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...string): number> | undefined,   filter :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   reduceRight :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   findIndex :(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number extends (args : ...any): any ? (predicate : (value : string, index : number, obj : std.Array<string>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : string, index : number, obj : std.Array<string>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string extends (args : ...any): any ? (callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : string, currentValue : string, currentIndex : number, array : std.Array<string>): string): string> | undefined,   values :(): std.IterableIterator<string> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<string> extends (args : ...any): any ? (): std.IterableIterator<string> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<string>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : string, index : number, array : std.Array<string>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (value : string, index : number, array : std.Array<string>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : string): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : string): number extends (args : ...any): any ? (searchElement : string): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : string): number> | undefined,   find :<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined extends (args : ...any): any ? <S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends string>(predicate : (this : void, value : string, index : number, obj : std.Array<string>): value is S): S | undefined> | undefined} | undefined,   announceFilter :(multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> extends (args : ...any): any ? (multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(multiaddrs : std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>): std.Array<@multiformats/multiaddr.@multiformats/multiaddr.Multiaddr>> | undefined} */ js.Any
    ): Self = StObject.set(x, "addresses", value.asInstanceOf[js.Any])
    
    inline def setAddressesUndefined: Self = StObject.set(x, "addresses", js.undefined)
    
    inline def setConnectionEncryption(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-connection-encrypter.@libp2p/interface-connection-encrypter.ConnectionEncrypter> | undefined> */ js.Any
    ): Self = StObject.set(x, "connectionEncryption", value.asInstanceOf[js.Any])
    
    inline def setConnectionEncryptionUndefined: Self = StObject.set(x, "connectionEncryption", js.undefined)
    
    inline def setConnectionGater(
      value: /* import warning: importer.ImportType#apply Failed type conversion: / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
    {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
    {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} extends (args : ...any): any ? / * Inlined std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater> * /
    {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined} : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Partial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionGater>> * /
    {  denyOutboundConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyOutboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyInboundConnection :(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   filterMultiaddrForPeer :(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends (args : ...any): any ? (peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peer : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined> | undefined,   denyDialMultiaddr :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, multiaddr : @multiformats/multiaddr.@multiformats/multiaddr.Multiaddr): std.Promise<boolean> | undefined> | undefined,   denyOutboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyDialPeer :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId): std.Promise<boolean> | undefined> | undefined,   denyInboundEncryptedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined,   denyInboundUpgradedConnection :(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined extends (args : ...any): any ? (peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(peerId : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId, maConn : @libp2p/interface-connection.@libp2p/interface-connection.MultiaddrConnection): std.Promise<boolean> | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "connectionGater", value.asInstanceOf[js.Any])
    
    inline def setConnectionGaterUndefined: Self = StObject.set(x, "connectionGater", js.undefined)
    
    inline def setConnectionManager(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit extends (args : ...any): any ? libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/connection-manager.ConnectionManagerInit> * /
    {  maxData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxAddrsToDial :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   autoDial :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   maxParallelDials :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   resolvers :std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined extends (args : ...any): any ? std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Record<string, @multiformats/multiaddr.@multiformats/multiaddr.Resolver> | undefined> | undefined,   addressSorter :@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressSorter | undefined> | undefined,   dialTimeout :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   movingAverageInterval :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxEventLoopDelay :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   autoDialInterval :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   startupReconnectTimeout :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   pollInterval :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   maxConnections :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxReceivedData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   minConnections :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxSentData :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   inboundUpgradeTimeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxDialsPerPeer :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "connectionManager", value.asInstanceOf[js.Any])
    
    inline def setConnectionManagerUndefined: Self = StObject.set(x, "connectionManager", js.undefined)
    
    inline def setConnectionProtector(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined extends (args : ...any): any ? @libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-connection.@libp2p/interface-connection.ConnectionProtector | undefined> */ js.Any
    ): Self = StObject.set(x, "connectionProtector", value.asInstanceOf[js.Any])
    
    inline def setConnectionProtectorUndefined: Self = StObject.set(x, "connectionProtector", js.undefined)
    
    inline def setContentRouters(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-content-routing.@libp2p/interface-content-routing.ContentRouting> | undefined> */ js.Any
    ): Self = StObject.set(x, "contentRouters", value.asInstanceOf[js.Any])
    
    inline def setContentRoutersUndefined: Self = StObject.set(x, "contentRouters", js.undefined)
    
    inline def setDatastore(
      value: /* import warning: importer.ImportType#apply Failed type conversion: interface-datastore.interface-datastore.Datastore extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : interface-datastore.interface-datastore.Datastore extends (args : ...any): any ? interface-datastore.interface-datastore.Datastore : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<interface-datastore.interface-datastore.Datastore> * /
    {  queryKeys :(query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends (args : ...any): any ? (query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(query : interface-store.interface-store.KeyQuery<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key>> | undefined,   query :(query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends (args : ...any): any ? (query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(query : interface-store.interface-store.Query<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>> | undefined,   delete :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<void>> | undefined,   putMany :(source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>): std.AsyncIterable<interface-store.interface-store.Pair<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>>> | undefined,   open :(): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Promise<void> extends (args : ...any): any ? (): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Promise<void>> | undefined,   close :(): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Promise<void> extends (args : ...any): any ? (): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Promise<void>> | undefined,   has :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<boolean>> | undefined,   deleteMany :(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<interface-datastore.interface-datastore/dist/src/key.Key>> | undefined,   batch :(): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> extends (args : ...any): any ? (): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): interface-store.interface-store.Batch<interface-datastore.interface-datastore/dist/src/key.Key, std.Uint8Array>> | undefined,   put :(key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key, val : std.Uint8Array): std.Promise<void>> | undefined,   get :(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> extends (args : ...any): any ? (key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(key : interface-datastore.interface-datastore/dist/src/key.Key): std.Promise<std.Uint8Array>> | undefined,   getMany :(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> extends (args : ...any): any ? (source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(source : interface-store.interface-store.AwaitIterable<interface-datastore.interface-datastore/dist/src/key.Key>): std.AsyncIterable<std.Uint8Array>> | undefined} */ js.Any
    ): Self = StObject.set(x, "datastore", value.asInstanceOf[js.Any])
    
    inline def setDatastoreUndefined: Self = StObject.set(x, "datastore", js.undefined)
    
    inline def setDht(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined extends (args : ...any): any ? @libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-dht.@libp2p/interface-dht.DualDHT | undefined> */ js.Any
    ): Self = StObject.set(x, "dht", value.asInstanceOf[js.Any])
    
    inline def setDhtUndefined: Self = StObject.set(x, "dht", js.undefined)
    
    inline def setFetch(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/fetch.FetchServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/fetch.FetchServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/fetch.FetchServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/fetch.FetchServiceInit> * /
    {  protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
    ): Self = StObject.set(x, "fetch", value.asInstanceOf[js.Any])
    
    inline def setFetchUndefined: Self = StObject.set(x, "fetch", js.undefined)
    
    inline def setIdentify(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/identify.IdentifyServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/identify.IdentifyServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/identify.IdentifyServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/identify.IdentifyServiceInit> * /
    {  maxIdentifyMessageSize :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   host :libp2p.libp2p/dist/src/identify.HostProperties extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/identify.HostProperties extends (args : ...any): any ? libp2p.libp2p/dist/src/identify.HostProperties : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/identify.HostProperties> * /
    {  agentVersion :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined} | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxPushOutgoingStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxPushIncomingStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined} */ js.Any
    ): Self = StObject.set(x, "identify", value.asInstanceOf[js.Any])
    
    inline def setIdentifyUndefined: Self = StObject.set(x, "identify", js.undefined)
    
    inline def setKeychain(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.KeychainConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.KeychainConfig extends (args : ...any): any ? libp2p.libp2p.KeychainConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.KeychainConfig> * /
    {  pass :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   dek :libp2p.libp2p.DEKConfig | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.DEKConfig | undefined extends (args : ...any): any ? libp2p.libp2p.DEKConfig | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.DEKConfig | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "keychain", value.asInstanceOf[js.Any])
    
    inline def setKeychainUndefined: Self = StObject.set(x, "keychain", js.undefined)
    
    inline def setMetrics(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit extends (args : ...any): any ? @libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-metrics.@libp2p/interface-metrics.MetricsInit> * /
    {  enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   computeThrottleTimeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   computeThrottleMaxQueueSize :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   movingAverageIntervals :std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<number> extends (args : ...any): any ? std.Array<number> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<number>> * /
    {  map :<U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : number, index : number, array : std.Array<number>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, number]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, number]> extends (args : ...any): any ? (): std.IterableIterator<[number, number]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, number]>> | undefined,   pop :(): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): number | undefined extends (args : ...any): any ? (): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): number | undefined> | undefined,   fill :(value : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : number): this extends (args : ...any): any ? (value : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : number): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : number, index : number, array : std.Array<number>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : number, index : number, array : std.Array<number>): void): void extends (args : ...any): any ? (callbackfn : (value : number, index : number, array : std.Array<number>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : number, index : number, array : std.Array<number>): void): void> | undefined,   concat :(items : ...std.ConcatArray<number>): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<number>): std.Array<number> extends (args : ...any): any ? (items : ...std.ConcatArray<number>): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<number>): std.Array<number>> | undefined,   includes :(searchElement : number): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): boolean extends (args : ...any): any ? (searchElement : number): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): boolean> | undefined,   slice :(): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<number> extends (args : ...any): any ? (): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<number>> | undefined,   shift :(): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): number | undefined extends (args : ...any): any ? (): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): number | undefined> | undefined,   push :(items : ...number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...number): number extends (args : ...any): any ? (items : ...number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...number): number> | undefined,   reverse :(): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<number> extends (args : ...any): any ? (): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<number>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<number> extends (args : ...any): any ? (start : number): std.Array<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<number>> | undefined,   some :(predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean extends (args : ...any): any ? (predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : number, index : number, array : std.Array<number>): unknown): boolean> | undefined,   at :(index : number): number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): number | undefined extends (args : ...any): any ? (index : number): number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): number | undefined> | undefined,   unshift :(items : ...number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...number): number extends (args : ...any): any ? (items : ...number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...number): number> | undefined,   filter :<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> extends (args : ...any): any ? <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): number extends (args : ...any): any ? (searchElement : number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): number> | undefined,   reduceRight :(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends (args : ...any): any ? (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number> | undefined,   findIndex :(predicate : (value : number, index : number, obj : std.Array<number>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : number, index : number, obj : std.Array<number>): unknown): number extends (args : ...any): any ? (predicate : (value : number, index : number, obj : std.Array<number>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : number, index : number, obj : std.Array<number>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number extends (args : ...any): any ? (callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : number, currentValue : number, currentIndex : number, array : std.Array<number>): number): number> | undefined,   values :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : number, index : number, array : std.Array<number>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (value : number, index : number, array : std.Array<number>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : number): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : number): number extends (args : ...any): any ? (searchElement : number): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : number): number> | undefined,   find :<S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined extends (args : ...any): any ? <S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends number>(predicate : (this : void, value : number, index : number, obj : std.Array<number>): value is S): S | undefined> | undefined} | undefined,   maxOldPeersRetention :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
    ): Self = StObject.set(x, "metrics", value.asInstanceOf[js.Any])
    
    inline def setMetricsUndefined: Self = StObject.set(x, "metrics", js.undefined)
    
    inline def setNat(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.NatManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.NatManagerConfig extends (args : ...any): any ? libp2p.libp2p.NatManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.NatManagerConfig> * /
    {  description :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   externalAddress :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   gateway :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined,   ttl :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   keepAlive :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   localAddress :string | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string | undefined extends (args : ...any): any ? string | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "nat", value.asInstanceOf[js.Any])
    
    inline def setNatUndefined: Self = StObject.set(x, "nat", js.undefined)
    
    inline def setPeerDiscovery(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-peer-discovery.@libp2p/interface-peer-discovery.PeerDiscovery> | undefined> */ js.Any
    ): Self = StObject.set(x, "peerDiscovery", value.asInstanceOf[js.Any])
    
    inline def setPeerDiscoveryUndefined: Self = StObject.set(x, "peerDiscovery", js.undefined)
    
    inline def setPeerId(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId extends (args : ...any): any ? @libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-id.@libp2p/interface-peer-id.PeerId> */ js.Any
    ): Self = StObject.set(x, "peerId", value.asInstanceOf[js.Any])
    
    inline def setPeerIdUndefined: Self = StObject.set(x, "peerId", js.undefined)
    
    inline def setPeerRouters(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-peer-routing.@libp2p/interface-peer-routing.PeerRouting> | undefined> */ js.Any
    ): Self = StObject.set(x, "peerRouters", value.asInstanceOf[js.Any])
    
    inline def setPeerRoutersUndefined: Self = StObject.set(x, "peerRouters", js.undefined)
    
    inline def setPeerRouting(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.PeerRoutingConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.PeerRoutingConfig extends (args : ...any): any ? libp2p.libp2p.PeerRoutingConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.PeerRoutingConfig> * /
    {  refreshManager :libp2p.libp2p.RefreshManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.RefreshManagerConfig extends (args : ...any): any ? libp2p.libp2p.RefreshManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.RefreshManagerConfig> * /
    {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   interval :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   bootDelay :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined} */ js.Any
    ): Self = StObject.set(x, "peerRouting", value.asInstanceOf[js.Any])
    
    inline def setPeerRoutingUndefined: Self = StObject.set(x, "peerRouting", js.undefined)
    
    inline def setPeerStore(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.PeerStoreInit> * /
    {  addressFilter :@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined extends (args : ...any): any ? @libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-peer-store.@libp2p/interface-peer-store.AddressFilter | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "peerStore", value.asInstanceOf[js.Any])
    
    inline def setPeerStoreUndefined: Self = StObject.set(x, "peerStore", js.undefined)
    
    inline def setPing(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p/dist/src/ping.PingServiceInit extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/ping.PingServiceInit extends (args : ...any): any ? libp2p.libp2p/dist/src/ping.PingServiceInit : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/ping.PingServiceInit> * /
    {  protocolPrefix :string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : string extends (args : ...any): any ? string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<string> | undefined,   maxInboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   maxOutboundStreams :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} */ js.Any
    ): Self = StObject.set(x, "ping", value.asInstanceOf[js.Any])
    
    inline def setPingUndefined: Self = StObject.set(x, "ping", js.undefined)
    
    inline def setPubsub(
      value: /* import warning: importer.ImportType#apply Failed type conversion: @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined extends (args : ...any): any ? @libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSub<@libp2p/interface-pubsub.@libp2p/interface-pubsub.PubSubEvents> | undefined> */ js.Any
    ): Self = StObject.set(x, "pubsub", value.asInstanceOf[js.Any])
    
    inline def setPubsubUndefined: Self = StObject.set(x, "pubsub", js.undefined)
    
    inline def setRelay(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.RelayConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.RelayConfig extends (args : ...any): any ? libp2p.libp2p.RelayConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.RelayConfig> * /
    {  enabled :boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean extends (args : ...any): any ? boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean> | undefined,   advertise :libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig extends (args : ...any): any ? libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/circuit.RelayAdvertiseConfig> * /
    {  bootDelay :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined,   enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   ttl :number | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number | undefined extends (args : ...any): any ? number | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number | undefined> | undefined} | undefined,   hop :libp2p.libp2p.HopConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.HopConfig extends (args : ...any): any ? libp2p.libp2p.HopConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.HopConfig> * /
    {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   active :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   timeout :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined,   autoRelay :libp2p.libp2p/dist/src/circuit.AutoRelayConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/circuit.AutoRelayConfig extends (args : ...any): any ? libp2p.libp2p/dist/src/circuit.AutoRelayConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/circuit.AutoRelayConfig> * /
    {  enabled :boolean | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : boolean | undefined extends (args : ...any): any ? boolean | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<boolean | undefined> | undefined,   maxListeners :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined} | undefined} */ js.Any
    ): Self = StObject.set(x, "relay", value.asInstanceOf[js.Any])
    
    inline def setRelayUndefined: Self = StObject.set(x, "relay", js.undefined)
    
    inline def setStreamMuxers(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined extends (args : ...any): any ? std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-stream-muxer.@libp2p/interface-stream-muxer.StreamMuxerFactory> | undefined> */ js.Any
    ): Self = StObject.set(x, "streamMuxers", value.asInstanceOf[js.Any])
    
    inline def setStreamMuxersUndefined: Self = StObject.set(x, "streamMuxers", js.undefined)
    
    inline def setTransportManager(
      value: /* import warning: importer.ImportType#apply Failed type conversion: libp2p.libp2p.TransportManagerConfig extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p.TransportManagerConfig extends (args : ...any): any ? libp2p.libp2p.TransportManagerConfig : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p.TransportManagerConfig> * /
    {  faultTolerance :libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined extends (args : ...any): any ? libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<libp2p.libp2p/dist/src/transport-manager.FaultTolerance | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "transportManager", value.asInstanceOf[js.Any])
    
    inline def setTransportManagerUndefined: Self = StObject.set(x, "transportManager", js.undefined)
    
    inline def setTransports(
      value: /* import warning: importer.ImportType#apply Failed type conversion: std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : / * Inlined @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> * /
    {  map :<U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> extends (args : ...any): any ? <U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U>(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U): std.Array<U>> | undefined,   length :number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : number extends (args : ...any): any ? number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<number> | undefined,   entries :(): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> extends (args : ...any): any ? (): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<[number, @libp2p/interface-transport.@libp2p/interface-transport.Transport]>> | undefined,   pop :(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   fill :(value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this extends (args : ...any): any ? (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(value : @libp2p/interface-transport.@libp2p/interface-transport.Transport): this> | undefined,   join :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   copyWithin :(target : number, start : number): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (target : number, start : number): this extends (args : ...any): any ? (target : number, start : number): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(target : number, start : number): this> | undefined,   keys :(): std.IterableIterator<number> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<number> extends (args : ...any): any ? (): std.IterableIterator<number> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<number>> | undefined,   sort :(): this extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): this extends (args : ...any): any ? (): this : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): this> | undefined,   forEach :(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void extends (args : ...any): any ? (callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): void): void> | undefined,   concat :(items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...std.ConcatArray<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   includes :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): boolean> | undefined,   slice :(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   shift :(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   push :(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   reverse :(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   flat :<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> extends (args : ...any): any ? <A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<A, D extends number = 1>(this : A): std.Array<std.FlatArray<A, D>>> | undefined,   splice :(start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(start : number): std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   some :(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean extends (args : ...any): any ? (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): boolean> | undefined,   at :(index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined extends (args : ...any): any ? (index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(index : number): @libp2p/interface-transport.@libp2p/interface-transport.Transport | undefined> | undefined,   unshift :(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(items : ...@libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   filter :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): std.Array<S>> | undefined,   toString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   indexOf :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   reduceRight :(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends (args : ...any): any ? (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport> | undefined,   findIndex :(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number extends (args : ...any): any ? (predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): unknown): number> | undefined,   reduce :(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport extends (args : ...any): any ? (callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(callbackfn : (previousValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentValue : @libp2p/interface-transport.@libp2p/interface-transport.Transport, currentIndex : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): @libp2p/interface-transport.@libp2p/interface-transport.Transport): @libp2p/interface-transport.@libp2p/interface-transport.Transport> | undefined,   values :(): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> extends (args : ...any): any ? (): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): std.IterableIterator<@libp2p/interface-transport.@libp2p/interface-transport.Transport>> | undefined,   flatMap :<U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> extends (args : ...any): any ? <U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<U, This = undefined>(callback : (this : This, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): U | std.ReadonlyArray<U>): std.Array<U>> | undefined,   toLocaleString :(): string extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (): string extends (args : ...any): any ? (): string : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(): string> | undefined,   every :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S> : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, array : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): this is std.Array<S>> | undefined,   lastIndexOf :(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number extends (args : ...any): any ? (searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<(searchElement : @libp2p/interface-transport.@libp2p/interface-transport.Transport): number> | undefined,   find :<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined extends std.Array<infer I> ? std.Array<@libp2p/interfaces.@libp2p/interfaces.RecursivePartial<I>> : <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined extends (args : ...any): any ? <S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined : @libp2p/interfaces.@libp2p/interfaces.RecursivePartial<<S extends @libp2p/interface-transport.@libp2p/interface-transport.Transport>(predicate : (this : void, value : @libp2p/interface-transport.@libp2p/interface-transport.Transport, index : number, obj : std.Array<@libp2p/interface-transport.@libp2p/interface-transport.Transport>): value is S): S | undefined> | undefined} */ js.Any
    ): Self = StObject.set(x, "transports", value.asInstanceOf[js.Any])
    
    inline def setTransportsUndefined: Self = StObject.set(x, "transports", js.undefined)
  }
}
