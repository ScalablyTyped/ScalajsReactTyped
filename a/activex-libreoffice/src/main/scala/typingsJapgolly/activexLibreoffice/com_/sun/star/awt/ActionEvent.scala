package typingsJapgolly.activexLibreoffice.com_.sun.star.awt

import typingsJapgolly.activexLibreoffice.com_.sun.star.lang.EventObject
import typingsJapgolly.activexLibreoffice.com_.sun.star.uno.XInterface
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * a semantic event which indicates that a component-defined action occurred.
  *
  * This high-level event is generated by a component (such as a Button) when the component-specific action occurs (such as being pressed). The event is
  * passed to every {@link XActionListener} object that registered to receive such events using the component's `addActionListener` method.
  *
  * The object that implements the {@link XActionListener} interface gets this {@link ActionEvent} when the event occurs. The listener is therefore spared
  * the details of processing individual mouse movements and mouse clicks, and can instead process a "meaningful" (semantic) event like "button pressed".
  */
trait ActionEvent
  extends StObject
     with EventObject {
  
  /** contains the command string associated with this action. */
  var ActionCommand: String
}
object ActionEvent {
  
  inline def apply(ActionCommand: String, Source: XInterface): ActionEvent = {
    val __obj = js.Dynamic.literal(ActionCommand = ActionCommand.asInstanceOf[js.Any], Source = Source.asInstanceOf[js.Any])
    __obj.asInstanceOf[ActionEvent]
  }
  
  extension [Self <: ActionEvent](x: Self) {
    
    inline def setActionCommand(value: String): Self = StObject.set(x, "ActionCommand", value.asInstanceOf[js.Any])
  }
}
