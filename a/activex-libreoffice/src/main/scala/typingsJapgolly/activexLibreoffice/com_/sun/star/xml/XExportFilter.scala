package typingsJapgolly.activexLibreoffice.com_.sun.star.xml

import japgolly.scalajs.react.Callback
import typingsJapgolly.activexLibreoffice.LibreOffice.SeqEquiv
import typingsJapgolly.activexLibreoffice.`type`
import typingsJapgolly.activexLibreoffice.com_.sun.star.beans.PropertyValue
import typingsJapgolly.activexLibreoffice.com_.sun.star.uno.XInterface
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * interface to implement for an XML-based import filter. i
  * @since OOo 1.1.2
  */
trait XExportFilter
  extends StObject
     with XInterface {
  
  /**
    * performs the import.
    *
    * The source data (location indicated by **aSourceData** ), and the XML representation of the document must be generated by calls to xocHandler (???)
    * methods.
    * @param aSourceData the {@link com.sun.star.document.MediaDescriptor} which defines the data source
    * @param msUserData Sequence of strings which contains the user data defined in the TypeDetection.xml (???)
    * @returns `TRUE` if import process is successful
    */
  def exporter(aSourceData: SeqEquiv[PropertyValue], msUserData: SeqEquiv[String]): Boolean
}
object XExportFilter {
  
  inline def apply(
    acquire: Callback,
    exporter: (SeqEquiv[PropertyValue], SeqEquiv[String]) => Boolean,
    queryInterface: `type` => Any,
    release: Callback
  ): XExportFilter = {
    val __obj = js.Dynamic.literal(acquire = acquire.toJsFn, exporter = js.Any.fromFunction2(exporter), queryInterface = js.Any.fromFunction1(queryInterface), release = release.toJsFn)
    __obj.asInstanceOf[XExportFilter]
  }
  
  extension [Self <: XExportFilter](x: Self) {
    
    inline def setExporter(value: (SeqEquiv[PropertyValue], SeqEquiv[String]) => Boolean): Self = StObject.set(x, "exporter", js.Any.fromFunction2(value))
  }
}
