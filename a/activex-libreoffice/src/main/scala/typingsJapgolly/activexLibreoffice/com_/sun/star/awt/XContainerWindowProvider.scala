package typingsJapgolly.activexLibreoffice.com_.sun.star.awt

import japgolly.scalajs.react.Callback
import typingsJapgolly.activexLibreoffice.`type`
import typingsJapgolly.activexLibreoffice.com_.sun.star.uno.XInterface
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/** provides container windows implementing the {@link com.sun.star.awt.XWindow} interface. */
trait XContainerWindowProvider
  extends StObject
     with XInterface {
  
  /**
    * creates a window for the given URL
    * @param URL is the URL.
    * @param WindowType Type of Window to be created, for future use, not supported yet
    * @param xParent a valid {@link XWindowPeer} reference which is used as a parent. This parameter must not be null.
    * @param xHandler is the interface that will be called to handle the Events that are generated by the window (and all controls placed on it) and bound to
    * @returns a window implementing the {@link com.sun.star.awt.XWindow} interface.
    * @see com.sun.star.awt.XContainerWindowEventHandler
    * @throws com::sun::star::lang::IllegalArgumentException if no window for the given URL is found or if the URL is invalid or xParent is null.
    */
  def createContainerWindow(URL: String, WindowType: String, xParent: XWindowPeer, xHandler: XInterface): XWindow
}
object XContainerWindowProvider {
  
  inline def apply(
    acquire: Callback,
    createContainerWindow: (String, String, XWindowPeer, XInterface) => XWindow,
    queryInterface: `type` => Any,
    release: Callback
  ): XContainerWindowProvider = {
    val __obj = js.Dynamic.literal(acquire = acquire.toJsFn, createContainerWindow = js.Any.fromFunction4(createContainerWindow), queryInterface = js.Any.fromFunction1(queryInterface), release = release.toJsFn)
    __obj.asInstanceOf[XContainerWindowProvider]
  }
  
  extension [Self <: XContainerWindowProvider](x: Self) {
    
    inline def setCreateContainerWindow(value: (String, String, XWindowPeer, XInterface) => XWindow): Self = StObject.set(x, "createContainerWindow", js.Any.fromFunction4(value))
  }
}
