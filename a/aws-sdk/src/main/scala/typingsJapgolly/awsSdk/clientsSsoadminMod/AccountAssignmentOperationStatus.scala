package typingsJapgolly.awsSdk.clientsSsoadminMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait AccountAssignmentOperationStatus extends StObject {
  
  /**
    * The date that the permission set was created.
    */
  var CreatedDate: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The message that contains an error or exception in case of an operation failure.
    */
  var FailureReason: js.UndefOr[Reason] = js.undefined
  
  /**
    * The ARN of the permission set. For more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference.
    */
  var PermissionSetArn: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.PermissionSetArn] = js.undefined
  
  /**
    * An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the IAM Identity Center Identity Store API Reference.
    */
  var PrincipalId: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.PrincipalId] = js.undefined
  
  /**
    * The entity type for which the assignment will be created.
    */
  var PrincipalType: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.PrincipalType] = js.undefined
  
  /**
    * The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
    */
  var RequestId: js.UndefOr[UUId] = js.undefined
  
  /**
    * The status of the permission set provisioning process.
    */
  var Status: js.UndefOr[StatusValues] = js.undefined
  
  /**
    * TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).
    */
  var TargetId: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.TargetId] = js.undefined
  
  /**
    * The entity type for which the assignment will be created.
    */
  var TargetType: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.TargetType] = js.undefined
}
object AccountAssignmentOperationStatus {
  
  inline def apply(): AccountAssignmentOperationStatus = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[AccountAssignmentOperationStatus]
  }
  
  extension [Self <: AccountAssignmentOperationStatus](x: Self) {
    
    inline def setCreatedDate(value: js.Date): Self = StObject.set(x, "CreatedDate", value.asInstanceOf[js.Any])
    
    inline def setCreatedDateUndefined: Self = StObject.set(x, "CreatedDate", js.undefined)
    
    inline def setFailureReason(value: Reason): Self = StObject.set(x, "FailureReason", value.asInstanceOf[js.Any])
    
    inline def setFailureReasonUndefined: Self = StObject.set(x, "FailureReason", js.undefined)
    
    inline def setPermissionSetArn(value: PermissionSetArn): Self = StObject.set(x, "PermissionSetArn", value.asInstanceOf[js.Any])
    
    inline def setPermissionSetArnUndefined: Self = StObject.set(x, "PermissionSetArn", js.undefined)
    
    inline def setPrincipalId(value: PrincipalId): Self = StObject.set(x, "PrincipalId", value.asInstanceOf[js.Any])
    
    inline def setPrincipalIdUndefined: Self = StObject.set(x, "PrincipalId", js.undefined)
    
    inline def setPrincipalType(value: PrincipalType): Self = StObject.set(x, "PrincipalType", value.asInstanceOf[js.Any])
    
    inline def setPrincipalTypeUndefined: Self = StObject.set(x, "PrincipalType", js.undefined)
    
    inline def setRequestId(value: UUId): Self = StObject.set(x, "RequestId", value.asInstanceOf[js.Any])
    
    inline def setRequestIdUndefined: Self = StObject.set(x, "RequestId", js.undefined)
    
    inline def setStatus(value: StatusValues): Self = StObject.set(x, "Status", value.asInstanceOf[js.Any])
    
    inline def setStatusUndefined: Self = StObject.set(x, "Status", js.undefined)
    
    inline def setTargetId(value: TargetId): Self = StObject.set(x, "TargetId", value.asInstanceOf[js.Any])
    
    inline def setTargetIdUndefined: Self = StObject.set(x, "TargetId", js.undefined)
    
    inline def setTargetType(value: TargetType): Self = StObject.set(x, "TargetType", value.asInstanceOf[js.Any])
    
    inline def setTargetTypeUndefined: Self = StObject.set(x, "TargetType", js.undefined)
  }
}
