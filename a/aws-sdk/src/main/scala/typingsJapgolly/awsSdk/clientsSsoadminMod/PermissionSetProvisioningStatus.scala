package typingsJapgolly.awsSdk.clientsSsoadminMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait PermissionSetProvisioningStatus extends StObject {
  
  /**
    * The identifier of the AWS account from which to list the assignments.
    */
  var AccountId: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.AccountId] = js.undefined
  
  /**
    * The date that the permission set was created.
    */
  var CreatedDate: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The message that contains an error or exception in case of an operation failure.
    */
  var FailureReason: js.UndefOr[Reason] = js.undefined
  
  /**
    * The ARN of the permission set that is being provisioned. For more information about ARNs, see Amazon Resource Names (ARNs) and AWS Service Namespaces in the AWS General Reference.
    */
  var PermissionSetArn: js.UndefOr[typingsJapgolly.awsSdk.clientsSsoadminMod.PermissionSetArn] = js.undefined
  
  /**
    * The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.
    */
  var RequestId: js.UndefOr[UUId] = js.undefined
  
  /**
    * The status of the permission set provisioning process.
    */
  var Status: js.UndefOr[StatusValues] = js.undefined
}
object PermissionSetProvisioningStatus {
  
  inline def apply(): PermissionSetProvisioningStatus = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[PermissionSetProvisioningStatus]
  }
  
  extension [Self <: PermissionSetProvisioningStatus](x: Self) {
    
    inline def setAccountId(value: AccountId): Self = StObject.set(x, "AccountId", value.asInstanceOf[js.Any])
    
    inline def setAccountIdUndefined: Self = StObject.set(x, "AccountId", js.undefined)
    
    inline def setCreatedDate(value: js.Date): Self = StObject.set(x, "CreatedDate", value.asInstanceOf[js.Any])
    
    inline def setCreatedDateUndefined: Self = StObject.set(x, "CreatedDate", js.undefined)
    
    inline def setFailureReason(value: Reason): Self = StObject.set(x, "FailureReason", value.asInstanceOf[js.Any])
    
    inline def setFailureReasonUndefined: Self = StObject.set(x, "FailureReason", js.undefined)
    
    inline def setPermissionSetArn(value: PermissionSetArn): Self = StObject.set(x, "PermissionSetArn", value.asInstanceOf[js.Any])
    
    inline def setPermissionSetArnUndefined: Self = StObject.set(x, "PermissionSetArn", js.undefined)
    
    inline def setRequestId(value: UUId): Self = StObject.set(x, "RequestId", value.asInstanceOf[js.Any])
    
    inline def setRequestIdUndefined: Self = StObject.set(x, "RequestId", js.undefined)
    
    inline def setStatus(value: StatusValues): Self = StObject.set(x, "Status", value.asInstanceOf[js.Any])
    
    inline def setStatusUndefined: Self = StObject.set(x, "Status", js.undefined)
  }
}
