package typingsJapgolly.awsSdk.clientsWorkspaceswebMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait UpdateTrustStoreRequest extends StObject {
  
  /**
    * A list of CA certificates to add to the trust store.
    */
  var certificatesToAdd: js.UndefOr[CertificateList] = js.undefined
  
  /**
    * A list of CA certificates to delete from a trust store.
    */
  var certificatesToDelete: js.UndefOr[CertificateThumbprintList] = js.undefined
  
  /**
    * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request.  If you do not specify a client token, one is automatically generated by the AWS SDK.
    */
  var clientToken: js.UndefOr[ClientToken] = js.undefined
  
  /**
    * The ARN of the trust store.
    */
  var trustStoreArn: ARN
}
object UpdateTrustStoreRequest {
  
  inline def apply(trustStoreArn: ARN): UpdateTrustStoreRequest = {
    val __obj = js.Dynamic.literal(trustStoreArn = trustStoreArn.asInstanceOf[js.Any])
    __obj.asInstanceOf[UpdateTrustStoreRequest]
  }
  
  extension [Self <: UpdateTrustStoreRequest](x: Self) {
    
    inline def setCertificatesToAdd(value: CertificateList): Self = StObject.set(x, "certificatesToAdd", value.asInstanceOf[js.Any])
    
    inline def setCertificatesToAddUndefined: Self = StObject.set(x, "certificatesToAdd", js.undefined)
    
    inline def setCertificatesToAddVarargs(value: CertificateAuthorityBody*): Self = StObject.set(x, "certificatesToAdd", js.Array(value*))
    
    inline def setCertificatesToDelete(value: CertificateThumbprintList): Self = StObject.set(x, "certificatesToDelete", value.asInstanceOf[js.Any])
    
    inline def setCertificatesToDeleteUndefined: Self = StObject.set(x, "certificatesToDelete", js.undefined)
    
    inline def setCertificatesToDeleteVarargs(value: CertificateThumbprint*): Self = StObject.set(x, "certificatesToDelete", js.Array(value*))
    
    inline def setClientToken(value: ClientToken): Self = StObject.set(x, "clientToken", value.asInstanceOf[js.Any])
    
    inline def setClientTokenUndefined: Self = StObject.set(x, "clientToken", js.undefined)
    
    inline def setTrustStoreArn(value: ARN): Self = StObject.set(x, "trustStoreArn", value.asInstanceOf[js.Any])
  }
}
