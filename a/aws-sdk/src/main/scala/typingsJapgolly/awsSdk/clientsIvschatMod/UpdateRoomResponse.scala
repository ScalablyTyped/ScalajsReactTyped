package typingsJapgolly.awsSdk.clientsIvschatMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait UpdateRoomResponse extends StObject {
  
  /**
    * Room ARN, from the request (if identifier was an ARN).
    */
  var arn: js.UndefOr[RoomArn] = js.undefined
  
  /**
    * Time when the room was created. This is an ISO 8601 timestamp; note that this is returned as a string.
    */
  var createTime: js.UndefOr[js.Date] = js.undefined
  
  /**
    * Room ID, generated by the system. This is a relative identifier, the part of the ARN that uniquely identifies the room.
    */
  var id: js.UndefOr[RoomID] = js.undefined
  
  /**
    * Maximum number of characters in a single message, from the request.
    */
  var maximumMessageLength: js.UndefOr[RoomMaxMessageLength] = js.undefined
  
  /**
    * Maximum number of messages per second that can be sent to the room (by all clients), from the request.
    */
  var maximumMessageRatePerSecond: js.UndefOr[RoomMaxMessageRatePerSecond] = js.undefined
  
  /**
    * Configuration information for optional review of messages.
    */
  var messageReviewHandler: js.UndefOr[MessageReviewHandler] = js.undefined
  
  /**
    * Room name, from the request.
    */
  var name: js.UndefOr[RoomName] = js.undefined
  
  /**
    * Tags attached to the resource.
    */
  var tags: js.UndefOr[Tags] = js.undefined
  
  /**
    * Time of the roomâ€™s last update. This is an ISO 8601 timestamp; note that this is returned as a string.
    */
  var updateTime: js.UndefOr[js.Date] = js.undefined
}
object UpdateRoomResponse {
  
  inline def apply(): UpdateRoomResponse = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[UpdateRoomResponse]
  }
  
  extension [Self <: UpdateRoomResponse](x: Self) {
    
    inline def setArn(value: RoomArn): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
    
    inline def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
    
    inline def setCreateTime(value: js.Date): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    inline def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    inline def setId(value: RoomID): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setMaximumMessageLength(value: RoomMaxMessageLength): Self = StObject.set(x, "maximumMessageLength", value.asInstanceOf[js.Any])
    
    inline def setMaximumMessageLengthUndefined: Self = StObject.set(x, "maximumMessageLength", js.undefined)
    
    inline def setMaximumMessageRatePerSecond(value: RoomMaxMessageRatePerSecond): Self = StObject.set(x, "maximumMessageRatePerSecond", value.asInstanceOf[js.Any])
    
    inline def setMaximumMessageRatePerSecondUndefined: Self = StObject.set(x, "maximumMessageRatePerSecond", js.undefined)
    
    inline def setMessageReviewHandler(value: MessageReviewHandler): Self = StObject.set(x, "messageReviewHandler", value.asInstanceOf[js.Any])
    
    inline def setMessageReviewHandlerUndefined: Self = StObject.set(x, "messageReviewHandler", js.undefined)
    
    inline def setName(value: RoomName): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setTags(value: Tags): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setUpdateTime(value: js.Date): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    inline def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
  }
}
