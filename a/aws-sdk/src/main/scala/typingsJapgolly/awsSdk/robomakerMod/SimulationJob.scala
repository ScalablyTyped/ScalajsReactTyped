package typingsJapgolly.awsSdk.robomakerMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait SimulationJob extends js.Object {
  /**
    * The Amazon Resource Name (ARN) of the simulation job.
    */
  var arn: js.UndefOr[Arn] = js.native
  /**
    * A unique identifier for this SimulationJob request.
    */
  var clientRequestToken: js.UndefOr[ClientRequestToken] = js.native
  /**
    * The data sources for the simulation job.
    */
  var dataSources: js.UndefOr[DataSources] = js.native
  /**
    * The failure behavior the simulation job.  Continue  Restart the simulation job in the same host instance.  Fail  Stop the simulation job and terminate the instance.  
    */
  var failureBehavior: js.UndefOr[FailureBehavior] = js.native
  /**
    * The failure code of the simulation job if it failed.
    */
  var failureCode: js.UndefOr[SimulationJobErrorCode] = js.native
  /**
    * The reason why the simulation job failed.
    */
  var failureReason: js.UndefOr[GenericString] = js.native
  /**
    * The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. 
    */
  var iamRole: js.UndefOr[IamRole] = js.native
  /**
    * The time, in milliseconds since the epoch, when the simulation job was last started.
    */
  var lastStartedAt: js.UndefOr[js.Date] = js.native
  /**
    * The time, in milliseconds since the epoch, when the simulation job was last updated.
    */
  var lastUpdatedAt: js.UndefOr[js.Date] = js.native
  /**
    * The logging configuration.
    */
  var loggingConfig: js.UndefOr[LoggingConfig] = js.native
  /**
    * The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.
    */
  var maxJobDurationInSeconds: js.UndefOr[JobDuration] = js.native
  /**
    * The name of the simulation job.
    */
  var name: js.UndefOr[Name] = js.native
  /**
    * Information about a network interface.
    */
  var networkInterface: js.UndefOr[NetworkInterface] = js.native
  /**
    * Location for output files generated by the simulation job.
    */
  var outputLocation: js.UndefOr[OutputLocation] = js.native
  /**
    * A list of robot applications.
    */
  var robotApplications: js.UndefOr[RobotApplicationConfigs] = js.native
  /**
    * A list of simulation applications.
    */
  var simulationApplications: js.UndefOr[SimulationApplicationConfigs] = js.native
  /**
    * The simulation job execution duration in milliseconds.
    */
  var simulationTimeMillis: js.UndefOr[SimulationTimeMillis] = js.native
  /**
    * Status of the simulation job.
    */
  var status: js.UndefOr[SimulationJobStatus] = js.native
  /**
    * A map that contains tag keys and tag values that are attached to the simulation job.
    */
  var tags: js.UndefOr[TagMap] = js.native
  /**
    * VPC configuration information.
    */
  var vpcConfig: js.UndefOr[VPCConfigResponse] = js.native
}

object SimulationJob {
  @scala.inline
  def apply(
    arn: Arn = null,
    clientRequestToken: ClientRequestToken = null,
    dataSources: DataSources = null,
    failureBehavior: FailureBehavior = null,
    failureCode: SimulationJobErrorCode = null,
    failureReason: GenericString = null,
    iamRole: IamRole = null,
    lastStartedAt: js.Date = null,
    lastUpdatedAt: js.Date = null,
    loggingConfig: LoggingConfig = null,
    maxJobDurationInSeconds: Int | Double = null,
    name: Name = null,
    networkInterface: NetworkInterface = null,
    outputLocation: OutputLocation = null,
    robotApplications: RobotApplicationConfigs = null,
    simulationApplications: SimulationApplicationConfigs = null,
    simulationTimeMillis: Int | Double = null,
    status: SimulationJobStatus = null,
    tags: TagMap = null,
    vpcConfig: VPCConfigResponse = null
  ): SimulationJob = {
    val __obj = js.Dynamic.literal()
    if (arn != null) __obj.updateDynamic("arn")(arn.asInstanceOf[js.Any])
    if (clientRequestToken != null) __obj.updateDynamic("clientRequestToken")(clientRequestToken.asInstanceOf[js.Any])
    if (dataSources != null) __obj.updateDynamic("dataSources")(dataSources.asInstanceOf[js.Any])
    if (failureBehavior != null) __obj.updateDynamic("failureBehavior")(failureBehavior.asInstanceOf[js.Any])
    if (failureCode != null) __obj.updateDynamic("failureCode")(failureCode.asInstanceOf[js.Any])
    if (failureReason != null) __obj.updateDynamic("failureReason")(failureReason.asInstanceOf[js.Any])
    if (iamRole != null) __obj.updateDynamic("iamRole")(iamRole.asInstanceOf[js.Any])
    if (lastStartedAt != null) __obj.updateDynamic("lastStartedAt")(lastStartedAt.asInstanceOf[js.Any])
    if (lastUpdatedAt != null) __obj.updateDynamic("lastUpdatedAt")(lastUpdatedAt.asInstanceOf[js.Any])
    if (loggingConfig != null) __obj.updateDynamic("loggingConfig")(loggingConfig.asInstanceOf[js.Any])
    if (maxJobDurationInSeconds != null) __obj.updateDynamic("maxJobDurationInSeconds")(maxJobDurationInSeconds.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (networkInterface != null) __obj.updateDynamic("networkInterface")(networkInterface.asInstanceOf[js.Any])
    if (outputLocation != null) __obj.updateDynamic("outputLocation")(outputLocation.asInstanceOf[js.Any])
    if (robotApplications != null) __obj.updateDynamic("robotApplications")(robotApplications.asInstanceOf[js.Any])
    if (simulationApplications != null) __obj.updateDynamic("simulationApplications")(simulationApplications.asInstanceOf[js.Any])
    if (simulationTimeMillis != null) __obj.updateDynamic("simulationTimeMillis")(simulationTimeMillis.asInstanceOf[js.Any])
    if (status != null) __obj.updateDynamic("status")(status.asInstanceOf[js.Any])
    if (tags != null) __obj.updateDynamic("tags")(tags.asInstanceOf[js.Any])
    if (vpcConfig != null) __obj.updateDynamic("vpcConfig")(vpcConfig.asInstanceOf[js.Any])
    __obj.asInstanceOf[SimulationJob]
  }
}

