package typingsJapgolly.awsSdk.clientsCodegurureviewerMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait RecommendationSummary extends StObject {
  
  /**
    * A description of the recommendation generated by CodeGuru Reviewer for the lines of code between the start line and the end line.
    */
  var Description: js.UndefOr[Text] = js.undefined
  
  /**
    * Last line where the recommendation is applicable in the source commit or source branch. For a single line comment the start line and end line values are the same.
    */
  var EndLine: js.UndefOr[LineNumber] = js.undefined
  
  /**
    * Name of the file on which a recommendation is provided.
    */
  var FilePath: js.UndefOr[typingsJapgolly.awsSdk.clientsCodegurureviewerMod.FilePath] = js.undefined
  
  /**
    * The type of a recommendation.
    */
  var RecommendationCategory: js.UndefOr[typingsJapgolly.awsSdk.clientsCodegurureviewerMod.RecommendationCategory] = js.undefined
  
  /**
    * The recommendation ID that can be used to track the provided recommendations. Later on it can be used to collect the feedback.
    */
  var RecommendationId: js.UndefOr[typingsJapgolly.awsSdk.clientsCodegurureviewerMod.RecommendationId] = js.undefined
  
  /**
    * Metadata about a rule. Rule metadata includes an ID, a name, a list of tags, and a short and long description. CodeGuru Reviewer uses rules to analyze code. A rule's recommendation is included in analysis results if code is detected that violates the rule.
    */
  var RuleMetadata: js.UndefOr[typingsJapgolly.awsSdk.clientsCodegurureviewerMod.RuleMetadata] = js.undefined
  
  /**
    * The severity of the issue in the code that generated this recommendation.
    */
  var Severity: js.UndefOr[typingsJapgolly.awsSdk.clientsCodegurureviewerMod.Severity] = js.undefined
  
  /**
    * Start line from where the recommendation is applicable in the source commit or source branch.
    */
  var StartLine: js.UndefOr[LineNumber] = js.undefined
}
object RecommendationSummary {
  
  inline def apply(): RecommendationSummary = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[RecommendationSummary]
  }
  
  extension [Self <: RecommendationSummary](x: Self) {
    
    inline def setDescription(value: Text): Self = StObject.set(x, "Description", value.asInstanceOf[js.Any])
    
    inline def setDescriptionUndefined: Self = StObject.set(x, "Description", js.undefined)
    
    inline def setEndLine(value: LineNumber): Self = StObject.set(x, "EndLine", value.asInstanceOf[js.Any])
    
    inline def setEndLineUndefined: Self = StObject.set(x, "EndLine", js.undefined)
    
    inline def setFilePath(value: FilePath): Self = StObject.set(x, "FilePath", value.asInstanceOf[js.Any])
    
    inline def setFilePathUndefined: Self = StObject.set(x, "FilePath", js.undefined)
    
    inline def setRecommendationCategory(value: RecommendationCategory): Self = StObject.set(x, "RecommendationCategory", value.asInstanceOf[js.Any])
    
    inline def setRecommendationCategoryUndefined: Self = StObject.set(x, "RecommendationCategory", js.undefined)
    
    inline def setRecommendationId(value: RecommendationId): Self = StObject.set(x, "RecommendationId", value.asInstanceOf[js.Any])
    
    inline def setRecommendationIdUndefined: Self = StObject.set(x, "RecommendationId", js.undefined)
    
    inline def setRuleMetadata(value: RuleMetadata): Self = StObject.set(x, "RuleMetadata", value.asInstanceOf[js.Any])
    
    inline def setRuleMetadataUndefined: Self = StObject.set(x, "RuleMetadata", js.undefined)
    
    inline def setSeverity(value: Severity): Self = StObject.set(x, "Severity", value.asInstanceOf[js.Any])
    
    inline def setSeverityUndefined: Self = StObject.set(x, "Severity", js.undefined)
    
    inline def setStartLine(value: LineNumber): Self = StObject.set(x, "StartLine", value.asInstanceOf[js.Any])
    
    inline def setStartLineUndefined: Self = StObject.set(x, "StartLine", js.undefined)
  }
}
