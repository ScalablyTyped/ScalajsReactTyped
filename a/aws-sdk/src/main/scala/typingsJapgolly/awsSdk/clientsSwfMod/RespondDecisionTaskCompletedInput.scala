package typingsJapgolly.awsSdk.clientsSwfMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait RespondDecisionTaskCompletedInput extends StObject {
  
  /**
    * The list of decisions (possibly empty) made by the decider while processing this decision task. See the docs for the Decision structure for details.
    */
  var decisions: js.UndefOr[DecisionList] = js.undefined
  
  /**
    * User defined context to add to workflow execution.
    */
  var executionContext: js.UndefOr[Data] = js.undefined
  
  /**
    * The taskToken from the DecisionTask.   taskToken is generated by the service and should be treated as an opaque value. If the task is passed to another process, its taskToken must also be passed. This enables it to provide its progress and respond with results. 
    */
  var taskToken: TaskToken
}
object RespondDecisionTaskCompletedInput {
  
  inline def apply(taskToken: TaskToken): RespondDecisionTaskCompletedInput = {
    val __obj = js.Dynamic.literal(taskToken = taskToken.asInstanceOf[js.Any])
    __obj.asInstanceOf[RespondDecisionTaskCompletedInput]
  }
  
  extension [Self <: RespondDecisionTaskCompletedInput](x: Self) {
    
    inline def setDecisions(value: DecisionList): Self = StObject.set(x, "decisions", value.asInstanceOf[js.Any])
    
    inline def setDecisionsUndefined: Self = StObject.set(x, "decisions", js.undefined)
    
    inline def setDecisionsVarargs(value: Decision*): Self = StObject.set(x, "decisions", js.Array(value*))
    
    inline def setExecutionContext(value: Data): Self = StObject.set(x, "executionContext", value.asInstanceOf[js.Any])
    
    inline def setExecutionContextUndefined: Self = StObject.set(x, "executionContext", js.undefined)
    
    inline def setTaskToken(value: TaskToken): Self = StObject.set(x, "taskToken", value.asInstanceOf[js.Any])
  }
}
