package typingsJapgolly.awsSdk.clientsPiMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait DimensionGroup extends StObject {
  
  /**
    * A list of specific dimensions from a dimension group. If this parameter is not present, then it signifies that all of the dimensions in the group were requested, or are present in the response. Valid values for elements in the Dimensions array are:    db.application.name - The name of the application that is connected to the database. Valid values are as follows:    Aurora PostgreSQL   Amazon RDS PostgreSQL   Amazon DocumentDB      db.host.id - The host ID of the connected client (all engines).    db.host.name - The host name of the connected client (all engines).    db.name - The name of the database to which the client is connected. Valid values are as follows:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Aurora MySQL   Amazon RDS MySQL   Amazon RDS MariaDB   Amazon DocumentDB      db.query.id - The query ID generated by Performance Insights (only Amazon DocumentDB).    db.query.db_id - The query ID generated by the database (only Amazon DocumentDB).    db.query.statement - The text of the query that is being run (only Amazon DocumentDB).    db.query.tokenized_id     db.query.tokenized.id - The query digest ID generated by Performance Insights (only Amazon DocumentDB).    db.query.tokenized.db_id - The query digest ID generated by Performance Insights (only Amazon DocumentDB).    db.query.tokenized.statement - The text of the query digest (only Amazon DocumentDB).    db.session_type.name - The type of the current session (only Amazon DocumentDB).    db.sql.id - The hash of the full, non-tokenized SQL statement generated by Performance Insights (all engines except Amazon DocumentDB).    db.sql.db_id - Either the SQL ID generated by the database engine, or a value generated by Performance Insights that begins with pi- (all engines except Amazon DocumentDB).    db.sql.statement - The full text of the SQL statement that is running, as in SELECT * FROM employees (all engines except Amazon DocumentDB)    db.sql.tokenized_id     db.sql_tokenized.id - The hash of the SQL digest generated by Performance Insights (all engines except Amazon DocumentDB). In the console, db.sql_tokenized.id is called the Support ID because Amazon Web Services Support can look at this data to help you troubleshoot database issues.    db.sql_tokenized.db_id - Either the native database ID used to refer to the SQL statement, or a synthetic ID such as pi-2372568224 that Performance Insights generates if the native database ID isn't available (all engines except Amazon DocumentDB).    db.sql_tokenized.statement - The text of the SQL digest, as in SELECT * FROM employees WHERE employee_id = ? (all engines except Amazon DocumentDB)    db.user.id - The ID of the user logged in to the database (all engines except Amazon DocumentDB).    db.user.name - The name of the user logged in to the database (all engines except Amazon DocumentDB).    db.wait_event.name - The event for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_event.type - The type of event for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_event_type.name - The name of the event type for which the backend is waiting (all engines except Amazon DocumentDB).    db.wait_state.name - The event for which the backend is waiting (only Amazon DocumentDB).  
    */
  var Dimensions: js.UndefOr[RequestStringList] = js.undefined
  
  /**
    * The name of the dimension group. Valid values are as follows:    db - The name of the database to which the client is connected. The following values are permitted:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Aurora MySQL   Amazon RDS MySQL   Amazon RDS MariaDB   Amazon DocumentDB      db.application - The name of the application that is connected to the database. The following values are permitted:   Aurora PostgreSQL   Amazon RDS PostgreSQL   Amazon DocumentDB      db.host - The host name of the connected client (all engines).    db.query - The query that is currently running (only Amazon DocumentDB).    db.query_tokenized - The digest query (only Amazon DocumentDB).    db.session_type - The type of the current session (only Aurora PostgreSQL and RDS PostgreSQL).    db.sql - The text of the SQL statement that is currently running (all engines except Amazon DocumentDB).    db.sql_tokenized - The SQL digest (all engines except Amazon DocumentDB).    db.user - The user logged in to the database (all engines except Amazon DocumentDB).    db.wait_event - The event for which the database backend is waiting (all engines except Amazon DocumentDB).    db.wait_event_type - The type of event for which the database backend is waiting (all engines except Amazon DocumentDB).    db.wait_state - The event for which the database backend is waiting (only Amazon DocumentDB).  
    */
  var Group: RequestString
  
  /**
    * The maximum number of items to fetch for this dimension group.
    */
  var Limit: js.UndefOr[typingsJapgolly.awsSdk.clientsPiMod.Limit] = js.undefined
}
object DimensionGroup {
  
  inline def apply(Group: RequestString): DimensionGroup = {
    val __obj = js.Dynamic.literal(Group = Group.asInstanceOf[js.Any])
    __obj.asInstanceOf[DimensionGroup]
  }
  
  extension [Self <: DimensionGroup](x: Self) {
    
    inline def setDimensions(value: RequestStringList): Self = StObject.set(x, "Dimensions", value.asInstanceOf[js.Any])
    
    inline def setDimensionsUndefined: Self = StObject.set(x, "Dimensions", js.undefined)
    
    inline def setDimensionsVarargs(value: RequestString*): Self = StObject.set(x, "Dimensions", js.Array(value*))
    
    inline def setGroup(value: RequestString): Self = StObject.set(x, "Group", value.asInstanceOf[js.Any])
    
    inline def setLimit(value: Limit): Self = StObject.set(x, "Limit", value.asInstanceOf[js.Any])
    
    inline def setLimitUndefined: Self = StObject.set(x, "Limit", js.undefined)
  }
}
