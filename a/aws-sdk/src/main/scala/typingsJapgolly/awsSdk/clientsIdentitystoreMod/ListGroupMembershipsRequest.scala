package typingsJapgolly.awsSdk.clientsIdentitystoreMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait ListGroupMembershipsRequest extends StObject {
  
  /**
    * The identifier for a group in the identity store.
    */
  var GroupId: ResourceId
  
  /**
    * The globally unique identifier for the identity store.
    */
  var IdentityStoreId: typingsJapgolly.awsSdk.clientsIdentitystoreMod.IdentityStoreId
  
  /**
    * The maximum number of results to be returned per request. This parameter is used in all List requests to specify how many results to return in one page.
    */
  var MaxResults: js.UndefOr[typingsJapgolly.awsSdk.clientsIdentitystoreMod.MaxResults] = js.undefined
  
  /**
    * The pagination token used for the ListUsers, ListGroups and ListGroupMemberships API operations. This value is generated by the identity store service. It is returned in the API response if the total results are more than the size of one page. This token is also returned when it is used in the API request to search for the next page.
    */
  var NextToken: js.UndefOr[typingsJapgolly.awsSdk.clientsIdentitystoreMod.NextToken] = js.undefined
}
object ListGroupMembershipsRequest {
  
  inline def apply(GroupId: ResourceId, IdentityStoreId: IdentityStoreId): ListGroupMembershipsRequest = {
    val __obj = js.Dynamic.literal(GroupId = GroupId.asInstanceOf[js.Any], IdentityStoreId = IdentityStoreId.asInstanceOf[js.Any])
    __obj.asInstanceOf[ListGroupMembershipsRequest]
  }
  
  extension [Self <: ListGroupMembershipsRequest](x: Self) {
    
    inline def setGroupId(value: ResourceId): Self = StObject.set(x, "GroupId", value.asInstanceOf[js.Any])
    
    inline def setIdentityStoreId(value: IdentityStoreId): Self = StObject.set(x, "IdentityStoreId", value.asInstanceOf[js.Any])
    
    inline def setMaxResults(value: MaxResults): Self = StObject.set(x, "MaxResults", value.asInstanceOf[js.Any])
    
    inline def setMaxResultsUndefined: Self = StObject.set(x, "MaxResults", js.undefined)
    
    inline def setNextToken(value: NextToken): Self = StObject.set(x, "NextToken", value.asInstanceOf[js.Any])
    
    inline def setNextTokenUndefined: Self = StObject.set(x, "NextToken", js.undefined)
  }
}
