package typingsJapgolly.awsSdk.clientsApigatewayv2Mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait CreateRouteRequest extends StObject {
  
  /**
    * The API identifier.
    */
  var ApiId: string
  
  /**
    * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
    */
  var ApiKeyRequired: js.UndefOr[boolean] = js.undefined
  
  /**
    * The authorization scopes supported by this route.
    */
  var AuthorizationScopes: js.UndefOr[typingsJapgolly.awsSdk.clientsApigatewayv2Mod.AuthorizationScopes] = js.undefined
  
  /**
    * The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
    */
  var AuthorizationType: js.UndefOr[typingsJapgolly.awsSdk.clientsApigatewayv2Mod.AuthorizationType] = js.undefined
  
  /**
    * The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.
    */
  var AuthorizerId: js.UndefOr[Id] = js.undefined
  
  /**
    * The model selection expression for the route. Supported only for WebSocket APIs.
    */
  var ModelSelectionExpression: js.UndefOr[SelectionExpression] = js.undefined
  
  /**
    * The operation name for the route.
    */
  var OperationName: js.UndefOr[StringWithLengthBetween1And64] = js.undefined
  
  /**
    * The request models for the route. Supported only for WebSocket APIs.
    */
  var RequestModels: js.UndefOr[RouteModels] = js.undefined
  
  /**
    * The request parameters for the route. Supported only for WebSocket APIs.
    */
  var RequestParameters: js.UndefOr[RouteParameters] = js.undefined
  
  /**
    * The route key for the route.
    */
  var RouteKey: SelectionKey
  
  /**
    * The route response selection expression for the route. Supported only for WebSocket APIs.
    */
  var RouteResponseSelectionExpression: js.UndefOr[SelectionExpression] = js.undefined
  
  /**
    * The target for the route.
    */
  var Target: js.UndefOr[StringWithLengthBetween1And128] = js.undefined
}
object CreateRouteRequest {
  
  inline def apply(ApiId: string, RouteKey: SelectionKey): CreateRouteRequest = {
    val __obj = js.Dynamic.literal(ApiId = ApiId.asInstanceOf[js.Any], RouteKey = RouteKey.asInstanceOf[js.Any])
    __obj.asInstanceOf[CreateRouteRequest]
  }
  
  extension [Self <: CreateRouteRequest](x: Self) {
    
    inline def setApiId(value: string): Self = StObject.set(x, "ApiId", value.asInstanceOf[js.Any])
    
    inline def setApiKeyRequired(value: boolean): Self = StObject.set(x, "ApiKeyRequired", value.asInstanceOf[js.Any])
    
    inline def setApiKeyRequiredUndefined: Self = StObject.set(x, "ApiKeyRequired", js.undefined)
    
    inline def setAuthorizationScopes(value: AuthorizationScopes): Self = StObject.set(x, "AuthorizationScopes", value.asInstanceOf[js.Any])
    
    inline def setAuthorizationScopesUndefined: Self = StObject.set(x, "AuthorizationScopes", js.undefined)
    
    inline def setAuthorizationScopesVarargs(value: StringWithLengthBetween1And64*): Self = StObject.set(x, "AuthorizationScopes", js.Array(value*))
    
    inline def setAuthorizationType(value: AuthorizationType): Self = StObject.set(x, "AuthorizationType", value.asInstanceOf[js.Any])
    
    inline def setAuthorizationTypeUndefined: Self = StObject.set(x, "AuthorizationType", js.undefined)
    
    inline def setAuthorizerId(value: Id): Self = StObject.set(x, "AuthorizerId", value.asInstanceOf[js.Any])
    
    inline def setAuthorizerIdUndefined: Self = StObject.set(x, "AuthorizerId", js.undefined)
    
    inline def setModelSelectionExpression(value: SelectionExpression): Self = StObject.set(x, "ModelSelectionExpression", value.asInstanceOf[js.Any])
    
    inline def setModelSelectionExpressionUndefined: Self = StObject.set(x, "ModelSelectionExpression", js.undefined)
    
    inline def setOperationName(value: StringWithLengthBetween1And64): Self = StObject.set(x, "OperationName", value.asInstanceOf[js.Any])
    
    inline def setOperationNameUndefined: Self = StObject.set(x, "OperationName", js.undefined)
    
    inline def setRequestModels(value: RouteModels): Self = StObject.set(x, "RequestModels", value.asInstanceOf[js.Any])
    
    inline def setRequestModelsUndefined: Self = StObject.set(x, "RequestModels", js.undefined)
    
    inline def setRequestParameters(value: RouteParameters): Self = StObject.set(x, "RequestParameters", value.asInstanceOf[js.Any])
    
    inline def setRequestParametersUndefined: Self = StObject.set(x, "RequestParameters", js.undefined)
    
    inline def setRouteKey(value: SelectionKey): Self = StObject.set(x, "RouteKey", value.asInstanceOf[js.Any])
    
    inline def setRouteResponseSelectionExpression(value: SelectionExpression): Self = StObject.set(x, "RouteResponseSelectionExpression", value.asInstanceOf[js.Any])
    
    inline def setRouteResponseSelectionExpressionUndefined: Self = StObject.set(x, "RouteResponseSelectionExpression", js.undefined)
    
    inline def setTarget(value: StringWithLengthBetween1And128): Self = StObject.set(x, "Target", value.asInstanceOf[js.Any])
    
    inline def setTargetUndefined: Self = StObject.set(x, "Target", js.undefined)
  }
}
