package typingsJapgolly.awsSdk.transferMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait UpdateServerRequest extends js.Object {
  /**
    * The virtual private cloud (VPC) endpoint settings that are configured for your SFTP server. With a VPC endpoint, you can restrict access to your SFTP server to resources only within your VPC. To control incoming internet traffic, you will need to associate one or more Elastic IP addresses with your server's endpoint. 
    */
  var EndpointDetails: js.UndefOr[typingsJapgolly.awsSdk.transferMod.EndpointDetails] = js.native
  /**
    * The type of endpoint that you want your SFTP server to connect to. You can choose to connect to the public internet or a virtual private cloud (VPC) endpoint. With a VPC endpoint, your SFTP server isn't accessible over the public internet. 
    */
  var EndpointType: js.UndefOr[typingsJapgolly.awsSdk.transferMod.EndpointType] = js.native
  /**
    * The RSA private key as generated by ssh-keygen -N "" -f my-new-server-key.  If you aren't planning to migrate existing users from an existing SFTP server to a new AWS SFTP server, don't update the host key. Accidentally changing a server's host key can be disruptive.   For more information, see "https://docs.aws.amazon.com/transfer/latest/userguide/configuring-servers.html#change-host-key" in the AWS SFTP User Guide. 
    */
  var HostKey: js.UndefOr[typingsJapgolly.awsSdk.transferMod.HostKey] = js.native
  /**
    * This response parameter is an array containing all of the information required to call a customer's authentication API method.
    */
  var IdentityProviderDetails: js.UndefOr[typingsJapgolly.awsSdk.transferMod.IdentityProviderDetails] = js.native
  /**
    * A value that changes the AWS Identity and Access Management (IAM) role that allows Amazon S3 events to be logged in Amazon CloudWatch, turning logging on or off.
    */
  var LoggingRole: js.UndefOr[NullableRole] = js.native
  /**
    * A system-assigned unique identifier for an SFTP server instance that the user account is assigned to.
    */
  var ServerId: typingsJapgolly.awsSdk.transferMod.ServerId = js.native
}

object UpdateServerRequest {
  @scala.inline
  def apply(
    ServerId: ServerId,
    EndpointDetails: EndpointDetails = null,
    EndpointType: EndpointType = null,
    HostKey: HostKey = null,
    IdentityProviderDetails: IdentityProviderDetails = null,
    LoggingRole: NullableRole = null
  ): UpdateServerRequest = {
    val __obj = js.Dynamic.literal(ServerId = ServerId.asInstanceOf[js.Any])
    if (EndpointDetails != null) __obj.updateDynamic("EndpointDetails")(EndpointDetails.asInstanceOf[js.Any])
    if (EndpointType != null) __obj.updateDynamic("EndpointType")(EndpointType.asInstanceOf[js.Any])
    if (HostKey != null) __obj.updateDynamic("HostKey")(HostKey.asInstanceOf[js.Any])
    if (IdentityProviderDetails != null) __obj.updateDynamic("IdentityProviderDetails")(IdentityProviderDetails.asInstanceOf[js.Any])
    if (LoggingRole != null) __obj.updateDynamic("LoggingRole")(LoggingRole.asInstanceOf[js.Any])
    __obj.asInstanceOf[UpdateServerRequest]
  }
}

