package typingsJapgolly.awsSdk.clientsSecurityhubMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait Vulnerability extends StObject {
  
  /**
    * CVSS scores from the advisory related to the vulnerability.
    */
  var Cvss: js.UndefOr[CvssList] = js.undefined
  
  /**
    * Specifies if all vulnerable packages in a finding have a value for FixedInVersion and Remediation. This field is evaluated for each vulnerability Id based on the number of vulnerable packages that have a value for both FixedInVersion and Remediation. Valid values are as follows:    YES if all vulnerable packages have a value for both FixedInVersion and Remediation     NO if no vulnerable packages have a value for FixedInVersion and Remediation     PARTIAL otherwise  
    */
  var FixAvailable: js.UndefOr[VulnerabilityFixAvailable] = js.undefined
  
  /**
    * The identifier of the vulnerability.
    */
  var Id: NonEmptyString
  
  /**
    * A list of URLs that provide additional information about the vulnerability.
    */
  var ReferenceUrls: js.UndefOr[StringList] = js.undefined
  
  /**
    * List of vulnerabilities that are related to this vulnerability.
    */
  var RelatedVulnerabilities: js.UndefOr[StringList] = js.undefined
  
  /**
    * Information about the vendor that generates the vulnerability report.
    */
  var Vendor: js.UndefOr[VulnerabilityVendor] = js.undefined
  
  /**
    * List of software packages that have the vulnerability.
    */
  var VulnerablePackages: js.UndefOr[SoftwarePackageList] = js.undefined
}
object Vulnerability {
  
  inline def apply(Id: NonEmptyString): Vulnerability = {
    val __obj = js.Dynamic.literal(Id = Id.asInstanceOf[js.Any])
    __obj.asInstanceOf[Vulnerability]
  }
  
  extension [Self <: Vulnerability](x: Self) {
    
    inline def setCvss(value: CvssList): Self = StObject.set(x, "Cvss", value.asInstanceOf[js.Any])
    
    inline def setCvssUndefined: Self = StObject.set(x, "Cvss", js.undefined)
    
    inline def setCvssVarargs(value: Cvss*): Self = StObject.set(x, "Cvss", js.Array(value*))
    
    inline def setFixAvailable(value: VulnerabilityFixAvailable): Self = StObject.set(x, "FixAvailable", value.asInstanceOf[js.Any])
    
    inline def setFixAvailableUndefined: Self = StObject.set(x, "FixAvailable", js.undefined)
    
    inline def setId(value: NonEmptyString): Self = StObject.set(x, "Id", value.asInstanceOf[js.Any])
    
    inline def setReferenceUrls(value: StringList): Self = StObject.set(x, "ReferenceUrls", value.asInstanceOf[js.Any])
    
    inline def setReferenceUrlsUndefined: Self = StObject.set(x, "ReferenceUrls", js.undefined)
    
    inline def setReferenceUrlsVarargs(value: NonEmptyString*): Self = StObject.set(x, "ReferenceUrls", js.Array(value*))
    
    inline def setRelatedVulnerabilities(value: StringList): Self = StObject.set(x, "RelatedVulnerabilities", value.asInstanceOf[js.Any])
    
    inline def setRelatedVulnerabilitiesUndefined: Self = StObject.set(x, "RelatedVulnerabilities", js.undefined)
    
    inline def setRelatedVulnerabilitiesVarargs(value: NonEmptyString*): Self = StObject.set(x, "RelatedVulnerabilities", js.Array(value*))
    
    inline def setVendor(value: VulnerabilityVendor): Self = StObject.set(x, "Vendor", value.asInstanceOf[js.Any])
    
    inline def setVendorUndefined: Self = StObject.set(x, "Vendor", js.undefined)
    
    inline def setVulnerablePackages(value: SoftwarePackageList): Self = StObject.set(x, "VulnerablePackages", value.asInstanceOf[js.Any])
    
    inline def setVulnerablePackagesUndefined: Self = StObject.set(x, "VulnerablePackages", js.undefined)
    
    inline def setVulnerablePackagesVarargs(value: SoftwarePackage*): Self = StObject.set(x, "VulnerablePackages", js.Array(value*))
  }
}
