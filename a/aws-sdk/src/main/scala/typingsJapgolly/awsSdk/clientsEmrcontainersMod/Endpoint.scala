package typingsJapgolly.awsSdk.clientsEmrcontainersMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait Endpoint extends StObject {
  
  /**
    * The ARN of the endpoint.
    */
  var arn: js.UndefOr[EndpointArn] = js.undefined
  
  /**
    * The certificate ARN of the endpoint. This field is under deprecation and will be removed in future.
    */
  var certificateArn: js.UndefOr[ACMCertArn] = js.undefined
  
  /**
    * The certificate generated by emr control plane on customer behalf to secure the managed endpoint.
    */
  var certificateAuthority: js.UndefOr[Certificate] = js.undefined
  
  /**
    * The configuration settings that are used to override existing configurations for endpoints.
    */
  var configurationOverrides: js.UndefOr[ConfigurationOverrides] = js.undefined
  
  /**
    * The date and time when the endpoint was created.
    */
  var createdAt: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The execution role ARN of the endpoint.
    */
  var executionRoleArn: js.UndefOr[IAMRoleArn] = js.undefined
  
  /**
    *  The reasons why the endpoint has failed. 
    */
  var failureReason: js.UndefOr[FailureReason] = js.undefined
  
  /**
    * The ID of the endpoint.
    */
  var id: js.UndefOr[ResourceIdString] = js.undefined
  
  /**
    * The name of the endpoint.
    */
  var name: js.UndefOr[ResourceNameString] = js.undefined
  
  /**
    * The EMR release version to be used for the endpoint.
    */
  var releaseLabel: js.UndefOr[ReleaseLabel] = js.undefined
  
  /**
    * The security group configuration of the endpoint. 
    */
  var securityGroup: js.UndefOr[String256] = js.undefined
  
  /**
    * The server URL of the endpoint.
    */
  var serverUrl: js.UndefOr[UriString] = js.undefined
  
  /**
    * The state of the endpoint.
    */
  var state: js.UndefOr[EndpointState] = js.undefined
  
  /**
    *  Additional details of the endpoint state. 
    */
  var stateDetails: js.UndefOr[String256] = js.undefined
  
  /**
    * The subnet IDs of the endpoint. 
    */
  var subnetIds: js.UndefOr[SubnetIds] = js.undefined
  
  /**
    * The tags of the endpoint. 
    */
  var tags: js.UndefOr[TagMap] = js.undefined
  
  /**
    * The type of the endpoint.
    */
  var `type`: js.UndefOr[EndpointType] = js.undefined
  
  /**
    * The ID of the endpoint's virtual cluster.
    */
  var virtualClusterId: js.UndefOr[ResourceIdString] = js.undefined
}
object Endpoint {
  
  inline def apply(): Endpoint = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Endpoint]
  }
  
  extension [Self <: Endpoint](x: Self) {
    
    inline def setArn(value: EndpointArn): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
    
    inline def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
    
    inline def setCertificateArn(value: ACMCertArn): Self = StObject.set(x, "certificateArn", value.asInstanceOf[js.Any])
    
    inline def setCertificateArnUndefined: Self = StObject.set(x, "certificateArn", js.undefined)
    
    inline def setCertificateAuthority(value: Certificate): Self = StObject.set(x, "certificateAuthority", value.asInstanceOf[js.Any])
    
    inline def setCertificateAuthorityUndefined: Self = StObject.set(x, "certificateAuthority", js.undefined)
    
    inline def setConfigurationOverrides(value: ConfigurationOverrides): Self = StObject.set(x, "configurationOverrides", value.asInstanceOf[js.Any])
    
    inline def setConfigurationOverridesUndefined: Self = StObject.set(x, "configurationOverrides", js.undefined)
    
    inline def setCreatedAt(value: js.Date): Self = StObject.set(x, "createdAt", value.asInstanceOf[js.Any])
    
    inline def setCreatedAtUndefined: Self = StObject.set(x, "createdAt", js.undefined)
    
    inline def setExecutionRoleArn(value: IAMRoleArn): Self = StObject.set(x, "executionRoleArn", value.asInstanceOf[js.Any])
    
    inline def setExecutionRoleArnUndefined: Self = StObject.set(x, "executionRoleArn", js.undefined)
    
    inline def setFailureReason(value: FailureReason): Self = StObject.set(x, "failureReason", value.asInstanceOf[js.Any])
    
    inline def setFailureReasonUndefined: Self = StObject.set(x, "failureReason", js.undefined)
    
    inline def setId(value: ResourceIdString): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    inline def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    inline def setName(value: ResourceNameString): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setReleaseLabel(value: ReleaseLabel): Self = StObject.set(x, "releaseLabel", value.asInstanceOf[js.Any])
    
    inline def setReleaseLabelUndefined: Self = StObject.set(x, "releaseLabel", js.undefined)
    
    inline def setSecurityGroup(value: String256): Self = StObject.set(x, "securityGroup", value.asInstanceOf[js.Any])
    
    inline def setSecurityGroupUndefined: Self = StObject.set(x, "securityGroup", js.undefined)
    
    inline def setServerUrl(value: UriString): Self = StObject.set(x, "serverUrl", value.asInstanceOf[js.Any])
    
    inline def setServerUrlUndefined: Self = StObject.set(x, "serverUrl", js.undefined)
    
    inline def setState(value: EndpointState): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    inline def setStateDetails(value: String256): Self = StObject.set(x, "stateDetails", value.asInstanceOf[js.Any])
    
    inline def setStateDetailsUndefined: Self = StObject.set(x, "stateDetails", js.undefined)
    
    inline def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
    
    inline def setSubnetIds(value: SubnetIds): Self = StObject.set(x, "subnetIds", value.asInstanceOf[js.Any])
    
    inline def setSubnetIdsUndefined: Self = StObject.set(x, "subnetIds", js.undefined)
    
    inline def setSubnetIdsVarargs(value: String256*): Self = StObject.set(x, "subnetIds", js.Array(value*))
    
    inline def setTags(value: TagMap): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setType(value: EndpointType): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
    
    inline def setVirtualClusterId(value: ResourceIdString): Self = StObject.set(x, "virtualClusterId", value.asInstanceOf[js.Any])
    
    inline def setVirtualClusterIdUndefined: Self = StObject.set(x, "virtualClusterId", js.undefined)
  }
}
