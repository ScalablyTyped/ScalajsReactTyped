package typingsJapgolly.awsSdk.cloudformationMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait StackEvent extends js.Object {
  /**
    * The token passed to the operation that generated this event. All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a CreateStack operation with the token token1, then all the StackEvents generated by that operation will have ClientRequestToken set as token1. In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format Console-StackOperation-ID, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002. 
    */
  var ClientRequestToken: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.ClientRequestToken] = js.native
  /**
    * The unique ID of this event.
    */
  var EventId: typingsJapgolly.awsSdk.cloudformationMod.EventId = js.native
  /**
    * The logical name of the resource specified in the template.
    */
  var LogicalResourceId: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.LogicalResourceId] = js.native
  /**
    * The name or unique identifier associated with the physical instance of the resource.
    */
  var PhysicalResourceId: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.PhysicalResourceId] = js.native
  /**
    * BLOB of the properties used to create the resource.
    */
  var ResourceProperties: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.ResourceProperties] = js.native
  /**
    * Current status of the resource.
    */
  var ResourceStatus: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.ResourceStatus] = js.native
  /**
    * Success/failure message associated with the resource.
    */
  var ResourceStatusReason: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.ResourceStatusReason] = js.native
  /**
    * Type of resource. (For more information, go to  AWS Resource Types Reference in the AWS CloudFormation User Guide.)
    */
  var ResourceType: js.UndefOr[typingsJapgolly.awsSdk.cloudformationMod.ResourceType] = js.native
  /**
    * The unique ID name of the instance of the stack.
    */
  var StackId: typingsJapgolly.awsSdk.cloudformationMod.StackId = js.native
  /**
    * The name associated with a stack.
    */
  var StackName: typingsJapgolly.awsSdk.cloudformationMod.StackName = js.native
  /**
    * Time the status was updated.
    */
  var Timestamp: js.Date = js.native
}

object StackEvent {
  @scala.inline
  def apply(
    EventId: EventId,
    StackId: StackId,
    StackName: StackName,
    Timestamp: js.Date,
    ClientRequestToken: ClientRequestToken = null,
    LogicalResourceId: LogicalResourceId = null,
    PhysicalResourceId: PhysicalResourceId = null,
    ResourceProperties: ResourceProperties = null,
    ResourceStatus: ResourceStatus = null,
    ResourceStatusReason: ResourceStatusReason = null,
    ResourceType: ResourceType = null
  ): StackEvent = {
    val __obj = js.Dynamic.literal(EventId = EventId.asInstanceOf[js.Any], StackId = StackId.asInstanceOf[js.Any], StackName = StackName.asInstanceOf[js.Any], Timestamp = Timestamp.asInstanceOf[js.Any])
    if (ClientRequestToken != null) __obj.updateDynamic("ClientRequestToken")(ClientRequestToken.asInstanceOf[js.Any])
    if (LogicalResourceId != null) __obj.updateDynamic("LogicalResourceId")(LogicalResourceId.asInstanceOf[js.Any])
    if (PhysicalResourceId != null) __obj.updateDynamic("PhysicalResourceId")(PhysicalResourceId.asInstanceOf[js.Any])
    if (ResourceProperties != null) __obj.updateDynamic("ResourceProperties")(ResourceProperties.asInstanceOf[js.Any])
    if (ResourceStatus != null) __obj.updateDynamic("ResourceStatus")(ResourceStatus.asInstanceOf[js.Any])
    if (ResourceStatusReason != null) __obj.updateDynamic("ResourceStatusReason")(ResourceStatusReason.asInstanceOf[js.Any])
    if (ResourceType != null) __obj.updateDynamic("ResourceType")(ResourceType.asInstanceOf[js.Any])
    __obj.asInstanceOf[StackEvent]
  }
}

