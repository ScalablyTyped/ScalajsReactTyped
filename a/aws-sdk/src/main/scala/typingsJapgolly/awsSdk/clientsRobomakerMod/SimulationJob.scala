package typingsJapgolly.awsSdk.clientsRobomakerMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait SimulationJob extends StObject {
  
  /**
    * The Amazon Resource Name (ARN) of the simulation job.
    */
  var arn: js.UndefOr[Arn] = js.undefined
  
  /**
    * A unique identifier for this SimulationJob request.
    */
  var clientRequestToken: js.UndefOr[ClientRequestToken] = js.undefined
  
  /**
    * Compute information for the simulation job
    */
  var compute: js.UndefOr[ComputeResponse] = js.undefined
  
  /**
    * The data sources for the simulation job.
    */
  var dataSources: js.UndefOr[DataSources] = js.undefined
  
  /**
    * The failure behavior the simulation job.  Continue  Leaves the host running for its maximum timeout duration after a 4XX error code.  Fail  Stop the simulation job and terminate the instance.  
    */
  var failureBehavior: js.UndefOr[FailureBehavior] = js.undefined
  
  /**
    * The failure code of the simulation job if it failed.
    */
  var failureCode: js.UndefOr[SimulationJobErrorCode] = js.undefined
  
  /**
    * The reason why the simulation job failed.
    */
  var failureReason: js.UndefOr[GenericString] = js.undefined
  
  /**
    * The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. 
    */
  var iamRole: js.UndefOr[IamRole] = js.undefined
  
  /**
    * The time, in milliseconds since the epoch, when the simulation job was last started.
    */
  var lastStartedAt: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The time, in milliseconds since the epoch, when the simulation job was last updated.
    */
  var lastUpdatedAt: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The logging configuration.
    */
  var loggingConfig: js.UndefOr[LoggingConfig] = js.undefined
  
  /**
    * The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.
    */
  var maxJobDurationInSeconds: js.UndefOr[JobDuration] = js.undefined
  
  /**
    * The name of the simulation job.
    */
  var name: js.UndefOr[Name] = js.undefined
  
  /**
    * Information about a network interface.
    */
  var networkInterface: js.UndefOr[NetworkInterface] = js.undefined
  
  /**
    * Location for output files generated by the simulation job.
    */
  var outputLocation: js.UndefOr[OutputLocation] = js.undefined
  
  /**
    * A list of robot applications.
    */
  var robotApplications: js.UndefOr[RobotApplicationConfigs] = js.undefined
  
  /**
    * A list of simulation applications.
    */
  var simulationApplications: js.UndefOr[SimulationApplicationConfigs] = js.undefined
  
  /**
    * The simulation job execution duration in milliseconds.
    */
  var simulationTimeMillis: js.UndefOr[SimulationTimeMillis] = js.undefined
  
  /**
    * Status of the simulation job.
    */
  var status: js.UndefOr[SimulationJobStatus] = js.undefined
  
  /**
    * A map that contains tag keys and tag values that are attached to the simulation job.
    */
  var tags: js.UndefOr[TagMap] = js.undefined
  
  /**
    * VPC configuration information.
    */
  var vpcConfig: js.UndefOr[VPCConfigResponse] = js.undefined
}
object SimulationJob {
  
  inline def apply(): SimulationJob = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SimulationJob]
  }
  
  extension [Self <: SimulationJob](x: Self) {
    
    inline def setArn(value: Arn): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
    
    inline def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
    
    inline def setClientRequestToken(value: ClientRequestToken): Self = StObject.set(x, "clientRequestToken", value.asInstanceOf[js.Any])
    
    inline def setClientRequestTokenUndefined: Self = StObject.set(x, "clientRequestToken", js.undefined)
    
    inline def setCompute(value: ComputeResponse): Self = StObject.set(x, "compute", value.asInstanceOf[js.Any])
    
    inline def setComputeUndefined: Self = StObject.set(x, "compute", js.undefined)
    
    inline def setDataSources(value: DataSources): Self = StObject.set(x, "dataSources", value.asInstanceOf[js.Any])
    
    inline def setDataSourcesUndefined: Self = StObject.set(x, "dataSources", js.undefined)
    
    inline def setDataSourcesVarargs(value: DataSource*): Self = StObject.set(x, "dataSources", js.Array(value*))
    
    inline def setFailureBehavior(value: FailureBehavior): Self = StObject.set(x, "failureBehavior", value.asInstanceOf[js.Any])
    
    inline def setFailureBehaviorUndefined: Self = StObject.set(x, "failureBehavior", js.undefined)
    
    inline def setFailureCode(value: SimulationJobErrorCode): Self = StObject.set(x, "failureCode", value.asInstanceOf[js.Any])
    
    inline def setFailureCodeUndefined: Self = StObject.set(x, "failureCode", js.undefined)
    
    inline def setFailureReason(value: GenericString): Self = StObject.set(x, "failureReason", value.asInstanceOf[js.Any])
    
    inline def setFailureReasonUndefined: Self = StObject.set(x, "failureReason", js.undefined)
    
    inline def setIamRole(value: IamRole): Self = StObject.set(x, "iamRole", value.asInstanceOf[js.Any])
    
    inline def setIamRoleUndefined: Self = StObject.set(x, "iamRole", js.undefined)
    
    inline def setLastStartedAt(value: js.Date): Self = StObject.set(x, "lastStartedAt", value.asInstanceOf[js.Any])
    
    inline def setLastStartedAtUndefined: Self = StObject.set(x, "lastStartedAt", js.undefined)
    
    inline def setLastUpdatedAt(value: js.Date): Self = StObject.set(x, "lastUpdatedAt", value.asInstanceOf[js.Any])
    
    inline def setLastUpdatedAtUndefined: Self = StObject.set(x, "lastUpdatedAt", js.undefined)
    
    inline def setLoggingConfig(value: LoggingConfig): Self = StObject.set(x, "loggingConfig", value.asInstanceOf[js.Any])
    
    inline def setLoggingConfigUndefined: Self = StObject.set(x, "loggingConfig", js.undefined)
    
    inline def setMaxJobDurationInSeconds(value: JobDuration): Self = StObject.set(x, "maxJobDurationInSeconds", value.asInstanceOf[js.Any])
    
    inline def setMaxJobDurationInSecondsUndefined: Self = StObject.set(x, "maxJobDurationInSeconds", js.undefined)
    
    inline def setName(value: Name): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    inline def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    inline def setNetworkInterface(value: NetworkInterface): Self = StObject.set(x, "networkInterface", value.asInstanceOf[js.Any])
    
    inline def setNetworkInterfaceUndefined: Self = StObject.set(x, "networkInterface", js.undefined)
    
    inline def setOutputLocation(value: OutputLocation): Self = StObject.set(x, "outputLocation", value.asInstanceOf[js.Any])
    
    inline def setOutputLocationUndefined: Self = StObject.set(x, "outputLocation", js.undefined)
    
    inline def setRobotApplications(value: RobotApplicationConfigs): Self = StObject.set(x, "robotApplications", value.asInstanceOf[js.Any])
    
    inline def setRobotApplicationsUndefined: Self = StObject.set(x, "robotApplications", js.undefined)
    
    inline def setRobotApplicationsVarargs(value: RobotApplicationConfig*): Self = StObject.set(x, "robotApplications", js.Array(value*))
    
    inline def setSimulationApplications(value: SimulationApplicationConfigs): Self = StObject.set(x, "simulationApplications", value.asInstanceOf[js.Any])
    
    inline def setSimulationApplicationsUndefined: Self = StObject.set(x, "simulationApplications", js.undefined)
    
    inline def setSimulationApplicationsVarargs(value: SimulationApplicationConfig*): Self = StObject.set(x, "simulationApplications", js.Array(value*))
    
    inline def setSimulationTimeMillis(value: SimulationTimeMillis): Self = StObject.set(x, "simulationTimeMillis", value.asInstanceOf[js.Any])
    
    inline def setSimulationTimeMillisUndefined: Self = StObject.set(x, "simulationTimeMillis", js.undefined)
    
    inline def setStatus(value: SimulationJobStatus): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    inline def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    inline def setTags(value: TagMap): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    inline def setVpcConfig(value: VPCConfigResponse): Self = StObject.set(x, "vpcConfig", value.asInstanceOf[js.Any])
    
    inline def setVpcConfigUndefined: Self = StObject.set(x, "vpcConfig", js.undefined)
  }
}
