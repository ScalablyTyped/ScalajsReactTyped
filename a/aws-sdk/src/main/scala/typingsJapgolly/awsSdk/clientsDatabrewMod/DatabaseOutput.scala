package typingsJapgolly.awsSdk.clientsDatabrewMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait DatabaseOutput extends StObject {
  
  /**
    * Represents options that specify how and where DataBrew writes the database output generated by recipe jobs.
    */
  var DatabaseOptions: DatabaseTableOutputOptions
  
  /**
    * The output mode to write into the database. Currently supported option: NEW_TABLE.
    */
  var DatabaseOutputMode: js.UndefOr[typingsJapgolly.awsSdk.clientsDatabrewMod.DatabaseOutputMode] = js.undefined
  
  /**
    * The Glue connection that stores the connection information for the target database.
    */
  var GlueConnectionName: typingsJapgolly.awsSdk.clientsDatabrewMod.GlueConnectionName
}
object DatabaseOutput {
  
  inline def apply(DatabaseOptions: DatabaseTableOutputOptions, GlueConnectionName: GlueConnectionName): DatabaseOutput = {
    val __obj = js.Dynamic.literal(DatabaseOptions = DatabaseOptions.asInstanceOf[js.Any], GlueConnectionName = GlueConnectionName.asInstanceOf[js.Any])
    __obj.asInstanceOf[DatabaseOutput]
  }
  
  extension [Self <: DatabaseOutput](x: Self) {
    
    inline def setDatabaseOptions(value: DatabaseTableOutputOptions): Self = StObject.set(x, "DatabaseOptions", value.asInstanceOf[js.Any])
    
    inline def setDatabaseOutputMode(value: DatabaseOutputMode): Self = StObject.set(x, "DatabaseOutputMode", value.asInstanceOf[js.Any])
    
    inline def setDatabaseOutputModeUndefined: Self = StObject.set(x, "DatabaseOutputMode", js.undefined)
    
    inline def setGlueConnectionName(value: GlueConnectionName): Self = StObject.set(x, "GlueConnectionName", value.asInstanceOf[js.Any])
  }
}
