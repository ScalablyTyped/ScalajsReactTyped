package typingsJapgolly.awsSdk.securityhubMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait AwsSecurityFinding extends js.Object {
  /**
    * The AWS account ID that a finding is generated in.
    */
  var AwsAccountId: NonEmptyString = js.native
  /**
    * This data type is exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains compliance-related finding details.
    */
  var Compliance: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.Compliance] = js.native
  /**
    * A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.
    */
  var Confidence: js.UndefOr[Integer] = js.native
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider created the potential security issue that a finding captured.
    */
  var CreatedAt: NonEmptyString = js.native
  /**
    * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.
    */
  var Criticality: js.UndefOr[Integer] = js.native
  /**
    * A finding's description.  In this release, Description is a required property. 
    */
  var Description: NonEmptyString = js.native
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.
    */
  var FirstObservedAt: js.UndefOr[NonEmptyString] = js.native
  /**
    * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plug-in, etc. 
    */
  var GeneratorId: NonEmptyString = js.native
  /**
    * The security findings provider-specific identifier for a finding.
    */
  var Id: NonEmptyString = js.native
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.
    */
  var LastObservedAt: js.UndefOr[NonEmptyString] = js.native
  /**
    * A list of malware related to a finding.
    */
  var Malware: js.UndefOr[MalwareList] = js.native
  /**
    * The details of network-related information about a finding.
    */
  var Network: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.Network] = js.native
  /**
    * A user-defined note added to a finding.
    */
  var Note: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.Note] = js.native
  /**
    * The details of process-related information about a finding.
    */
  var Process: js.UndefOr[ProcessDetails] = js.native
  /**
    * The ARN generated by Security Hub that uniquely identifies a third-party company (security-findings provider) after this provider's product (solution that generates findings) is registered with Security Hub. 
    */
  var ProductArn: NonEmptyString = js.native
  /**
    * A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
    */
  var ProductFields: js.UndefOr[FieldMap] = js.native
  /**
    * The record state of a finding.
    */
  var RecordState: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.RecordState] = js.native
  /**
    * A list of related findings.
    */
  var RelatedFindings: js.UndefOr[RelatedFindingList] = js.native
  /**
    * A data type that describes the remediation options for a finding.
    */
  var Remediation: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.Remediation] = js.native
  /**
    * A set of resource data types that describe the resources that the finding refers to.
    */
  var Resources: ResourceList = js.native
  /**
    * The schema version that a finding is formatted for.
    */
  var SchemaVersion: NonEmptyString = js.native
  /**
    * A finding's severity.
    */
  var Severity: typingsJapgolly.awsSdk.securityhubMod.Severity = js.native
  /**
    * A URL that links to a page about the current finding in the security-findings provider's solution.
    */
  var SourceUrl: js.UndefOr[NonEmptyString] = js.native
  /**
    * Threat intelligence details related to a finding.
    */
  var ThreatIntelIndicators: js.UndefOr[ThreatIntelIndicatorList] = js.native
  /**
    * A finding's title.  In this release, Title is a required property. 
    */
  var Title: NonEmptyString = js.native
  /**
    * One or more finding types in the format of namespace/category/classifier that classify a finding. Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications
    */
  var Types: TypeList = js.native
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. 
    */
  var UpdatedAt: NonEmptyString = js.native
  /**
    * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. 
    */
  var UserDefinedFields: js.UndefOr[FieldMap] = js.native
  /**
    * Indicates the veracity of a finding. 
    */
  var VerificationState: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.VerificationState] = js.native
  /**
    * The workflow state of a finding. 
    */
  var WorkflowState: js.UndefOr[typingsJapgolly.awsSdk.securityhubMod.WorkflowState] = js.native
}

object AwsSecurityFinding {
  @scala.inline
  def apply(
    AwsAccountId: NonEmptyString,
    CreatedAt: NonEmptyString,
    Description: NonEmptyString,
    GeneratorId: NonEmptyString,
    Id: NonEmptyString,
    ProductArn: NonEmptyString,
    Resources: ResourceList,
    SchemaVersion: NonEmptyString,
    Severity: Severity,
    Title: NonEmptyString,
    Types: TypeList,
    UpdatedAt: NonEmptyString,
    Compliance: Compliance = null,
    Confidence: Int | scala.Double = null,
    Criticality: Int | scala.Double = null,
    FirstObservedAt: NonEmptyString = null,
    LastObservedAt: NonEmptyString = null,
    Malware: MalwareList = null,
    Network: Network = null,
    Note: Note = null,
    Process: ProcessDetails = null,
    ProductFields: FieldMap = null,
    RecordState: RecordState = null,
    RelatedFindings: RelatedFindingList = null,
    Remediation: Remediation = null,
    SourceUrl: NonEmptyString = null,
    ThreatIntelIndicators: ThreatIntelIndicatorList = null,
    UserDefinedFields: FieldMap = null,
    VerificationState: VerificationState = null,
    WorkflowState: WorkflowState = null
  ): AwsSecurityFinding = {
    val __obj = js.Dynamic.literal(AwsAccountId = AwsAccountId.asInstanceOf[js.Any], CreatedAt = CreatedAt.asInstanceOf[js.Any], Description = Description.asInstanceOf[js.Any], GeneratorId = GeneratorId.asInstanceOf[js.Any], Id = Id.asInstanceOf[js.Any], ProductArn = ProductArn.asInstanceOf[js.Any], Resources = Resources.asInstanceOf[js.Any], SchemaVersion = SchemaVersion.asInstanceOf[js.Any], Severity = Severity.asInstanceOf[js.Any], Title = Title.asInstanceOf[js.Any], Types = Types.asInstanceOf[js.Any], UpdatedAt = UpdatedAt.asInstanceOf[js.Any])
    if (Compliance != null) __obj.updateDynamic("Compliance")(Compliance.asInstanceOf[js.Any])
    if (Confidence != null) __obj.updateDynamic("Confidence")(Confidence.asInstanceOf[js.Any])
    if (Criticality != null) __obj.updateDynamic("Criticality")(Criticality.asInstanceOf[js.Any])
    if (FirstObservedAt != null) __obj.updateDynamic("FirstObservedAt")(FirstObservedAt.asInstanceOf[js.Any])
    if (LastObservedAt != null) __obj.updateDynamic("LastObservedAt")(LastObservedAt.asInstanceOf[js.Any])
    if (Malware != null) __obj.updateDynamic("Malware")(Malware.asInstanceOf[js.Any])
    if (Network != null) __obj.updateDynamic("Network")(Network.asInstanceOf[js.Any])
    if (Note != null) __obj.updateDynamic("Note")(Note.asInstanceOf[js.Any])
    if (Process != null) __obj.updateDynamic("Process")(Process.asInstanceOf[js.Any])
    if (ProductFields != null) __obj.updateDynamic("ProductFields")(ProductFields.asInstanceOf[js.Any])
    if (RecordState != null) __obj.updateDynamic("RecordState")(RecordState.asInstanceOf[js.Any])
    if (RelatedFindings != null) __obj.updateDynamic("RelatedFindings")(RelatedFindings.asInstanceOf[js.Any])
    if (Remediation != null) __obj.updateDynamic("Remediation")(Remediation.asInstanceOf[js.Any])
    if (SourceUrl != null) __obj.updateDynamic("SourceUrl")(SourceUrl.asInstanceOf[js.Any])
    if (ThreatIntelIndicators != null) __obj.updateDynamic("ThreatIntelIndicators")(ThreatIntelIndicators.asInstanceOf[js.Any])
    if (UserDefinedFields != null) __obj.updateDynamic("UserDefinedFields")(UserDefinedFields.asInstanceOf[js.Any])
    if (VerificationState != null) __obj.updateDynamic("VerificationState")(VerificationState.asInstanceOf[js.Any])
    if (WorkflowState != null) __obj.updateDynamic("WorkflowState")(WorkflowState.asInstanceOf[js.Any])
    __obj.asInstanceOf[AwsSecurityFinding]
  }
}

