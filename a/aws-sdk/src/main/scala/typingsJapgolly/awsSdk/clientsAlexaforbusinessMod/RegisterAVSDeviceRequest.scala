package typingsJapgolly.awsSdk.clientsAlexaforbusinessMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait RegisterAVSDeviceRequest extends StObject {
  
  /**
    * The device type ID for your AVS device generated by Amazon when the OEM creates a new product on Amazon's Developer Console.
    */
  var AmazonId: typingsJapgolly.awsSdk.clientsAlexaforbusinessMod.AmazonId
  
  /**
    * The client ID of the OEM used for code-based linking authorization on an AVS device.
    */
  var ClientId: typingsJapgolly.awsSdk.clientsAlexaforbusinessMod.ClientId
  
  /**
    * The key generated by the OEM that uniquely identifies a specified instance of your AVS device.
    */
  var DeviceSerialNumber: js.UndefOr[DeviceSerialNumberForAVS] = js.undefined
  
  /**
    * The product ID used to identify your AVS device during authorization.
    */
  var ProductId: typingsJapgolly.awsSdk.clientsAlexaforbusinessMod.ProductId
  
  /**
    * The Amazon Resource Name (ARN) of the room with which to associate your AVS device.
    */
  var RoomArn: js.UndefOr[Arn] = js.undefined
  
  /**
    * The tags to be added to the specified resource. Do not provide system tags.
    */
  var Tags: js.UndefOr[TagList] = js.undefined
  
  /**
    * The code that is obtained after your AVS device has made a POST request to LWA as a part of the Device Authorization Request component of the OAuth code-based linking specification.
    */
  var UserCode: typingsJapgolly.awsSdk.clientsAlexaforbusinessMod.UserCode
}
object RegisterAVSDeviceRequest {
  
  inline def apply(AmazonId: AmazonId, ClientId: ClientId, ProductId: ProductId, UserCode: UserCode): RegisterAVSDeviceRequest = {
    val __obj = js.Dynamic.literal(AmazonId = AmazonId.asInstanceOf[js.Any], ClientId = ClientId.asInstanceOf[js.Any], ProductId = ProductId.asInstanceOf[js.Any], UserCode = UserCode.asInstanceOf[js.Any])
    __obj.asInstanceOf[RegisterAVSDeviceRequest]
  }
  
  extension [Self <: RegisterAVSDeviceRequest](x: Self) {
    
    inline def setAmazonId(value: AmazonId): Self = StObject.set(x, "AmazonId", value.asInstanceOf[js.Any])
    
    inline def setClientId(value: ClientId): Self = StObject.set(x, "ClientId", value.asInstanceOf[js.Any])
    
    inline def setDeviceSerialNumber(value: DeviceSerialNumberForAVS): Self = StObject.set(x, "DeviceSerialNumber", value.asInstanceOf[js.Any])
    
    inline def setDeviceSerialNumberUndefined: Self = StObject.set(x, "DeviceSerialNumber", js.undefined)
    
    inline def setProductId(value: ProductId): Self = StObject.set(x, "ProductId", value.asInstanceOf[js.Any])
    
    inline def setRoomArn(value: Arn): Self = StObject.set(x, "RoomArn", value.asInstanceOf[js.Any])
    
    inline def setRoomArnUndefined: Self = StObject.set(x, "RoomArn", js.undefined)
    
    inline def setTags(value: TagList): Self = StObject.set(x, "Tags", value.asInstanceOf[js.Any])
    
    inline def setTagsUndefined: Self = StObject.set(x, "Tags", js.undefined)
    
    inline def setTagsVarargs(value: Tag*): Self = StObject.set(x, "Tags", js.Array(value*))
    
    inline def setUserCode(value: UserCode): Self = StObject.set(x, "UserCode", value.asInstanceOf[js.Any])
  }
}
