package typingsJapgolly.awsSdk.clientsRedshiftdataMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait StatementData extends StObject {
  
  /**
    * The date and time (UTC) the statement was created. 
    */
  var CreatedAt: js.UndefOr[js.Date] = js.undefined
  
  /**
    * The SQL statement identifier. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. 
    */
  var Id: StatementId
  
  /**
    * A value that indicates whether the statement is a batch query request.
    */
  var IsBatchStatement: js.UndefOr[Boolean] = js.undefined
  
  /**
    * The parameters used in a SQL statement.
    */
  var QueryParameters: js.UndefOr[SqlParametersList] = js.undefined
  
  /**
    * The SQL statement.
    */
  var QueryString: js.UndefOr[StatementString] = js.undefined
  
  /**
    * One or more SQL statements. Each query string in the array corresponds to one of the queries in a batch query request.
    */
  var QueryStrings: js.UndefOr[StatementStringList] = js.undefined
  
  /**
    * The name or Amazon Resource Name (ARN) of the secret that enables access to the database. 
    */
  var SecretArn: js.UndefOr[typingsJapgolly.awsSdk.clientsRedshiftdataMod.SecretArn] = js.undefined
  
  /**
    * The name of the SQL statement. 
    */
  var StatementName: js.UndefOr[StatementNameString] = js.undefined
  
  /**
    * The status of the SQL statement. An example is the that the SQL statement finished. 
    */
  var Status: js.UndefOr[StatusString] = js.undefined
  
  /**
    * The date and time (UTC) that the statement metadata was last updated.
    */
  var UpdatedAt: js.UndefOr[js.Date] = js.undefined
}
object StatementData {
  
  inline def apply(Id: StatementId): StatementData = {
    val __obj = js.Dynamic.literal(Id = Id.asInstanceOf[js.Any])
    __obj.asInstanceOf[StatementData]
  }
  
  extension [Self <: StatementData](x: Self) {
    
    inline def setCreatedAt(value: js.Date): Self = StObject.set(x, "CreatedAt", value.asInstanceOf[js.Any])
    
    inline def setCreatedAtUndefined: Self = StObject.set(x, "CreatedAt", js.undefined)
    
    inline def setId(value: StatementId): Self = StObject.set(x, "Id", value.asInstanceOf[js.Any])
    
    inline def setIsBatchStatement(value: Boolean): Self = StObject.set(x, "IsBatchStatement", value.asInstanceOf[js.Any])
    
    inline def setIsBatchStatementUndefined: Self = StObject.set(x, "IsBatchStatement", js.undefined)
    
    inline def setQueryParameters(value: SqlParametersList): Self = StObject.set(x, "QueryParameters", value.asInstanceOf[js.Any])
    
    inline def setQueryParametersUndefined: Self = StObject.set(x, "QueryParameters", js.undefined)
    
    inline def setQueryParametersVarargs(value: SqlParameter*): Self = StObject.set(x, "QueryParameters", js.Array(value*))
    
    inline def setQueryString(value: StatementString): Self = StObject.set(x, "QueryString", value.asInstanceOf[js.Any])
    
    inline def setQueryStringUndefined: Self = StObject.set(x, "QueryString", js.undefined)
    
    inline def setQueryStrings(value: StatementStringList): Self = StObject.set(x, "QueryStrings", value.asInstanceOf[js.Any])
    
    inline def setQueryStringsUndefined: Self = StObject.set(x, "QueryStrings", js.undefined)
    
    inline def setQueryStringsVarargs(value: StatementString*): Self = StObject.set(x, "QueryStrings", js.Array(value*))
    
    inline def setSecretArn(value: SecretArn): Self = StObject.set(x, "SecretArn", value.asInstanceOf[js.Any])
    
    inline def setSecretArnUndefined: Self = StObject.set(x, "SecretArn", js.undefined)
    
    inline def setStatementName(value: StatementNameString): Self = StObject.set(x, "StatementName", value.asInstanceOf[js.Any])
    
    inline def setStatementNameUndefined: Self = StObject.set(x, "StatementName", js.undefined)
    
    inline def setStatus(value: StatusString): Self = StObject.set(x, "Status", value.asInstanceOf[js.Any])
    
    inline def setStatusUndefined: Self = StObject.set(x, "Status", js.undefined)
    
    inline def setUpdatedAt(value: js.Date): Self = StObject.set(x, "UpdatedAt", value.asInstanceOf[js.Any])
    
    inline def setUpdatedAtUndefined: Self = StObject.set(x, "UpdatedAt", js.undefined)
  }
}
