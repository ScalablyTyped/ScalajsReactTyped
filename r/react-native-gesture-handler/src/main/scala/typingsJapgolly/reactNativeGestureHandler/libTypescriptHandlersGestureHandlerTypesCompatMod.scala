package typingsJapgolly.reactNativeGestureHandler

import typingsJapgolly.reactNativeGestureHandler.libTypescriptComponentsGestureButtonsMod.BaseButtonProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptComponentsGestureButtonsMod.BorderlessButtonProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptComponentsGestureButtonsMod.RawButtonProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptComponentsGestureButtonsMod.RectButtonProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersFlingGestureHandlerMod.FlingGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersFlingGestureHandlerMod.FlingGestureHandlerProps_
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersForceTouchGestureHandlerMod.ForceTouchGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersForceTouchGestureHandlerMod.ForceTouchGestureHandlerProps_
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersGestureHandlerCommonMod.GestureEvent
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersGestureHandlerCommonMod.GestureEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersGestureHandlerCommonMod.HandlerStateChangeEvent
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersGestureHandlerCommonMod.HandlerStateChangeEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersLongPressGestureHandlerMod.LongPressGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersLongPressGestureHandlerMod.LongPressGestureHandlerProps_
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersNativeViewGestureHandlerMod.NativeViewGestureHandlerPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersNativeViewGestureHandlerMod.NativeViewGestureHandlerProps_
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersPanGestureHandlerMod.PanGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersPanGestureHandlerMod.PanGestureHandlerProps_
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersPinchGestureHandlerMod.PinchGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersPinchGestureHandlerMod.PinchGestureHandlerProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersRotationGestureHandlerMod.RotationGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersRotationGestureHandlerMod.RotationGestureHandlerProps
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersTapGestureHandlerMod.TapGestureHandlerEventPayload
import typingsJapgolly.reactNativeGestureHandler.libTypescriptHandlersTapGestureHandlerMod.TapGestureHandlerProps_
import typingsJapgolly.std.Record
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object libTypescriptHandlersGestureHandlerTypesCompatMod {
  
  type BaseButtonProperties = BaseButtonProps
  
  type BorderlessButtonProperties = BorderlessButtonProps
  
  type FlingGestureHandlerGestureEvent = GestureEvent[FlingGestureHandlerEventPayload]
  
  type FlingGestureHandlerProperties = FlingGestureHandlerProps_
  
  type FlingGestureHandlerStateChangeEvent = HandlerStateChangeEvent[FlingGestureHandlerEventPayload]
  
  type ForceTouchGestureHandlerGestureEvent = GestureEvent[ForceTouchGestureHandlerEventPayload]
  
  type ForceTouchGestureHandlerProperties = ForceTouchGestureHandlerProps_
  
  type ForceTouchGestureHandlerStateChangeEvent = HandlerStateChangeEvent[ForceTouchGestureHandlerEventPayload]
  
  type GestureHandlerGestureEvent = GestureEvent[Record[String, Any]]
  
  type GestureHandlerGestureEventNativeEvent = GestureEventPayload
  
  type GestureHandlerStateChangeEvent = HandlerStateChangeEvent[Record[String, Any]]
  
  type GestureHandlerStateChangeNativeEvent = HandlerStateChangeEventPayload
  
  type LongPressGestureHandlerGestureEvent = GestureEvent[LongPressGestureHandlerEventPayload]
  
  type LongPressGestureHandlerProperties = LongPressGestureHandlerProps_
  
  type LongPressGestureHandlerStateChangeEvent = HandlerStateChangeEvent[LongPressGestureHandlerEventPayload]
  
  type NativeViewGestureHandlerGestureEvent = GestureEvent[NativeViewGestureHandlerPayload]
  
  type NativeViewGestureHandlerProperties = NativeViewGestureHandlerProps_
  
  type NativeViewGestureHandlerStateChangeEvent = HandlerStateChangeEvent[NativeViewGestureHandlerPayload]
  
  type PanGestureHandlerGestureEvent = GestureEvent[PanGestureHandlerEventPayload]
  
  type PanGestureHandlerProperties = PanGestureHandlerProps_
  
  type PanGestureHandlerStateChangeEvent = HandlerStateChangeEvent[PanGestureHandlerEventPayload]
  
  type PinchGestureHandlerGestureEvent = GestureEvent[PinchGestureHandlerEventPayload]
  
  type PinchGestureHandlerProperties = PinchGestureHandlerProps
  
  type PinchGestureHandlerStateChangeEvent = HandlerStateChangeEvent[PinchGestureHandlerEventPayload]
  
  type RawButtonProperties = RawButtonProps
  
  type RectButtonProperties = RectButtonProps
  
  type RotationGestureHandlerGestureEvent = GestureEvent[RotationGestureHandlerEventPayload]
  
  type RotationGestureHandlerProperties = RotationGestureHandlerProps
  
  type RotationGestureHandlerStateChangeEvent = HandlerStateChangeEvent[RotationGestureHandlerEventPayload]
  
  type TapGestureHandlerGestureEvent = GestureEvent[TapGestureHandlerEventPayload]
  
  type TapGestureHandlerProperties = TapGestureHandlerProps_
  
  type TapGestureHandlerStateChangeEvent = HandlerStateChangeEvent[TapGestureHandlerEventPayload]
}
