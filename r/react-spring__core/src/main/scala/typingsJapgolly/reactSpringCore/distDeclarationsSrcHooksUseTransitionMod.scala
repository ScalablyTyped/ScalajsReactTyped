package typingsJapgolly.reactSpringCore

import typingsJapgolly.reactSpringCore.distDeclarationsSrcTypesCommonMod.Valid
import typingsJapgolly.reactSpringCore.distDeclarationsSrcTypesPropsMod.PickAnimated
import typingsJapgolly.reactSpringCore.distDeclarationsSrcTypesTransitionMod.TransitionFn
import typingsJapgolly.reactSpringCore.distDeclarationsSrcTypesTransitionMod.UseTransitionProps
import typingsJapgolly.reactSpringCore.reactSpringCoreBooleans.`true`
import typingsJapgolly.reactSpringTypes.utilMod.OneOrMore
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object distDeclarationsSrcHooksUseTransitionMod {
  
  @JSImport("@react-spring/core/dist/declarations/src/hooks/useTransition", JSImport.Namespace)
  @js.native
  val ^ : js.Any = js.native
  
  inline def useTransition[Item, Props /* <: js.Object */](data: OneOrMore[Item], props: Props & (Valid[Props, UseTransitionProps[Item]])): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  inline def useTransition[Item, Props /* <: js.Object */](
    data: OneOrMore[Item],
    props: Props & (Valid[Props, UseTransitionProps[Item]]),
    deps: js.Array[Any]
  ): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any], deps.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  inline def useTransition[Item, Props /* <: js.Object */](
    data: OneOrMore[Item],
    props: js.Function0[UseTransitionProps[Item] | (Props & (Valid[Props, UseTransitionProps[Item]]))]
  ): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true>>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true>>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  inline def useTransition[Item, Props /* <: js.Object */](
    data: OneOrMore[Item],
    props: js.Function0[UseTransitionProps[Item] | (Props & (Valid[Props, UseTransitionProps[Item]]))],
    deps: js.Array[Any]
  ): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true>>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any], deps.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true>>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  inline def useTransition[Item, Props /* <: js.Object */](data: OneOrMore[Item], props: UseTransitionProps[Item]): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  inline def useTransition[Item, Props /* <: js.Object */](data: OneOrMore[Item], props: UseTransitionProps[Item], deps: js.Array[Any]): /* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any], deps.asInstanceOf[js.Any])).asInstanceOf[/* import warning: importer.ImportType#apply Failed type conversion: @react-spring/core.@react-spring/core/dist/declarations/src/types/props.PickAnimated<Props, true> extends infer State ? State extends @react-spring/types.@react-spring/types/util.Lookup<any> ? [@react-spring/core.@react-spring/core/dist/declarations/src/types/transition.TransitionFn<Item, State>, @react-spring/core.@react-spring/core/dist/declarations/src/SpringRef.SpringRef<State>] : never : never */ js.Any]
  
  inline def useTransition_ItemProps_TransitionFn[Item, Props /* <: js.Object */](data: OneOrMore[Item], props: Props & (Valid[Props, UseTransitionProps[Item]])): TransitionFn[Item, PickAnimated[Props, `true`]] = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any])).asInstanceOf[TransitionFn[Item, PickAnimated[Props, `true`]]]
  inline def useTransition_ItemProps_TransitionFn[Item, Props /* <: js.Object */](data: OneOrMore[Item], props: UseTransitionProps[Item]): TransitionFn[Item, PickAnimated[Props, `true`]] = (^.asInstanceOf[js.Dynamic].applyDynamic("useTransition")(data.asInstanceOf[js.Any], props.asInstanceOf[js.Any])).asInstanceOf[TransitionFn[Item, PickAnimated[Props, `true`]]]
}
