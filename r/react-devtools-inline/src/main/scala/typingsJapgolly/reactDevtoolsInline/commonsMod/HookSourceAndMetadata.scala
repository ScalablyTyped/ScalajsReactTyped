package typingsJapgolly.reactDevtoolsInline.commonsMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait HookSourceAndMetadata extends StObject {
  
  /** Generated by react-debug-tools. */
  var hookSource: HookSource
  
  /** Compiled code (React components or custom hooks) containing primitive hook calls. */
  var runtimeSourceCode: String | Null
  
  /** Same as hookSource.fileName but guaranteed to be non-null. */
  var runtimeSourceURL: String
  
  /**
    * Raw source map JSON.
    * Either decoded from an inline source map or loaded from an external source map file.
    * Sources without source maps won't have this.
    */
  var sourceMapJSON: MixedSourceMap | Null
  
  /**
    * External URL of source map.
    * Sources without source maps (or with inline source maps) won't have this.
    */
  var sourceMapURL: String | Null
}
object HookSourceAndMetadata {
  
  inline def apply(hookSource: HookSource, runtimeSourceURL: String): HookSourceAndMetadata = {
    val __obj = js.Dynamic.literal(hookSource = hookSource.asInstanceOf[js.Any], runtimeSourceURL = runtimeSourceURL.asInstanceOf[js.Any], runtimeSourceCode = null, sourceMapJSON = null, sourceMapURL = null)
    __obj.asInstanceOf[HookSourceAndMetadata]
  }
  
  extension [Self <: HookSourceAndMetadata](x: Self) {
    
    inline def setHookSource(value: HookSource): Self = StObject.set(x, "hookSource", value.asInstanceOf[js.Any])
    
    inline def setRuntimeSourceCode(value: String): Self = StObject.set(x, "runtimeSourceCode", value.asInstanceOf[js.Any])
    
    inline def setRuntimeSourceCodeNull: Self = StObject.set(x, "runtimeSourceCode", null)
    
    inline def setRuntimeSourceURL(value: String): Self = StObject.set(x, "runtimeSourceURL", value.asInstanceOf[js.Any])
    
    inline def setSourceMapJSON(value: MixedSourceMap): Self = StObject.set(x, "sourceMapJSON", value.asInstanceOf[js.Any])
    
    inline def setSourceMapJSONNull: Self = StObject.set(x, "sourceMapJSON", null)
    
    inline def setSourceMapURL(value: String): Self = StObject.set(x, "sourceMapURL", value.asInstanceOf[js.Any])
    
    inline def setSourceMapURLNull: Self = StObject.set(x, "sourceMapURL", null)
  }
}
