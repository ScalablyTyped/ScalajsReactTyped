package typingsJapgolly.gapiClientCompute.gapi.client.compute

import typingsJapgolly.std.Record
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait GlobalSetLabelsRequest extends js.Object {
  /**
    * The fingerprint of the previous set of labels for this resource, used to detect conflicts. The fingerprint is initially generated by Compute Engine and
    * changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash when updating or changing labels. Make a
    * get() request to the resource to get the latest fingerprint.
    */
  var labelFingerprint: js.UndefOr[String] = js.undefined
  /**
    * A list of labels to apply for this resource. Each label key & value must comply with RFC1035. Specifically, the name must be 1-63 characters long and
    * match the regular expression [a-z]([-a-z0-9]&#42;[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must
    * be a dash, lowercase letter, or digit, except the last character, which cannot be a dash. For example, "webserver-frontend": "images". A label value
    * can also be empty (e.g. "my-label": "").
    */
  var labels: js.UndefOr[Record[String, String]] = js.undefined
}

object GlobalSetLabelsRequest {
  @scala.inline
  def apply(labelFingerprint: String = null, labels: Record[String, String] = null): GlobalSetLabelsRequest = {
    val __obj = js.Dynamic.literal()
    if (labelFingerprint != null) __obj.updateDynamic("labelFingerprint")(labelFingerprint.asInstanceOf[js.Any])
    if (labels != null) __obj.updateDynamic("labels")(labels.asInstanceOf[js.Any])
    __obj.asInstanceOf[GlobalSetLabelsRequest]
  }
}

