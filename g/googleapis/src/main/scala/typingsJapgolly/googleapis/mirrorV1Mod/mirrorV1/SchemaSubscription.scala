package typingsJapgolly.googleapis.mirrorV1Mod.mirrorV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A subscription to events on a collection.
  */
@js.native
trait SchemaSubscription extends js.Object {
  /**
    * The URL where notifications should be delivered (must start with
    * https://).
    */
  var callbackUrl: js.UndefOr[String] = js.native
  /**
    * The collection to subscribe to. Allowed values are:   - timeline -
    * Changes in the timeline including insertion, deletion, and updates.  -
    * locations - Location updates.  - settings - Settings updates.
    */
  var collection: js.UndefOr[String] = js.native
  /**
    * The ID of the subscription.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * The type of resource. This is always mirror#subscription.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * Container object for notifications. This is not populated in the
    * Subscription resource.
    */
  var notification: js.UndefOr[SchemaNotification] = js.native
  /**
    * A list of operations that should be subscribed to. An empty list
    * indicates that all operations on the collection should be subscribed to.
    * Allowed values are:   - UPDATE - The item has been updated.  - INSERT - A
    * new item has been inserted.  - DELETE - The item has been deleted.  -
    * MENU_ACTION - A custom menu item has been triggered by the user.
    */
  var operation: js.UndefOr[js.Array[String]] = js.native
  /**
    * The time at which this subscription was last modified, formatted
    * according to RFC 3339.
    */
  var updated: js.UndefOr[String] = js.native
  /**
    * An opaque token sent to the subscriber in notifications so that it can
    * determine the ID of the user.
    */
  var userToken: js.UndefOr[String] = js.native
  /**
    * A secret token sent to the subscriber in notifications so that it can
    * verify that the notification was generated by Google.
    */
  var verifyToken: js.UndefOr[String] = js.native
}

object SchemaSubscription {
  @scala.inline
  def apply(
    callbackUrl: String = null,
    collection: String = null,
    id: String = null,
    kind: String = null,
    notification: SchemaNotification = null,
    operation: js.Array[String] = null,
    updated: String = null,
    userToken: String = null,
    verifyToken: String = null
  ): SchemaSubscription = {
    val __obj = js.Dynamic.literal()
    if (callbackUrl != null) __obj.updateDynamic("callbackUrl")(callbackUrl.asInstanceOf[js.Any])
    if (collection != null) __obj.updateDynamic("collection")(collection.asInstanceOf[js.Any])
    if (id != null) __obj.updateDynamic("id")(id.asInstanceOf[js.Any])
    if (kind != null) __obj.updateDynamic("kind")(kind.asInstanceOf[js.Any])
    if (notification != null) __obj.updateDynamic("notification")(notification.asInstanceOf[js.Any])
    if (operation != null) __obj.updateDynamic("operation")(operation.asInstanceOf[js.Any])
    if (updated != null) __obj.updateDynamic("updated")(updated.asInstanceOf[js.Any])
    if (userToken != null) __obj.updateDynamic("userToken")(userToken.asInstanceOf[js.Any])
    if (verifyToken != null) __obj.updateDynamic("verifyToken")(verifyToken.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaSubscription]
  }
}

