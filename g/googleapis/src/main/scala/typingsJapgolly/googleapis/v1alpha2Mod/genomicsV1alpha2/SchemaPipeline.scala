package typingsJapgolly.googleapis.v1alpha2Mod.genomicsV1alpha2

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * The pipeline object. Represents a transformation from a set of input
  * parameters to a set of output parameters. The transformation is defined as
  * a docker image and command to run within that image. Each pipeline is run
  * on a Google Compute Engine VM. A pipeline can be created with the `create`
  * method and then later run with the `run` method, or a pipeline can be
  * defined and run all at once with the `run` method.
  */
@js.native
trait SchemaPipeline extends js.Object {
  /**
    * User-specified description.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * Specifies the docker run information.
    */
  var docker: js.UndefOr[SchemaDockerExecutor] = js.native
  /**
    * Input parameters of the pipeline.
    */
  var inputParameters: js.UndefOr[js.Array[SchemaPipelineParameter]] = js.native
  /**
    * Required. A user specified pipeline name that does not have to be unique.
    * This name can be used for filtering Pipelines in ListPipelines.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * Output parameters of the pipeline.
    */
  var outputParameters: js.UndefOr[js.Array[SchemaPipelineParameter]] = js.native
  /**
    * Unique pipeline id that is generated by the service when CreatePipeline
    * is called. Cannot be specified in the Pipeline used in the
    * CreatePipelineRequest, and will be populated in the response to
    * CreatePipeline and all subsequent Get and List calls. Indicates that the
    * service has registered this pipeline.
    */
  var pipelineId: js.UndefOr[String] = js.native
  /**
    * Required. The project in which to create the pipeline. The caller must
    * have WRITE access.
    */
  var projectId: js.UndefOr[String] = js.native
  /**
    * Required. Specifies resource requirements for the pipeline run. Required
    * fields:  * minimumCpuCores  * minimumRamGb
    */
  var resources: js.UndefOr[SchemaPipelineResources] = js.native
}

object SchemaPipeline {
  @scala.inline
  def apply(
    description: String = null,
    docker: SchemaDockerExecutor = null,
    inputParameters: js.Array[SchemaPipelineParameter] = null,
    name: String = null,
    outputParameters: js.Array[SchemaPipelineParameter] = null,
    pipelineId: String = null,
    projectId: String = null,
    resources: SchemaPipelineResources = null
  ): SchemaPipeline = {
    val __obj = js.Dynamic.literal()
    if (description != null) __obj.updateDynamic("description")(description.asInstanceOf[js.Any])
    if (docker != null) __obj.updateDynamic("docker")(docker.asInstanceOf[js.Any])
    if (inputParameters != null) __obj.updateDynamic("inputParameters")(inputParameters.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (outputParameters != null) __obj.updateDynamic("outputParameters")(outputParameters.asInstanceOf[js.Any])
    if (pipelineId != null) __obj.updateDynamic("pipelineId")(pipelineId.asInstanceOf[js.Any])
    if (projectId != null) __obj.updateDynamic("projectId")(projectId.asInstanceOf[js.Any])
    if (resources != null) __obj.updateDynamic("resources")(resources.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaPipeline]
  }
}

