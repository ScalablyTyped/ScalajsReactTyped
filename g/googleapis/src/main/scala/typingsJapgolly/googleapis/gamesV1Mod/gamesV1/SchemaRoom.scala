package typingsJapgolly.googleapis.gamesV1Mod.gamesV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * This is a JSON template for a room resource object.
  */
@js.native
trait SchemaRoom extends js.Object {
  /**
    * The ID of the application being played.
    */
  var applicationId: js.UndefOr[String] = js.native
  /**
    * Criteria for auto-matching players into this room.
    */
  var autoMatchingCriteria: js.UndefOr[SchemaRoomAutoMatchingCriteria] = js.native
  /**
    * Auto-matching status for this room. Not set if the room is not currently
    * in the auto-matching queue.
    */
  var autoMatchingStatus: js.UndefOr[SchemaRoomAutoMatchStatus] = js.native
  /**
    * Details about the room creation.
    */
  var creationDetails: js.UndefOr[SchemaRoomModification] = js.native
  /**
    * This short description is generated by our servers and worded relative to
    * the player requesting the room. It is intended to be displayed when the
    * room is shown in a list (that is, an invitation to a room.)
    */
  var description: js.UndefOr[String] = js.native
  /**
    * The ID of the participant that invited the user to the room. Not set if
    * the user was not invited to the room.
    */
  var inviterId: js.UndefOr[String] = js.native
  /**
    * Uniquely identifies the type of this resource. Value is always the fixed
    * string games#room.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * Details about the last update to the room.
    */
  var lastUpdateDetails: js.UndefOr[SchemaRoomModification] = js.native
  /**
    * The participants involved in the room, along with their statuses.
    * Includes participants who have left or declined invitations.
    */
  var participants: js.UndefOr[js.Array[SchemaRoomParticipant]] = js.native
  /**
    * Globally unique ID for a room.
    */
  var roomId: js.UndefOr[String] = js.native
  /**
    * The version of the room status: an increasing counter, used by the client
    * to ignore out-of-order updates to room status.
    */
  var roomStatusVersion: js.UndefOr[Double] = js.native
  /**
    * The status of the room. Possible values are:   -
    * &quot;ROOM_INVITING&quot; - One or more players have been invited and not
    * responded.  - &quot;ROOM_AUTO_MATCHING&quot; - One or more slots need to
    * be filled by auto-matching.  - &quot;ROOM_CONNECTING&quot; - Players have
    * joined and are connecting to each other (either before or after
    * auto-matching).  - &quot;ROOM_ACTIVE&quot; - All players have joined and
    * connected to each other.  - &quot;ROOM_DELETED&quot; - The room should no
    * longer be shown on the client. Returned in sync calls when a player joins
    * a room (as a tombstone), or for rooms where all joined participants have
    * left.
    */
  var status: js.UndefOr[String] = js.native
  /**
    * The variant / mode of the application being played; can be any integer
    * value, or left blank.
    */
  var variant: js.UndefOr[Double] = js.native
}

object SchemaRoom {
  @scala.inline
  def apply(
    applicationId: String = null,
    autoMatchingCriteria: SchemaRoomAutoMatchingCriteria = null,
    autoMatchingStatus: SchemaRoomAutoMatchStatus = null,
    creationDetails: SchemaRoomModification = null,
    description: String = null,
    inviterId: String = null,
    kind: String = null,
    lastUpdateDetails: SchemaRoomModification = null,
    participants: js.Array[SchemaRoomParticipant] = null,
    roomId: String = null,
    roomStatusVersion: Int | Double = null,
    status: String = null,
    variant: Int | Double = null
  ): SchemaRoom = {
    val __obj = js.Dynamic.literal()
    if (applicationId != null) __obj.updateDynamic("applicationId")(applicationId.asInstanceOf[js.Any])
    if (autoMatchingCriteria != null) __obj.updateDynamic("autoMatchingCriteria")(autoMatchingCriteria.asInstanceOf[js.Any])
    if (autoMatchingStatus != null) __obj.updateDynamic("autoMatchingStatus")(autoMatchingStatus.asInstanceOf[js.Any])
    if (creationDetails != null) __obj.updateDynamic("creationDetails")(creationDetails.asInstanceOf[js.Any])
    if (description != null) __obj.updateDynamic("description")(description.asInstanceOf[js.Any])
    if (inviterId != null) __obj.updateDynamic("inviterId")(inviterId.asInstanceOf[js.Any])
    if (kind != null) __obj.updateDynamic("kind")(kind.asInstanceOf[js.Any])
    if (lastUpdateDetails != null) __obj.updateDynamic("lastUpdateDetails")(lastUpdateDetails.asInstanceOf[js.Any])
    if (participants != null) __obj.updateDynamic("participants")(participants.asInstanceOf[js.Any])
    if (roomId != null) __obj.updateDynamic("roomId")(roomId.asInstanceOf[js.Any])
    if (roomStatusVersion != null) __obj.updateDynamic("roomStatusVersion")(roomStatusVersion.asInstanceOf[js.Any])
    if (status != null) __obj.updateDynamic("status")(status.asInstanceOf[js.Any])
    if (variant != null) __obj.updateDynamic("variant")(variant.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaRoom]
  }
}

