package typingsJapgolly.googleapis.websecurityscannerV1betaMod.websecurityscannerV1beta

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A Finding resource represents a vulnerability instance identified during a
  * ScanRun.
  */
@js.native
trait SchemaFinding extends js.Object {
  /**
    * Output only. The body of the request that triggered the vulnerability.
    */
  var body: js.UndefOr[String] = js.native
  /**
    * Output only. The description of the vulnerability.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * Output only. The URL where the browser lands when the vulnerability is
    * detected.
    */
  var finalUrl: js.UndefOr[String] = js.native
  /**
    * Output only. The type of the Finding. Detailed and up-to-date information
    * on findings can be found here:
    * https://cloud.google.com/security-scanner/docs/scan-result-details
    */
  var findingType: js.UndefOr[String] = js.native
  /**
    * Output only. An addon containing information reported for a vulnerability
    * with an HTML form, if any.
    */
  var form: js.UndefOr[SchemaForm] = js.native
  /**
    * Output only. If the vulnerability was originated from nested IFrame, the
    * immediate parent IFrame is reported.
    */
  var frameUrl: js.UndefOr[String] = js.native
  /**
    * Output only. The URL produced by the server-side fuzzer and used in the
    * request that triggered the vulnerability.
    */
  var fuzzedUrl: js.UndefOr[String] = js.native
  /**
    * Output only. The http method of the request that triggered the
    * vulnerability, in uppercase.
    */
  var httpMethod: js.UndefOr[String] = js.native
  /**
    * Output only. The resource name of the Finding. The name follows the
    * format of
    * &#39;projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}&#39;.
    * The finding IDs are generated by the system.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * Output only. An addon containing information about outdated libraries.
    */
  var outdatedLibrary: js.UndefOr[SchemaOutdatedLibrary] = js.native
  /**
    * Output only. The URL containing human-readable payload that user can
    * leverage to reproduce the vulnerability.
    */
  var reproductionUrl: js.UndefOr[String] = js.native
  /**
    * Output only. The tracking ID uniquely identifies a vulnerability instance
    * across multiple ScanRuns.
    */
  var trackingId: js.UndefOr[String] = js.native
  /**
    * Output only. An addon containing detailed information regarding any
    * resource causing the vulnerability such as JavaScript sources, image,
    * audio files, etc.
    */
  var violatingResource: js.UndefOr[SchemaViolatingResource] = js.native
  /**
    * Output only. An addon containing information about vulnerable or missing
    * HTTP headers.
    */
  var vulnerableHeaders: js.UndefOr[SchemaVulnerableHeaders] = js.native
  /**
    * Output only. An addon containing information about request parameters
    * which were found to be vulnerable.
    */
  var vulnerableParameters: js.UndefOr[SchemaVulnerableParameters] = js.native
  /**
    * Output only. An addon containing information reported for an XSS, if any.
    */
  var xss: js.UndefOr[SchemaXss] = js.native
}

object SchemaFinding {
  @scala.inline
  def apply(
    body: String = null,
    description: String = null,
    finalUrl: String = null,
    findingType: String = null,
    form: SchemaForm = null,
    frameUrl: String = null,
    fuzzedUrl: String = null,
    httpMethod: String = null,
    name: String = null,
    outdatedLibrary: SchemaOutdatedLibrary = null,
    reproductionUrl: String = null,
    trackingId: String = null,
    violatingResource: SchemaViolatingResource = null,
    vulnerableHeaders: SchemaVulnerableHeaders = null,
    vulnerableParameters: SchemaVulnerableParameters = null,
    xss: SchemaXss = null
  ): SchemaFinding = {
    val __obj = js.Dynamic.literal()
    if (body != null) __obj.updateDynamic("body")(body.asInstanceOf[js.Any])
    if (description != null) __obj.updateDynamic("description")(description.asInstanceOf[js.Any])
    if (finalUrl != null) __obj.updateDynamic("finalUrl")(finalUrl.asInstanceOf[js.Any])
    if (findingType != null) __obj.updateDynamic("findingType")(findingType.asInstanceOf[js.Any])
    if (form != null) __obj.updateDynamic("form")(form.asInstanceOf[js.Any])
    if (frameUrl != null) __obj.updateDynamic("frameUrl")(frameUrl.asInstanceOf[js.Any])
    if (fuzzedUrl != null) __obj.updateDynamic("fuzzedUrl")(fuzzedUrl.asInstanceOf[js.Any])
    if (httpMethod != null) __obj.updateDynamic("httpMethod")(httpMethod.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (outdatedLibrary != null) __obj.updateDynamic("outdatedLibrary")(outdatedLibrary.asInstanceOf[js.Any])
    if (reproductionUrl != null) __obj.updateDynamic("reproductionUrl")(reproductionUrl.asInstanceOf[js.Any])
    if (trackingId != null) __obj.updateDynamic("trackingId")(trackingId.asInstanceOf[js.Any])
    if (violatingResource != null) __obj.updateDynamic("violatingResource")(violatingResource.asInstanceOf[js.Any])
    if (vulnerableHeaders != null) __obj.updateDynamic("vulnerableHeaders")(vulnerableHeaders.asInstanceOf[js.Any])
    if (vulnerableParameters != null) __obj.updateDynamic("vulnerableParameters")(vulnerableParameters.asInstanceOf[js.Any])
    if (xss != null) __obj.updateDynamic("xss")(xss.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaFinding]
  }
}

