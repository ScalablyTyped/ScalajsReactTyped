package typingsJapgolly.googleapis.websecurityscannerV1betaMod.websecurityscannerV1beta

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A ScanConfig resource contains the configurations to launch a scan. next
  * id: 12
  */
@js.native
trait SchemaScanConfig extends js.Object {
  /**
    * The authentication configuration. If specified, service will use the
    * authentication configuration during scanning.
    */
  var authentication: js.UndefOr[SchemaAuthentication] = js.native
  /**
    * The blacklist URL patterns as described in
    * https://cloud.google.com/security-scanner/docs/excluded-urls
    */
  var blacklistPatterns: js.UndefOr[js.Array[String]] = js.native
  /**
    * Required. The user provided display name of the ScanConfig.
    */
  var displayName: js.UndefOr[String] = js.native
  /**
    * Controls export of scan configurations and results to Cloud Security
    * Command Center.
    */
  var exportToSecurityCommandCenter: js.UndefOr[String] = js.native
  /**
    * Latest ScanRun if available.
    */
  var latestRun: js.UndefOr[SchemaScanRun] = js.native
  /**
    * The maximum QPS during scanning. A valid value ranges from 5 to 20
    * inclusively. If the field is unspecified or its value is set 0, server
    * will default to 15. Other values outside of [5, 20] range will be
    * rejected with INVALID_ARGUMENT error.
    */
  var maxQps: js.UndefOr[Double] = js.native
  /**
    * The resource name of the ScanConfig. The name follows the format of
    * &#39;projects/{projectId}/scanConfigs/{scanConfigId}&#39;. The ScanConfig
    * IDs are generated by the system.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * The schedule of the ScanConfig.
    */
  var schedule: js.UndefOr[SchemaSchedule] = js.native
  /**
    * Required. The starting URLs from which the scanner finds site pages.
    */
  var startingUrls: js.UndefOr[js.Array[String]] = js.native
  /**
    * Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be
    * used as a default.
    */
  var targetPlatforms: js.UndefOr[js.Array[String]] = js.native
  /**
    * The user agent used during scanning.
    */
  var userAgent: js.UndefOr[String] = js.native
}

object SchemaScanConfig {
  @scala.inline
  def apply(
    authentication: SchemaAuthentication = null,
    blacklistPatterns: js.Array[String] = null,
    displayName: String = null,
    exportToSecurityCommandCenter: String = null,
    latestRun: SchemaScanRun = null,
    maxQps: Int | Double = null,
    name: String = null,
    schedule: SchemaSchedule = null,
    startingUrls: js.Array[String] = null,
    targetPlatforms: js.Array[String] = null,
    userAgent: String = null
  ): SchemaScanConfig = {
    val __obj = js.Dynamic.literal()
    if (authentication != null) __obj.updateDynamic("authentication")(authentication.asInstanceOf[js.Any])
    if (blacklistPatterns != null) __obj.updateDynamic("blacklistPatterns")(blacklistPatterns.asInstanceOf[js.Any])
    if (displayName != null) __obj.updateDynamic("displayName")(displayName.asInstanceOf[js.Any])
    if (exportToSecurityCommandCenter != null) __obj.updateDynamic("exportToSecurityCommandCenter")(exportToSecurityCommandCenter.asInstanceOf[js.Any])
    if (latestRun != null) __obj.updateDynamic("latestRun")(latestRun.asInstanceOf[js.Any])
    if (maxQps != null) __obj.updateDynamic("maxQps")(maxQps.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (schedule != null) __obj.updateDynamic("schedule")(schedule.asInstanceOf[js.Any])
    if (startingUrls != null) __obj.updateDynamic("startingUrls")(startingUrls.asInstanceOf[js.Any])
    if (targetPlatforms != null) __obj.updateDynamic("targetPlatforms")(targetPlatforms.asInstanceOf[js.Any])
    if (userAgent != null) __obj.updateDynamic("userAgent")(userAgent.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaScanConfig]
  }
}

