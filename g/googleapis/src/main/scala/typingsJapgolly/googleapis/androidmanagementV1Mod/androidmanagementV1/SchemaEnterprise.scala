package typingsJapgolly.googleapis.androidmanagementV1Mod.androidmanagementV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * The configuration applied to an enterprise.
  */
@js.native
trait SchemaEnterprise extends js.Object {
  /**
    * Deprecated and unused.
    */
  var appAutoApprovalEnabled: js.UndefOr[Boolean] = js.native
  /**
    * The types of Google Pub/Sub notifications enabled for the enterprise.
    */
  var enabledNotificationTypes: js.UndefOr[js.Array[String]] = js.native
  /**
    * The name of the enterprise displayed to users.
    */
  var enterpriseDisplayName: js.UndefOr[String] = js.native
  /**
    * An image displayed as a logo during device provisioning. Supported types
    * are: image/bmp, image/gif, image/x-ico, image/jpeg, image/png,
    * image/webp, image/vnd.wap.wbmp, image/x-adobe-dng.
    */
  var logo: js.UndefOr[SchemaExternalData] = js.native
  /**
    * The name of the enterprise which is generated by the server during
    * creation, in the form enterprises/{enterpriseId}.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * A color in RGB format that indicates the predominant color to display in
    * the device management app UI. The color components are stored as follows:
    * (red &lt;&lt; 16) | (green &lt;&lt; 8) | blue, where the value of each
    * component is between 0 and 255, inclusive.
    */
  var primaryColor: js.UndefOr[Double] = js.native
  /**
    * The topic that Cloud Pub/Sub notifications are published to, in the form
    * projects/{project}/topics/{topic}. This field is only required if Pub/Sub
    * notifications are enabled.
    */
  var pubsubTopic: js.UndefOr[String] = js.native
  /**
    * Sign-in details of the enterprise. Maximum of 1 SigninDetail is
    * supported.
    */
  var signinDetails: js.UndefOr[js.Array[SchemaSigninDetail]] = js.native
  /**
    * Terms and conditions that must be accepted when provisioning a device for
    * this enterprise. A page of terms is generated for each value in this
    * list.
    */
  var termsAndConditions: js.UndefOr[js.Array[SchemaTermsAndConditions]] = js.native
}

object SchemaEnterprise {
  @scala.inline
  def apply(
    appAutoApprovalEnabled: js.UndefOr[Boolean] = js.undefined,
    enabledNotificationTypes: js.Array[String] = null,
    enterpriseDisplayName: String = null,
    logo: SchemaExternalData = null,
    name: String = null,
    primaryColor: Int | Double = null,
    pubsubTopic: String = null,
    signinDetails: js.Array[SchemaSigninDetail] = null,
    termsAndConditions: js.Array[SchemaTermsAndConditions] = null
  ): SchemaEnterprise = {
    val __obj = js.Dynamic.literal()
    if (!js.isUndefined(appAutoApprovalEnabled)) __obj.updateDynamic("appAutoApprovalEnabled")(appAutoApprovalEnabled.asInstanceOf[js.Any])
    if (enabledNotificationTypes != null) __obj.updateDynamic("enabledNotificationTypes")(enabledNotificationTypes.asInstanceOf[js.Any])
    if (enterpriseDisplayName != null) __obj.updateDynamic("enterpriseDisplayName")(enterpriseDisplayName.asInstanceOf[js.Any])
    if (logo != null) __obj.updateDynamic("logo")(logo.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (primaryColor != null) __obj.updateDynamic("primaryColor")(primaryColor.asInstanceOf[js.Any])
    if (pubsubTopic != null) __obj.updateDynamic("pubsubTopic")(pubsubTopic.asInstanceOf[js.Any])
    if (signinDetails != null) __obj.updateDynamic("signinDetails")(signinDetails.asInstanceOf[js.Any])
    if (termsAndConditions != null) __obj.updateDynamic("termsAndConditions")(termsAndConditions.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaEnterprise]
  }
}

