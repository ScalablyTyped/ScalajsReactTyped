package typingsJapgolly.googleapis.discoveryV1Mod.discoveryV1

import org.scalablytyped.runtime.StringDictionary
import typingsJapgolly.googleapis.AnonDiscriminant
import typingsJapgolly.googleapis.AnonRequired
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

@js.native
trait SchemaJsonSchema extends js.Object {
  /**
    * A reference to another schema. The value of this property is the
    * &quot;id&quot; of another schema.
    */
  @JSName("$ref")
  var $ref: js.UndefOr[String] = js.native
  /**
    * If this is a schema for an object, this property is the schema for any
    * additional properties with dynamic keys on this object.
    */
  var additionalProperties: js.UndefOr[SchemaJsonSchema] = js.native
  /**
    * Additional information about this property.
    */
  var annotations: js.UndefOr[AnonRequired] = js.native
  /**
    * The default value of this property (if one exists).
    */
  var default: js.UndefOr[String] = js.native
  /**
    * A description of this object.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * Values this parameter may take (if it is an enum).
    */
  var enum: js.UndefOr[js.Array[String]] = js.native
  /**
    * The descriptions for the enums. Each position maps to the corresponding
    * value in the &quot;enum&quot; array.
    */
  var enumDescriptions: js.UndefOr[js.Array[String]] = js.native
  /**
    * An additional regular expression or key that helps constrain the value.
    * For more details see:
    * http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23
    */
  var format: js.UndefOr[String] = js.native
  /**
    * Unique identifier for this schema.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * If this is a schema for an array, this property is the schema for each
    * element in the array.
    */
  var items: js.UndefOr[SchemaJsonSchema] = js.native
  /**
    * Whether this parameter goes in the query or the path for REST requests.
    */
  var location: js.UndefOr[String] = js.native
  /**
    * The maximum value of this parameter.
    */
  var maximum: js.UndefOr[String] = js.native
  /**
    * The minimum value of this parameter.
    */
  var minimum: js.UndefOr[String] = js.native
  /**
    * The regular expression this parameter must conform to. Uses Java 6 regex
    * format:
    * http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html
    */
  var pattern: js.UndefOr[String] = js.native
  /**
    * If this is a schema for an object, list the schema for each property of
    * this object.
    */
  var properties: js.UndefOr[StringDictionary[SchemaJsonSchema]] = js.native
  /**
    * The value is read-only, generated by the service. The value cannot be
    * modified by the client. If the value is included in a POST, PUT, or PATCH
    * request, it is ignored by the service.
    */
  var readOnly: js.UndefOr[Boolean] = js.native
  /**
    * Whether this parameter may appear multiple times.
    */
  var repeated: js.UndefOr[Boolean] = js.native
  /**
    * Whether the parameter is required.
    */
  var required: js.UndefOr[Boolean] = js.native
  /**
    * The value type for this schema. A list of values can be found here:
    * http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1
    */
  var `type`: js.UndefOr[String] = js.native
  /**
    * In a variant data type, the value of one property is used to determine
    * how to interpret the entire entity. Its value must exist in a map of
    * descriminant values to schema names.
    */
  var variant: js.UndefOr[AnonDiscriminant] = js.native
}

