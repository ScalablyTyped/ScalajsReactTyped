package typingsJapgolly.googleapis.alphaMod.computeAlpha

import org.scalablytyped.runtime.StringDictionary
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Represents a VPN gateway resource.
  */
@js.native
trait SchemaVpnGateway extends js.Object {
  /**
    * [Output Only] Creation timestamp in RFC3339 text format.
    */
  var creationTimestamp: js.UndefOr[String] = js.native
  /**
    * An optional description of this resource. Provide this property when you
    * create the resource.
    */
  var description: js.UndefOr[String] = js.native
  /**
    * [Output Only] The unique identifier for the resource. This identifier is
    * defined by the server.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * [Output Only] Type of resource. Always compute#vpnGateway for VPN
    * gateways.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * A fingerprint for the labels being applied to this VpnGateway, which is
    * essentially a hash of the labels set used for optimistic locking. The
    * fingerprint is initially generated by Compute Engine and changes after
    * every request to modify or update labels. You must always provide an
    * up-to-date fingerprint hash in order to update or change labels,
    * otherwise the request will fail with error 412 conditionNotMet.  To see
    * the latest fingerprint, make a get() request to retrieve an VpnGateway.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  /**
    * Labels to apply to this VpnGateway resource. These can be later modified
    * by the setLabels method. Each label key/value must comply with RFC1035.
    * Label values may be empty.
    */
  var labels: js.UndefOr[StringDictionary[String]] = js.native
  /**
    * Name of the resource. Provided by the client when the resource is
    * created. The name must be 1-63 characters long, and comply with RFC1035.
    * Specifically, the name must be 1-63 characters long and match the regular
    * expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character
    * must be a lowercase letter, and all following characters must be a dash,
    * lowercase letter, or digit, except the last character, which cannot be a
    * dash.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * URL of the network to which this VPN gateway is attached. Provided by the
    * client when the VPN gateway is created.
    */
  var network: js.UndefOr[String] = js.native
  /**
    * [Output Only] URL of the region where the VPN gateway resides.
    */
  var region: js.UndefOr[String] = js.native
  /**
    * [Output Only] Server-defined URL for the resource.
    */
  var selfLink: js.UndefOr[String] = js.native
  /**
    * [Output Only] A list of interfaces on this VPN gateway.
    */
  var vpnInterfaces: js.UndefOr[js.Array[SchemaVpnGatewayVpnGatewayInterface]] = js.native
}

object SchemaVpnGateway {
  @scala.inline
  def apply(
    creationTimestamp: String = null,
    description: String = null,
    id: String = null,
    kind: String = null,
    labelFingerprint: String = null,
    labels: StringDictionary[String] = null,
    name: String = null,
    network: String = null,
    region: String = null,
    selfLink: String = null,
    vpnInterfaces: js.Array[SchemaVpnGatewayVpnGatewayInterface] = null
  ): SchemaVpnGateway = {
    val __obj = js.Dynamic.literal()
    if (creationTimestamp != null) __obj.updateDynamic("creationTimestamp")(creationTimestamp.asInstanceOf[js.Any])
    if (description != null) __obj.updateDynamic("description")(description.asInstanceOf[js.Any])
    if (id != null) __obj.updateDynamic("id")(id.asInstanceOf[js.Any])
    if (kind != null) __obj.updateDynamic("kind")(kind.asInstanceOf[js.Any])
    if (labelFingerprint != null) __obj.updateDynamic("labelFingerprint")(labelFingerprint.asInstanceOf[js.Any])
    if (labels != null) __obj.updateDynamic("labels")(labels.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (network != null) __obj.updateDynamic("network")(network.asInstanceOf[js.Any])
    if (region != null) __obj.updateDynamic("region")(region.asInstanceOf[js.Any])
    if (selfLink != null) __obj.updateDynamic("selfLink")(selfLink.asInstanceOf[js.Any])
    if (vpnInterfaces != null) __obj.updateDynamic("vpnInterfaces")(vpnInterfaces.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaVpnGateway]
  }
}

