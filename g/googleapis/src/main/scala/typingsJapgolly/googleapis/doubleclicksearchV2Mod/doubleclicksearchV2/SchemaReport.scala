package typingsJapgolly.googleapis.doubleclicksearchV2Mod.doubleclicksearchV2

import typingsJapgolly.googleapis.AnonByteCount
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * A DoubleClick Search report. This object contains the report request, some
  * report metadata such as currency code, and the generated report rows or
  * report files.
  */
@js.native
trait SchemaReport extends js.Object {
  /**
    * Asynchronous report only. Contains a list of generated report files once
    * the report has succesfully completed.
    */
  var files: js.UndefOr[js.Array[AnonByteCount]] = js.native
  /**
    * Asynchronous report only. Id of the report.
    */
  var id: js.UndefOr[String] = js.native
  /**
    * Asynchronous report only. True if and only if the report has completed
    * successfully and the report files are ready to be downloaded.
    */
  var isReportReady: js.UndefOr[Boolean] = js.native
  /**
    * Identifies this as a Report resource. Value: the fixed string
    * doubleclicksearch#report.
    */
  var kind: js.UndefOr[String] = js.native
  /**
    * The request that created the report. Optional fields not specified in the
    * original request are filled with default values.
    */
  var request: js.UndefOr[SchemaReportRequest] = js.native
  /**
    * The number of report rows generated by the report, not including headers.
    */
  var rowCount: js.UndefOr[Double] = js.native
  /**
    * Synchronous report only. Generated report rows.
    */
  var rows: js.UndefOr[js.Array[SchemaReportRow]] = js.native
  /**
    * The currency code of all monetary values produced in the report,
    * including values that are set by users (e.g., keyword bid settings) and
    * metrics (e.g., cost and revenue). The currency code of a report is
    * determined by the statisticsCurrency field of the report request.
    */
  var statisticsCurrencyCode: js.UndefOr[String] = js.native
  /**
    * If all statistics of the report are sourced from the same time zone, this
    * would be it. Otherwise the field is unset.
    */
  var statisticsTimeZone: js.UndefOr[String] = js.native
}

object SchemaReport {
  @scala.inline
  def apply(
    files: js.Array[AnonByteCount] = null,
    id: String = null,
    isReportReady: js.UndefOr[Boolean] = js.undefined,
    kind: String = null,
    request: SchemaReportRequest = null,
    rowCount: Int | Double = null,
    rows: js.Array[SchemaReportRow] = null,
    statisticsCurrencyCode: String = null,
    statisticsTimeZone: String = null
  ): SchemaReport = {
    val __obj = js.Dynamic.literal()
    if (files != null) __obj.updateDynamic("files")(files.asInstanceOf[js.Any])
    if (id != null) __obj.updateDynamic("id")(id.asInstanceOf[js.Any])
    if (!js.isUndefined(isReportReady)) __obj.updateDynamic("isReportReady")(isReportReady.asInstanceOf[js.Any])
    if (kind != null) __obj.updateDynamic("kind")(kind.asInstanceOf[js.Any])
    if (request != null) __obj.updateDynamic("request")(request.asInstanceOf[js.Any])
    if (rowCount != null) __obj.updateDynamic("rowCount")(rowCount.asInstanceOf[js.Any])
    if (rows != null) __obj.updateDynamic("rows")(rows.asInstanceOf[js.Any])
    if (statisticsCurrencyCode != null) __obj.updateDynamic("statisticsCurrencyCode")(statisticsCurrencyCode.asInstanceOf[js.Any])
    if (statisticsTimeZone != null) __obj.updateDynamic("statisticsTimeZone")(statisticsTimeZone.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaReport]
  }
}

