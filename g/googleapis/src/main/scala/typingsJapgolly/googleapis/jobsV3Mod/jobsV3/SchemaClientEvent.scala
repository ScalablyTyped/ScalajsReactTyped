package typingsJapgolly.googleapis.jobsV3Mod.jobsV3

import org.scalablytyped.runtime.StringDictionary
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * An event issued when an end user interacts with the application that
  * implements Cloud Talent Solution. Providing this information improves the
  * quality of search and recommendation for the API clients, enabling the
  * service to perform optimally. The number of events sent must be consistent
  * with other calls, such as job searches, issued to the service by the
  * client.
  */
@js.native
trait SchemaClientEvent extends js.Object {
  /**
    * Required.  The timestamp of the event.
    */
  var createTime: js.UndefOr[String] = js.native
  /**
    * Required.  A unique identifier, generated by the client application. This
    * `event_id` is used to establish the relationship between different events
    * (see parent_event_id).
    */
  var eventId: js.UndefOr[String] = js.native
  /**
    * Optional.  Extra information about this event. Used for storing
    * information with no matching field in event payload, for example, user
    * application specific context or details.  At most 20 keys are supported.
    * The maximum total size of all keys and values is 2 KB.
    */
  var extraInfo: js.UndefOr[StringDictionary[String]] = js.native
  /**
    * A event issued when a job seeker interacts with the application that
    * implements Cloud Talent Solution.
    */
  var jobEvent: js.UndefOr[SchemaJobEvent] = js.native
  /**
    * Optional.  The event_id of an event that resulted in the current event.
    * For example, a Job view event usually follows a parent impression event:
    * A job seeker first does a search where a list of jobs appears
    * (impression). The job seeker then selects a result and views the
    * description of a particular job (Job view).
    */
  var parentEventId: js.UndefOr[String] = js.native
  /**
    * Required.  A unique ID generated in the API responses. It can be found in
    * ResponseMetadata.request_id.
    */
  var requestId: js.UndefOr[String] = js.native
}

object SchemaClientEvent {
  @scala.inline
  def apply(
    createTime: String = null,
    eventId: String = null,
    extraInfo: StringDictionary[String] = null,
    jobEvent: SchemaJobEvent = null,
    parentEventId: String = null,
    requestId: String = null
  ): SchemaClientEvent = {
    val __obj = js.Dynamic.literal()
    if (createTime != null) __obj.updateDynamic("createTime")(createTime.asInstanceOf[js.Any])
    if (eventId != null) __obj.updateDynamic("eventId")(eventId.asInstanceOf[js.Any])
    if (extraInfo != null) __obj.updateDynamic("extraInfo")(extraInfo.asInstanceOf[js.Any])
    if (jobEvent != null) __obj.updateDynamic("jobEvent")(jobEvent.asInstanceOf[js.Any])
    if (parentEventId != null) __obj.updateDynamic("parentEventId")(parentEventId.asInstanceOf[js.Any])
    if (requestId != null) __obj.updateDynamic("requestId")(requestId.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaClientEvent]
  }
}

