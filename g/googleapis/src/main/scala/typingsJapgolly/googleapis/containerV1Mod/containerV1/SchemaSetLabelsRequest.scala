package typingsJapgolly.googleapis.containerV1Mod.containerV1

import org.scalablytyped.runtime.StringDictionary
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * SetLabelsRequest sets the Google Cloud Platform labels on a Google
  * Container Engine cluster, which will in turn set them for Google Compute
  * Engine resources used by that cluster
  */
@js.native
trait SchemaSetLabelsRequest extends js.Object {
  /**
    * Deprecated. The name of the cluster. This field has been deprecated and
    * replaced by the name field.
    */
  var clusterId: js.UndefOr[String] = js.native
  /**
    * The fingerprint of the previous set of labels for this resource, used to
    * detect conflicts. The fingerprint is initially generated by Kubernetes
    * Engine and changes after every request to modify or update labels. You
    * must always provide an up-to-date fingerprint hash when updating or
    * changing labels. Make a &lt;code&gt;get()&lt;/code&gt; request to the
    * resource to get the latest fingerprint.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  /**
    * The name (project, location, cluster id) of the cluster to set labels.
    * Specified in the format &#39;projects/x/locations/x/clusters/ *&#39;.
    */
  var name: js.UndefOr[String] = js.native
  /**
    * Deprecated. The Google Developers Console [project ID or project
    * number](https://developers.google.com/console/help/new/#projectnumber).
    * This field has been deprecated and replaced by the name field.
    */
  var projectId: js.UndefOr[String] = js.native
  /**
    * The labels to set for that cluster.
    */
  var resourceLabels: js.UndefOr[StringDictionary[String]] = js.native
  /**
    * Deprecated. The name of the Google Compute Engine
    * [zone](/compute/docs/zones#available) in which the cluster resides. This
    * field has been deprecated and replaced by the name field.
    */
  var zone: js.UndefOr[String] = js.native
}

object SchemaSetLabelsRequest {
  @scala.inline
  def apply(
    clusterId: String = null,
    labelFingerprint: String = null,
    name: String = null,
    projectId: String = null,
    resourceLabels: StringDictionary[String] = null,
    zone: String = null
  ): SchemaSetLabelsRequest = {
    val __obj = js.Dynamic.literal()
    if (clusterId != null) __obj.updateDynamic("clusterId")(clusterId.asInstanceOf[js.Any])
    if (labelFingerprint != null) __obj.updateDynamic("labelFingerprint")(labelFingerprint.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (projectId != null) __obj.updateDynamic("projectId")(projectId.asInstanceOf[js.Any])
    if (resourceLabels != null) __obj.updateDynamic("resourceLabels")(resourceLabels.asInstanceOf[js.Any])
    if (zone != null) __obj.updateDynamic("zone")(zone.asInstanceOf[js.Any])
    __obj.asInstanceOf[SchemaSetLabelsRequest]
  }
}

