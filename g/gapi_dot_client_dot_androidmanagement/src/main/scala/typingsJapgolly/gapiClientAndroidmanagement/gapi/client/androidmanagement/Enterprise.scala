package typingsJapgolly.gapiClientAndroidmanagement.gapi.client.androidmanagement

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Enterprise extends js.Object {
  /**
    * Whether app auto-approval is enabled. When enabled, apps installed via policy for this enterprise have all permissions automatically approved. When
    * enabled, it is the caller's responsibility to display the permissions required by an app to the enterprise admin before setting the app to be installed
    * in a policy.
    */
  var appAutoApprovalEnabled: js.UndefOr[Boolean] = js.undefined
  /** The notification types to enable via Google Cloud Pub/Sub. */
  var enabledNotificationTypes: js.UndefOr[js.Array[String]] = js.undefined
  /** The name of the enterprise as it will appear to users. */
  var enterpriseDisplayName: js.UndefOr[String] = js.undefined
  /**
    * An image displayed as a logo during device provisioning. Supported types are: image/bmp, image/gif, image/x-ico, image/jpeg, image/png, image/webp,
    * image/vnd.wap.wbmp, image/x-adobe-dng.
    */
  var logo: js.UndefOr[ExternalData] = js.undefined
  /** The name of the enterprise which is generated by the server during creation, in the form enterprises/{enterpriseId} */
  var name: js.UndefOr[String] = js.undefined
  /**
    * A color in RGB format indicating the predominant color to display in the device management app UI. The color components are stored as follows: (red <<
    * 16) | (green << 8) | blue, where each component may take a value between 0 and 255 inclusive.
    */
  var primaryColor: js.UndefOr[Double] = js.undefined
  /**
    * When Cloud Pub/Sub notifications are enabled, this field is required to indicate the topic to which the notifications will be published. The format of
    * this field is projects/{project}/topics/{topic}. You must have granted the publish permission on this topic to
    * android-cloud-policy@system.gserviceaccount.com
    */
  var pubsubTopic: js.UndefOr[String] = js.undefined
}

object Enterprise {
  @scala.inline
  def apply(
    appAutoApprovalEnabled: js.UndefOr[Boolean] = js.undefined,
    enabledNotificationTypes: js.Array[String] = null,
    enterpriseDisplayName: String = null,
    logo: ExternalData = null,
    name: String = null,
    primaryColor: Int | Double = null,
    pubsubTopic: String = null
  ): Enterprise = {
    val __obj = js.Dynamic.literal()
    if (!js.isUndefined(appAutoApprovalEnabled)) __obj.updateDynamic("appAutoApprovalEnabled")(appAutoApprovalEnabled.asInstanceOf[js.Any])
    if (enabledNotificationTypes != null) __obj.updateDynamic("enabledNotificationTypes")(enabledNotificationTypes.asInstanceOf[js.Any])
    if (enterpriseDisplayName != null) __obj.updateDynamic("enterpriseDisplayName")(enterpriseDisplayName.asInstanceOf[js.Any])
    if (logo != null) __obj.updateDynamic("logo")(logo.asInstanceOf[js.Any])
    if (name != null) __obj.updateDynamic("name")(name.asInstanceOf[js.Any])
    if (primaryColor != null) __obj.updateDynamic("primaryColor")(primaryColor.asInstanceOf[js.Any])
    if (pubsubTopic != null) __obj.updateDynamic("pubsubTopic")(pubsubTopic.asInstanceOf[js.Any])
    __obj.asInstanceOf[Enterprise]
  }
}

