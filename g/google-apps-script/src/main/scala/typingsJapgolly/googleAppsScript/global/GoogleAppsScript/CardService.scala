package typingsJapgolly.googleAppsScript.global.GoogleAppsScript

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object CardService {
  
  /**
    * An enum that represents the border types that can be applied to widgets.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.BorderType")
  @js.native
  object BorderType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.BorderType & Double
      ] = js.native
    
    /* 0 */ val NO_BORDER: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.BorderType.NO_BORDER & Double = js.native
    
    /* 1 */ val STROKE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.BorderType.STROKE & Double = js.native
  }
  
  /**
    * An enum value that specifies whether the composed email is a standalone or reply draft.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.ComposedEmailType")
  @js.native
  object ComposedEmailType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType & Double
      ] = js.native
    
    /* 0 */ val REPLY_AS_DRAFT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType.REPLY_AS_DRAFT & Double = js.native
    
    /* 1 */ val STANDALONE_DRAFT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType.STANDALONE_DRAFT & Double = js.native
  }
  
  /**
    * An enum value that specifies the content type of the content generated by a UpdateDraftActionResponse.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.ContentType")
  @js.native
  object ContentType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ContentType & Double
      ] = js.native
    
    /* 2 */ val IMMUTABLE_HTML: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ContentType.IMMUTABLE_HTML & Double = js.native
    
    /* 1 */ val MUTABLE_HTML: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ContentType.MUTABLE_HTML & Double = js.native
    
    /* 0 */ val TEXT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ContentType.TEXT & Double = js.native
  }
  
  /**
    * An enum that defines the display style of card.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.DisplayStyle")
  @js.native
  object DisplayStyle extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.DisplayStyle & Double
      ] = js.native
    
    /* 0 */ val PEEK: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.DisplayStyle.PEEK & Double = js.native
    
    /* 1 */ val REPLACE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.DisplayStyle.REPLACE & Double = js.native
  }
  
  /**
    * An enum that defines the image and text style of a GridItem.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.GridItemLayout")
  @js.native
  object GridItemLayout extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.GridItemLayout & Double
      ] = js.native
    
    /* 1 */ val TEXT_ABOVE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.GridItemLayout.TEXT_ABOVE & Double = js.native
    
    /* 0 */ val TEXT_BELOW: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.GridItemLayout.TEXT_BELOW & Double = js.native
  }
  
  /**
    * An enum that specifies the horizontal alignment of a widget.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.HorizontalAlignment")
  @js.native
  object HorizontalAlignment extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.HorizontalAlignment & Double
      ] = js.native
    
    /* 1 */ val CENTER: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.HorizontalAlignment.CENTER & Double = js.native
    
    /* 2 */ val END: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.HorizontalAlignment.END & Double = js.native
    
    /* 0 */ val START: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.HorizontalAlignment.START & Double = js.native
  }
  
  /**
    * Predefined icons that can be used in various UI objects, such as ImageButton or KeyValue widgets.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.Icon")
  @js.native
  object Icon extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon & Double] = js.native
    
    /* 1 */ val AIRPLANE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.AIRPLANE & Double = js.native
    
    /* 2 */ val BOOKMARK: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.BOOKMARK & Double = js.native
    
    /* 3 */ val BUS: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.BUS & Double = js.native
    
    /* 4 */ val CAR: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.CAR & Double = js.native
    
    /* 5 */ val CLOCK: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.CLOCK & Double = js.native
    
    /* 6 */ val CONFIRMATION_NUMBER_ICON: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.CONFIRMATION_NUMBER_ICON & Double = js.native
    
    /* 8 */ val DESCRIPTION: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.DESCRIPTION & Double = js.native
    
    /* 7 */ val DOLLAR: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.DOLLAR & Double = js.native
    
    /* 9 */ val EMAIL: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.EMAIL & Double = js.native
    
    /* 10 */ val EVENT_PERFORMER: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.EVENT_PERFORMER & Double = js.native
    
    /* 11 */ val EVENT_SEAT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.EVENT_SEAT & Double = js.native
    
    /* 12 */ val FLIGHT_ARRIVAL: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.FLIGHT_ARRIVAL & Double = js.native
    
    /* 13 */ val FLIGHT_DEPARTURE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.FLIGHT_DEPARTURE & Double = js.native
    
    /* 14 */ val HOTEL: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.HOTEL & Double = js.native
    
    /* 15 */ val HOTEL_ROOM_TYPE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.HOTEL_ROOM_TYPE & Double = js.native
    
    /* 16 */ val INVITE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.INVITE & Double = js.native
    
    /* 17 */ val MAP_PIN: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.MAP_PIN & Double = js.native
    
    /* 18 */ val MEMBERSHIP: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.MEMBERSHIP & Double = js.native
    
    /* 19 */ val MULTIPLE_PEOPLE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.MULTIPLE_PEOPLE & Double = js.native
    
    /* 0 */ val NONE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.NONE & Double = js.native
    
    /* 20 */ val OFFER: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.OFFER & Double = js.native
    
    /* 21 */ val PERSON: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.PERSON & Double = js.native
    
    /* 22 */ val PHONE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.PHONE & Double = js.native
    
    /* 23 */ val RESTAURANT_ICON: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.RESTAURANT_ICON & Double = js.native
    
    /* 24 */ val SHOPPING_CART: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.SHOPPING_CART & Double = js.native
    
    /* 25 */ val STAR: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.STAR & Double = js.native
    
    /* 26 */ val STORE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.STORE & Double = js.native
    
    /* 27 */ val TICKET: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.TICKET & Double = js.native
    
    /* 28 */ val TRAIN: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.TRAIN & Double = js.native
    
    /* 29 */ val VIDEO_CAMERA: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.VIDEO_CAMERA & Double = js.native
    
    /* 30 */ val VIDEO_PLAY: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.Icon.VIDEO_PLAY & Double = js.native
  }
  
  /**
    * An enum that represents the crop styles applied to image components.
    * If you want to apply a crop style to an IconImage, you can only use SQUARE or CIRCLE.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.ImageCropType")
  @js.native
  object ImageCropType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageCropType & Double
      ] = js.native
    
    /* 1 */ val CIRCLE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageCropType.CIRCLE & Double = js.native
    
    /* 3 */ val RECTANGLE_4_3: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageCropType.RECTANGLE_4_3 & Double = js.native
    
    /* 2 */ val RECTANGLE_CUSTOM: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageCropType.RECTANGLE_CUSTOM & Double = js.native
    
    /* 0 */ val SQUARE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageCropType.SQUARE & Double = js.native
  }
  
  /**
    * An enum that defines an image cropping style.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.ImageStyle")
  @js.native
  object ImageStyle extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageStyle & Double
      ] = js.native
    
    /* 1 */ val CIRCLE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageStyle.CIRCLE & Double = js.native
    
    /* 0 */ val SQUARE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.ImageStyle.SQUARE & Double = js.native
  }
  
  /**
    * An enum type that specifies the type of loading or progress indicator to display while an Action is being processed.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.LoadIndicator")
  @js.native
  object LoadIndicator extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator & Double
      ] = js.native
    
    /* 1 */ val NONE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator.NONE & Double = js.native
    
    /* 0 */ val SPINNER: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator.SPINNER & Double = js.native
  }
  
  /**
    * An enum that specifies what to do when a URL opened through an OpenLink is closed.
    *
    * When a link is opened, the client either forgets about it or waits until the window is closed.
    * The implementation depends on the client platform capabilities. OnClose may cause OpenAs to be ignored; if the client platform cannot support both selected values together,
    * OnClose takes precedence.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.OnClose")
  @js.native
  object OnClose extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OnClose & Double] = js.native
    
    /* 0 */ val NOTHING: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OnClose.NOTHING & Double = js.native
    
    /* 1 */ val RELOAD_ADD_ON: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OnClose.RELOAD_ADD_ON & Double = js.native
  }
  
  /**
    * An enum that specifies how to open a URL.
    *
    * The client can open a URL as either a full size window (if that is the frame used by the
    * client), or an overlay (such as a pop-up). The implementation depends on the client platform
    * capabilities, and the value selected may be ignored if the client does not support it. FULL_SIZE is supported by all clients.
    *
    * Using OnClose may cause OpenAs to be ignored; if the client platform cannot
    * support both selected values together, OnClose takes precedence.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.OpenAs")
  @js.native
  object OpenAs extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OpenAs & Double] = js.native
    
    /* 0 */ val FULL_SIZE: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OpenAs.FULL_SIZE & Double = js.native
    
    /* 1 */ val OVERLAY: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.OpenAs.OVERLAY & Double = js.native
  }
  
  /**
    * Type of selection input.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.SelectionInputType")
  @js.native
  object SelectionInputType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType & Double
      ] = js.native
    
    /* 0 */ val CHECK_BOX: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.CHECK_BOX & Double = js.native
    
    /* 2 */ val DROPDOWN: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.DROPDOWN & Double = js.native
    
    /* 1 */ val RADIO_BUTTON: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.RADIO_BUTTON & Double = js.native
  }
  
  /**
    * Type of switch.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.SwitchControlType")
  @js.native
  object SwitchControlType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SwitchControlType & Double
      ] = js.native
    
    /* 1 */ val CHECK_BOX: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SwitchControlType.CHECK_BOX & Double = js.native
    
    /* 0 */ val SWITCH: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.SwitchControlType.SWITCH & Double = js.native
  }
  
  /**
    * An enum that specifies the style for TextButton.
    *
    * TEXT is the default; it renders a simple text button with clear background.
    * FILLED buttons have a background color you can set with
    * TextButton.setBackgroundColor(backgroundColor).
    */
  @JSGlobal("GoogleAppsScript.Card_Service.TextButtonStyle")
  @js.native
  object TextButtonStyle extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle & Double
      ] = js.native
    
    /* 1 */ val FILLED: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle.FILLED & Double = js.native
    
    /* 0 */ val TEXT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle.TEXT & Double = js.native
  }
  
  /**
    * An enum value that specifies the type of an UpdateDraftBodyAction.
    */
  @JSGlobal("GoogleAppsScript.Card_Service.UpdateDraftBodyType")
  @js.native
  object UpdateDraftBodyType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.UpdateDraftBodyType & Double
      ] = js.native
    
    /* 0 */ val IN_PLACE_INSERT: typingsJapgolly.googleAppsScript.GoogleAppsScript.CardService.UpdateDraftBodyType.IN_PLACE_INSERT & Double = js.native
  }
}
