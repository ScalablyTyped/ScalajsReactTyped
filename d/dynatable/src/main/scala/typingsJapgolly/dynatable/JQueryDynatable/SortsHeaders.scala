package typingsJapgolly.dynatable.JQueryDynatable

import japgolly.scalajs.react.Callback
import japgolly.scalajs.react.CallbackTo
import org.scalajs.dom.raw.Element
import typingsJapgolly.dynatable.JQuery
import typingsJapgolly.std.Event_
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait SortsHeaders extends js.Object {
  /**
    * Inject the arrow down inside the $link
    *
    * @param $link The jQuery object to be used
    */
  def appendArrowDown($link: JQuery): Unit
  /**
    * Inject the arrow up inside the $link
    *
    * @param $link The jQuery object to be used
    */
  def appendArrowUp($link: JQuery): Unit
  /** Go through each cell and call `attachOne` */
  def attach(): Unit
  /**
    * If sorting is allowed for the provided cell, it injects the hml generated by `create`
    *
    * @param cell The cell Element to be parsed
    */
  def attachOne(cell: Element): Unit
  /**
    * Generate the html markup to be inserted inside the header of the sortable column
    *
    * @param cell An Element which point to the cell in the header row
    * @return A jQuery object containing the markup of the link
    */
  def create(cell: Element): JQuery
  /** Create and init the sorts */
  def init(): Unit
  /**
    * Check if sort feature is enabled
    *
    * @return A boolean if sort feature is enabled
    */
  def initOnLoad(): Boolean
  /** Remove all the sort headers from the table */
  def removeAll(): Unit
  /** Remove all arrows Elements from the table */
  def removeAllArrows(): Unit
  /**
    * Remove the arrow found inside the provided $link
    *
    * @param $link The jQuery object containing the `<a>` markup in the sortable headers
    */
  def removeArrow($link: JQuery): Unit
  /**
    * Remove the link generated by dynatable inside the sortable header
    * and restore its original html content
    *
    * @param cell The cell Element that will be parsed
    */
  def removeOne(cell: Element): Unit
  /**
    * @todo learn more about this method and document it
    *
    * @param $link The jQuery object to be used
    * @param column The Column object that will be used
    * @return A boolean which is true if supplied test function passes for ALL items in an array
    */
  def sortedByColumn($link: JQuery, column: Column): Boolean
  /**
    * Inspect the settings to determine the order to use
    *
    * @param column The Column object that will be used
    * @return A number (-1 or +1) describing the order to use (DESC or ASC)
    */
  def sortedByColumnValue(column: Column): Double
  /**
    * Refresh the [multi] sorting of the dataset
    *
    * @param $e The event object (of the click on the table sortable header)
    * @param $link The header link
    * @param column The Column object to be sorted
    */
  def toggleSort(e: Event_, $link: JQuery, column: Column): Unit
}

object SortsHeaders {
  @scala.inline
  def apply(
    appendArrowDown: JQuery => Callback,
    appendArrowUp: JQuery => Callback,
    attach: Callback,
    attachOne: Element => Callback,
    create: Element => CallbackTo[JQuery],
    init: Callback,
    initOnLoad: CallbackTo[Boolean],
    removeAll: Callback,
    removeAllArrows: Callback,
    removeArrow: JQuery => Callback,
    removeOne: Element => Callback,
    sortedByColumn: (JQuery, Column) => CallbackTo[Boolean],
    sortedByColumnValue: Column => CallbackTo[Double],
    toggleSort: (Event_, JQuery, Column) => Callback
  ): SortsHeaders = {
    val __obj = js.Dynamic.literal()
    __obj.updateDynamic("appendArrowDown")(js.Any.fromFunction1((t0: typingsJapgolly.dynatable.JQuery) => appendArrowDown(t0).runNow()))
    __obj.updateDynamic("appendArrowUp")(js.Any.fromFunction1((t0: typingsJapgolly.dynatable.JQuery) => appendArrowUp(t0).runNow()))
    __obj.updateDynamic("attach")(attach.toJsFn)
    __obj.updateDynamic("attachOne")(js.Any.fromFunction1((t0: org.scalajs.dom.raw.Element) => attachOne(t0).runNow()))
    __obj.updateDynamic("create")(js.Any.fromFunction1((t0: org.scalajs.dom.raw.Element) => create(t0).runNow()))
    __obj.updateDynamic("init")(init.toJsFn)
    __obj.updateDynamic("initOnLoad")(initOnLoad.toJsFn)
    __obj.updateDynamic("removeAll")(removeAll.toJsFn)
    __obj.updateDynamic("removeAllArrows")(removeAllArrows.toJsFn)
    __obj.updateDynamic("removeArrow")(js.Any.fromFunction1((t0: typingsJapgolly.dynatable.JQuery) => removeArrow(t0).runNow()))
    __obj.updateDynamic("removeOne")(js.Any.fromFunction1((t0: org.scalajs.dom.raw.Element) => removeOne(t0).runNow()))
    __obj.updateDynamic("sortedByColumn")(js.Any.fromFunction2((t0: typingsJapgolly.dynatable.JQuery, t1: typingsJapgolly.dynatable.JQueryDynatable.Column) => sortedByColumn(t0, t1).runNow()))
    __obj.updateDynamic("sortedByColumnValue")(js.Any.fromFunction1((t0: typingsJapgolly.dynatable.JQueryDynatable.Column) => sortedByColumnValue(t0).runNow()))
    __obj.updateDynamic("toggleSort")(js.Any.fromFunction3((t0: typingsJapgolly.std.Event_, t1: typingsJapgolly.dynatable.JQuery, t2: typingsJapgolly.dynatable.JQueryDynatable.Column) => toggleSort(t0, t1, t2).runNow()))
    __obj.asInstanceOf[SortsHeaders]
  }
}

