package typingsJapgolly.devtoolsProtocol.mod.Protocol.Input

import typingsJapgolly.devtoolsProtocol.devtoolsProtocolStrings.char
import typingsJapgolly.devtoolsProtocol.devtoolsProtocolStrings.keyDown
import typingsJapgolly.devtoolsProtocol.devtoolsProtocolStrings.keyUp
import typingsJapgolly.devtoolsProtocol.devtoolsProtocolStrings.rawKeyDown
import typingsJapgolly.devtoolsProtocol.mod.Protocol.integer
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

trait DispatchKeyEventRequest extends StObject {
  
  /**
    * Whether the event was generated from auto repeat (default: false).
    */
  var autoRepeat: js.UndefOr[Boolean] = js.undefined
  
  /**
    * Unique DOM defined string value for each physical key (e.g., 'KeyA') (default: "").
    */
  var code: js.UndefOr[String] = js.undefined
  
  /**
    * Editing commands to send with the key event (e.g., 'selectAll') (default: []).
    * These are related to but not equal the command names used in `document.execCommand` and NSStandardKeyBindingResponding.
    * See https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h for valid command names.
    */
  var commands: js.UndefOr[js.Array[String]] = js.undefined
  
  /**
    * Whether the event was generated from the keypad (default: false).
    */
  var isKeypad: js.UndefOr[Boolean] = js.undefined
  
  /**
    * Whether the event was a system key event (default: false).
    */
  var isSystemKey: js.UndefOr[Boolean] = js.undefined
  
  /**
    * Unique DOM defined string value describing the meaning of the key in the context of active
    * modifiers, keyboard layout, etc (e.g., 'AltGr') (default: "").
    */
  var key: js.UndefOr[String] = js.undefined
  
  /**
    * Unique key identifier (e.g., 'U+0041') (default: "").
    */
  var keyIdentifier: js.UndefOr[String] = js.undefined
  
  /**
    * Whether the event was from the left or right side of the keyboard. 1=Left, 2=Right (default:
    * 0).
    */
  var location: js.UndefOr[integer] = js.undefined
  
  /**
    * Bit field representing pressed modifier keys. Alt=1, Ctrl=2, Meta/Command=4, Shift=8
    * (default: 0).
    */
  var modifiers: js.UndefOr[integer] = js.undefined
  
  /**
    * Native virtual key code (default: 0).
    */
  var nativeVirtualKeyCode: js.UndefOr[integer] = js.undefined
  
  /**
    * Text as generated by processing a virtual key code with a keyboard layout. Not needed for
    * for `keyUp` and `rawKeyDown` events (default: "")
    */
  var text: js.UndefOr[String] = js.undefined
  
  /**
    * Time at which the event occurred.
    */
  var timestamp: js.UndefOr[TimeSinceEpoch] = js.undefined
  
  /**
    * Type of the key event. (DispatchKeyEventRequestType enum)
    */
  var `type`: keyDown | keyUp | rawKeyDown | char
  
  /**
    * Text that would have been generated by the keyboard if no modifiers were pressed (except for
    * shift). Useful for shortcut (accelerator) key handling (default: "").
    */
  var unmodifiedText: js.UndefOr[String] = js.undefined
  
  /**
    * Windows virtual key code (default: 0).
    */
  var windowsVirtualKeyCode: js.UndefOr[integer] = js.undefined
}
object DispatchKeyEventRequest {
  
  inline def apply(`type`: keyDown | keyUp | rawKeyDown | char): DispatchKeyEventRequest = {
    val __obj = js.Dynamic.literal()
    __obj.updateDynamic("type")(`type`.asInstanceOf[js.Any])
    __obj.asInstanceOf[DispatchKeyEventRequest]
  }
  
  extension [Self <: DispatchKeyEventRequest](x: Self) {
    
    inline def setAutoRepeat(value: Boolean): Self = StObject.set(x, "autoRepeat", value.asInstanceOf[js.Any])
    
    inline def setAutoRepeatUndefined: Self = StObject.set(x, "autoRepeat", js.undefined)
    
    inline def setCode(value: String): Self = StObject.set(x, "code", value.asInstanceOf[js.Any])
    
    inline def setCodeUndefined: Self = StObject.set(x, "code", js.undefined)
    
    inline def setCommands(value: js.Array[String]): Self = StObject.set(x, "commands", value.asInstanceOf[js.Any])
    
    inline def setCommandsUndefined: Self = StObject.set(x, "commands", js.undefined)
    
    inline def setCommandsVarargs(value: String*): Self = StObject.set(x, "commands", js.Array(value*))
    
    inline def setIsKeypad(value: Boolean): Self = StObject.set(x, "isKeypad", value.asInstanceOf[js.Any])
    
    inline def setIsKeypadUndefined: Self = StObject.set(x, "isKeypad", js.undefined)
    
    inline def setIsSystemKey(value: Boolean): Self = StObject.set(x, "isSystemKey", value.asInstanceOf[js.Any])
    
    inline def setIsSystemKeyUndefined: Self = StObject.set(x, "isSystemKey", js.undefined)
    
    inline def setKey(value: String): Self = StObject.set(x, "key", value.asInstanceOf[js.Any])
    
    inline def setKeyIdentifier(value: String): Self = StObject.set(x, "keyIdentifier", value.asInstanceOf[js.Any])
    
    inline def setKeyIdentifierUndefined: Self = StObject.set(x, "keyIdentifier", js.undefined)
    
    inline def setKeyUndefined: Self = StObject.set(x, "key", js.undefined)
    
    inline def setLocation(value: integer): Self = StObject.set(x, "location", value.asInstanceOf[js.Any])
    
    inline def setLocationUndefined: Self = StObject.set(x, "location", js.undefined)
    
    inline def setModifiers(value: integer): Self = StObject.set(x, "modifiers", value.asInstanceOf[js.Any])
    
    inline def setModifiersUndefined: Self = StObject.set(x, "modifiers", js.undefined)
    
    inline def setNativeVirtualKeyCode(value: integer): Self = StObject.set(x, "nativeVirtualKeyCode", value.asInstanceOf[js.Any])
    
    inline def setNativeVirtualKeyCodeUndefined: Self = StObject.set(x, "nativeVirtualKeyCode", js.undefined)
    
    inline def setText(value: String): Self = StObject.set(x, "text", value.asInstanceOf[js.Any])
    
    inline def setTextUndefined: Self = StObject.set(x, "text", js.undefined)
    
    inline def setTimestamp(value: TimeSinceEpoch): Self = StObject.set(x, "timestamp", value.asInstanceOf[js.Any])
    
    inline def setTimestampUndefined: Self = StObject.set(x, "timestamp", js.undefined)
    
    inline def setType(value: keyDown | keyUp | rawKeyDown | char): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    inline def setUnmodifiedText(value: String): Self = StObject.set(x, "unmodifiedText", value.asInstanceOf[js.Any])
    
    inline def setUnmodifiedTextUndefined: Self = StObject.set(x, "unmodifiedText", js.undefined)
    
    inline def setWindowsVirtualKeyCode(value: integer): Self = StObject.set(x, "windowsVirtualKeyCode", value.asInstanceOf[js.Any])
    
    inline def setWindowsVirtualKeyCodeUndefined: Self = StObject.set(x, "windowsVirtualKeyCode", js.undefined)
  }
}
