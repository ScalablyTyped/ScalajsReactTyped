package typingsJapgolly.dojo.dojox.editor.plugins

import typingsJapgolly.dojo.dijit._editor.Plugin
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

/**
  * Permalink: http://dojotoolkit.org/api/1.9/dojox/editor/plugins/PrettyPrint.html
  *
  * This plugin provides a mechanism by which to 'beautify HTML'
  * generated by the editor.  It is by no means perfect.
  *
  * @param args       OptionalInitial settings for any of the attributes.
  */
@JSGlobal("dojox.editor.plugins.PrettyPrint")
@js.native
class PrettyPrint () extends Plugin {
  def this(args: js.Object) = this()
  /**
    *
    */
  var entityMap: js.Object = js.native
  /**
    * The indentBy property configures if the plugin should use a
    * set number of spaces for indent (between 1-5), or just tab.
    * The default value is -1, which means tab.
    *
    */
  var indentBy: Double = js.native
  /**
    * The lineLength property configures if the plugin should break up long
    * text lines into N lines of 'lineLength' length.  This parameter does not
    * take into account indention depth, only text line length.  The default is -1
    * which means unlimited line length.
    *
    */
  var lineLength: Double = js.native
  /**
    * Over-ride to take over getValue of editor so that
    * we can 'pretty' the output.
    *
    * @param editor
    */
  def setEditor(editor: js.Any): Unit = js.native
  /**
    * Over-ride to do nothing.
    * We don't want to append a button, we take over getValue.
    *
    * @param toolbar
    */
  def setToolbar(toolbar: js.Any): Unit = js.native
}

