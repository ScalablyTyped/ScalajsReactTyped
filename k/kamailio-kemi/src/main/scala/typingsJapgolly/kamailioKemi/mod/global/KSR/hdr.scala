package typingsJapgolly.kamailioKemi.mod.global.KSR

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object hdr {
  
  @JSGlobal("KSR.hdr")
  @js.native
  val ^ : js.Any = js.native
  
  // Append header to current SIP message (request or reply). It will be added after the last header.
  inline def append(hdr: String): Double = ^.asInstanceOf[js.Dynamic].applyDynamic("append")(hdr.asInstanceOf[js.Any]).asInstanceOf[Double]
  
  // Append header to current SIP message (request or reply).
  // It will be added after the first header matching the name hdrName.
  inline def appendAfter(hdr: String, hdrName: String): Double = (^.asInstanceOf[js.Dynamic].applyDynamic("append_after")(hdr.asInstanceOf[js.Any], hdrName.asInstanceOf[js.Any])).asInstanceOf[Double]
  
  // Add a header to the SIP response to be generated by Kamailio for the current SIP request.
  inline def appendToReply(hdr: String): Double = ^.asInstanceOf[js.Dynamic].applyDynamic("append_to_reply")(hdr.asInstanceOf[js.Any]).asInstanceOf[Double]
  
  // Insert header to current SIP message (request or reply).
  // It will be added before the first header.
  inline def insert(hdr: String): Double = ^.asInstanceOf[js.Dynamic].applyDynamic("insert")(hdr.asInstanceOf[js.Any]).asInstanceOf[Double]
  
  // Insert header to current SIP message (request or reply).
  // It will be added before the header matching the name hdrName.
  inline def insertBefore(hdr: String, hdrName: String): Double = (^.asInstanceOf[js.Dynamic].applyDynamic("insert_before")(hdr.asInstanceOf[js.Any], hdrName.asInstanceOf[js.Any])).asInstanceOf[Double]
  
  // Return greater than 0 if a header with the name hdrName exists and less than 0 if there is no such header.
  inline def isPresent(hdrName: String): Double = ^.asInstanceOf[js.Dynamic].applyDynamic("is_present")(hdrName.asInstanceOf[js.Any]).asInstanceOf[Double]
  
  // Remove all the headers with the name hdrName.
  inline def remove(hdrName: String): Double = ^.asInstanceOf[js.Dynamic].applyDynamic("remove")(hdrName.asInstanceOf[js.Any]).asInstanceOf[Double]
}
