package typingsJapgolly.winkTokenizer.mod

import japgolly.scalajs.react.CallbackTo
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation._

trait Tokenizer extends js.Object {
  /**
  	 * Defines the configuration in terms of the types of token that will be extracted by tokenize() method.
  	 * Note by default, all types of tokens will be detected and tagged automatically.
  	 * @param config configuration object
  	 * @returns number of true parameters
  	 */
  def defineConfig(config: Config): Double
  /**
  	 * Returns the finger print of the tokens generated by the last call to tokenize().
  	 * A finger print is a string created by sequentially joining the unique code of each token's type.
  	 *
  	 * currency: 'r', email: 'e', emoji: 'j', emoticon: 'c',
  	 * hashtag: 'h', number: 'n', ordinal: 'o',
  	 * punctuation: token becomes fingerprint,
  	 * quoted_phrase: 'q', symbol: token becomes fingerprint,
  	 * time: 't', mention: 'm', url: 'u', word: 'w',
  	 * @return string of token types
  	 */
  def getTokensFP(): String
  /**
  	 * Tokenize a string
  	 * @param sentence to be tokenized
  	 * @returns tokens
  	 */
  def tokenize(sentence: String): js.Array[Token]
}

object Tokenizer {
  @scala.inline
  def apply(
    defineConfig: Config => CallbackTo[Double],
    getTokensFP: CallbackTo[String],
    tokenize: String => CallbackTo[js.Array[Token]]
  ): Tokenizer = {
    val __obj = js.Dynamic.literal()
    __obj.updateDynamic("defineConfig")(js.Any.fromFunction1((t0: typingsJapgolly.winkTokenizer.mod.Config) => defineConfig(t0).runNow()))
    __obj.updateDynamic("getTokensFP")(getTokensFP.toJsFn)
    __obj.updateDynamic("tokenize")(js.Any.fromFunction1((t0: java.lang.String) => tokenize(t0).runNow()))
    __obj.asInstanceOf[Tokenizer]
  }
}

